This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.github/
  workflows/
    flake-check.yaml
    gh-pages.yaml
    update-sources.yaml
  FUNDING.yml
dev/
  book/
    src/
      Contributing.md
      Dendritic.md
      Dendrix-Conventions.md
      Dendrix-Layers.md
      Dendrix-Trees.md
      Development.md
      FAQ.md
      Getting-Started.md
      README.md
      SUMMARY.md
    theme/
      catppuccin.css
      dendrix_repos.js
      elm-init.js
      elm.js
      index.hbs
    .gitignore
    book.toml
    index.html
  community/
    discovered/
      dliberalesso-nix-config/
        default.json
        facter.json
        gui.json
        hyprde.json
        irpf.json
        laptop.json
        work.json
        wsl.json
      drupol-infra/
        hosts/
          nixos.json
          x13.json
          x260.json
          x280.json
          xeonixos.json
        ai.json
        base.json
        bluetooth.json
        desktop.json
        dev.json
        displaylink.json
        email.json
        facter.json
        fwupd.json
        games.json
        guacamole.json
        messaging.json
        openssh.json
        pol.json
        root.json
        shell.json
        sound.json
        vpn.json
        work.json
      gaetanlepage-nix-config/
        agenix.json
        android.json
        bg-stream.json
        bluetooth.json
        bootloader.json
        caddy-reverse-proxies.json
        cloud-backup.json
        core.json
        csConfig.json
        desktop-programs.json
        desktop.json
        dev.json
        display-manager.json
        dunst.json
        email.json
        firefox.json
        flameshot.json
        foot.json
        gammastep.json
        gtk.json
        home-manager.json
        host_cuda.json
        host_feroe.json
        host_framework.json
        host_inria.json
        host_jrs.json
        host_tank.json
        host_vps.json
        kanshi.json
        keyring.json
        nh.json
        nix-index-database.json
        nix.json
        nvidia.json
        obs.json
        printing.json
        remote-builders.json
        rofi.json
        security.json
        server.json
        sound.json
        ssh-client.json
        ssh-server.json
        streaming.json
        substituters.json
        sway.json
        swaylock.json
        thunar.json
        udiskie.json
        users.json
        waybar.json
        wayland.json
        wireguard-client.json
        xdg.json
        zathura.json
      henrysipp-nix-setup/
        albion.json
        allowedUnfreePackages.json
        base.json
        containers.json
        darwin-desktop.json
        desktop.json
        dev.json
        fonts.json
        games.json
        gawain.json
        gnome.json
        guren.json
        henry.json
        nixvim.json
        packages.json
        plasma.json
        root.json
        shell.json
        sound.json
        system.json
        work.json
      icyd-nixvim/
        additional-plugins.json
        auto-session.json
        colorizer.json
        compiler.json
        completion.json
        core.json
        debug.json
        dial.json
        firenvim.json
        full.json
        git.json
        harpoon.json
        lsp.json
        markdown.json
        maximize.json
        navigator.json
        neorg.json
        oil.json
        optimizations.json
        overseer.json
        project-nvim.json
        telescope.json
        tests.json
        todo-comments.json
        treesitter.json
        trouble.json
        ufo.json
        ui.json
        utils.json
        yanky.json
      Maka-77x-nixconf7/
        hosts/
          gouda.json
          nixos.json
        ai.json
        base.json
        bluetooth.json
        desktop.json
        dev.json
        displaylink.json
        email.json
        facter.json
        fwupd.json
        games.json
        guacamole.json
        messaging.json
        mimi.json
        openssh.json
        root.json
        shell.json
        sound.json
        virtualisation.json
        vpn.json
        work.json
      quasigod-nixconfig/
        cachix.json
        default.json
        gaming.json
        hacking.json
        laptop.json
        localai.json
        plymouth.json
        remote.json
        replays.json
        secure-boot.json
        server.json
        ssh.json
        syncthing-client.json
        syncthing-server.json
        virtualisation.json
        waydroid.json
        workstation.json
        zfs.json
        zsa-kb.json
      vic-vix/
        aarch64-darwin.json
        aarch64-linux.json
        all-firmware.json
        bootable.json
        darwin.json
        gnome-desktop.json
        kde-desktop.json
        kvm-amd.json
        kvm-intel.json
        macos-keys.json
        nix-index.json
        nix-registry.json
        nix-settings.json
        nixos.json
        nvidia.json
        rdesk.json
        unfree.json
        vic.json
        vscode-server.json
        wl-broadcom.json
        wsl.json
        x86_64-darwin.json
        x86_64-linux.json
        xfce-desktop.json
      trees.json
    _pipeline.nix
    options.nix
    vic-vix.nix
  elm/
    src/
      Data.elm
      Deco.elm
      Ports.elm
      Results.elm
      Search.elm
    tests/
      DecoTests.elm
    elm-srcs.nix
    elm.json
    registry.dat
  layers/
    vix/
      modules/
        default.nix
      README.md
    options.nix
  lib/
    discover.nix
    transpose.nix
  modules/
    _gh-provision-nix.nix
    checks.nix
    devshell.nix
    direnv.nix
    discovered.nix
    elm.nix
    files.nix
    fmt.nix
    gh-flake-check.nix
    gh-pages.nix
    gh-update-sources.nix
    git-hooks.nix
    gitignore.nix
    systems.nix
  npins/
    default.nix
    sources.json
  default.nix
  flake.lock
  flake.nix
templates/
  default/
    modules/
      default.nix
      layers.nix
    flake.lock
    flake.nix
  vix/
    modules/
      default.nix
      layers.nix
    flake.lock
    flake.nix
.envrc
.gitignore
default.nix
flake.lock
flake.nix
LICENSE
README.md
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".github/workflows/flake-check.yaml">
{
  "concurrency": {
    "cancel-in-progress": true,
    "group": "test"
  },
  "jobs": {
    "check": {
      "environment": {
        "name": "check",
        "url": "${{steps.check.outputs.page_url}}"
      },
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v4"
        },
        {
          "uses": "wimpysworld/nothing-but-nix@main",
          "with": {
            "hatchet-protocol": "holster"
          }
        },
        {
          "uses": "cachix/install-nix-action@v31"
        },
        {
          "uses": "cachix/cachix-action@v16",
          "with": {
            "authToken": "${{secrets.CACHIX_AUTH_TOKEN}}",
            "name": "dendrix"
          }
        },
        {
          "id": "check",
          "run": "nix flake --accept-flake-config check path:dev --override-input dendrix . --print-build-logs"
        }
      ]
    }
  },
  "name": "flake check",
  "on": {
    "push": {},
    "workflow_call": {},
    "workflow_dispatch": {}
  }
}
</file>

<file path=".github/workflows/gh-pages.yaml">
{
  "concurrency": {
    "cancel-in-progress": true,
    "group": "pages"
  },
  "jobs": {
    "deploy": {
      "environment": {
        "name": "github-pages",
        "url": "${{steps.deployment.outputs.page_url}}"
      },
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v4"
        },
        {
          "uses": "wimpysworld/nothing-but-nix@main",
          "with": {
            "hatchet-protocol": "holster"
          }
        },
        {
          "uses": "cachix/install-nix-action@v31"
        },
        {
          "uses": "cachix/cachix-action@v16",
          "with": {
            "authToken": "${{secrets.CACHIX_AUTH_TOKEN}}",
            "name": "dendrix"
          }
        },
        {
          "name": "flake check",
          "run": "nix flake --accept-flake-config check path:dev --override-input dendrix . --print-build-logs"
        },
        {
          "name": "gen book",
          "run": "nix run nixpkgs#mdbook -- build dev/book"
        },
        {
          "uses": "actions/configure-pages@v5"
        },
        {
          "uses": "actions/upload-pages-artifact@v3",
          "with": {
            "path": "./dev/book/book"
          }
        },
        {
          "id": "deployment",
          "uses": "actions/deploy-pages@v4"
        }
      ]
    }
  },
  "name": "gh-pages",
  "on": {
    "push": {
      "branches": [
        "main"
      ],
      "paths": [
        "dev/book/**",
        "dev/elm/**",
        "dev/npins/**"
      ]
    },
    "workflow_call": {},
    "workflow_dispatch": {}
  },
  "permissions": {
    "contents": "read",
    "id-token": "write",
    "pages": "write"
  }
}
</file>

<file path=".github/workflows/update-sources.yaml">
{
  "concurrency": {
    "cancel-in-progress": true,
    "group": "update"
  },
  "jobs": {
    "update": {
      "environment": {
        "name": "update-sources",
        "url": "${{steps.update.outputs.pull-request-url}}"
      },
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v4"
        },
        {
          "uses": "wimpysworld/nothing-but-nix@main",
          "with": {
            "hatchet-protocol": "holster"
          }
        },
        {
          "uses": "cachix/install-nix-action@v31"
        },
        {
          "uses": "cachix/cachix-action@v16",
          "with": {
            "authToken": "${{secrets.CACHIX_AUTH_TOKEN}}",
            "name": "dendrix"
          }
        },
        {
          "run": "set -e\n(cd dev; nix run nixpkgs#npins -- update)\nrm -rf ./dev/community/discovered/*-*\nexport DISCOVER_ASPECTS=true\nnix run --impure --accept-flake-config --override-input dendrix . --print-build-logs ./dev#genfiles\nnix run --accept-flake-config --override-input dendrix . --print-build-logs ./dev#fmt\nnix flake --accept-flake-config check path:dev --override-input dendrix . --print-build-logs\n"
        },
        {
          "id": "update",
          "uses": "peter-evans/create-pull-request@v7",
          "with": {
            "assignees": "vic",
            "author": "Victor Borja <vborja@apache.org>",
            "body": "Please review.",
            "branch": "update-sources",
            "branch-suffix": "timestamp",
            "commit-message": "Update sources",
            "title": "Update community sources."
          }
        }
      ]
    }
  },
  "name": "update sources",
  "on": {
    "repository_dispatch": {},
    "schedule": [
      {
        "cron": "0 5 * * *"
      }
    ],
    "workflow_call": {},
    "workflow_dispatch": {}
  },
  "permissions": {
    "contents": "write",
    "id-token": "write",
    "pull-requests": "write"
  }
}
</file>

<file path=".github/FUNDING.yml">
# These are supported funding model platforms

github: [vic] # Replace with up to 4 GitHub Sponsors-enabled usernames e.g., [user1, user2]
patreon: # Replace with a single Patreon username
open_collective: # Replace with a single Open Collective username
ko_fi: oeiuwq # Replace with a single Ko-fi username
tidelift: # Replace with a single Tidelift platform-name/package-name e.g., npm/babel
community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
liberapay: # Replace with a single Liberapay username
issuehunt: # Replace with a single IssueHunt username
lfx_crowdfunding: # Replace with a single LFX Crowdfunding project-name e.g., cloud-foundry
polar: # Replace with a single Polar username
buy_me_a_coffee: # Replace with a single Buy Me a Coffee username
thanks_dev: # Replace with a single thanks.dev username
custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']
</file>

<file path="dev/book/src/Contributing.md">
# Contributing

Since we all now have agreed to follow the Dendritic
pattern to organize our files, lets take a few more guidelines to make eveybody's life easier:

- Always be nice, and have respect for others.
- Be professional and considerate we are giving our time and energy on this project as an invaluable good for others.
- Contributions are welcome as long as you also make a compromise to become maintainer for your aspect don't abandon your contribution easily. (Unmaintained files will be removed.)
- This is a community project, so as soon as your PR is merged you'll also get commit bit, however we restrict
  changes to be only via PRs and require code-owners review before merge.
- Prefer linear git history, squash PRs and no merge-commit. Vic recommends working with jujutsu.
</file>

<file path="dev/book/src/Dendritic.md">
# Dendritic Nix

[Dendritic](https://github.com/mightyiam/dendritic) is a [pattern](https://discourse.nixos.org/t/pattern-every-file-is-a-flake-parts-module/61271) for writing nix configurations based on [flake-parts](https://flake.parts)'s [`modules` option](https://flake.parts/options/flake-parts-modules.html).

We say that Dendritic nix configurations are _aspect-oriented_, meaning that each nix file
provides config-values for the same _aspect_ across different nix configuration classes.

Normally, this is done via flake-parts' `flake.modules.<class>.<aspect>` options.

Where `<class>` is a type of configuration, like [`nixos`](https://nixos.org/manual/nixos/stable/options), [`darwin`](https://nix-darwin.github.io/nix-darwin/manual/), [`homeManager`](https://home-manager.dev/manual/23.11/options.xhtml), [`nixvim`](https://nix-community.github.io/nixvim/search/), etc.

And `<aspect>` is the _cross-cutting concern_ or _feature_ that is being configured across
one or more of these classes.

> [!NOTE]
> Dendritic is a configuration _pattern_ - a way-of-doing-. Not a library nor a framework.
> See [No Dependencies](#no-dependencies).

### Example of a dendritic configuration.

As an example of what a dendritic nix config looks like, suppose we want to configure ssh facilities
(the `ssh` aspect) across our NixOS, Nix-darwin hosts and user homes.

```nix
# modules/ssh.nix -- like every other file inside modules, this is a flake-parts module.
{ inputs, config, ... }: let
  scpPort = 2277; # let-bindings or custom flake-parts options communicate values across classes
in {
  flake.modules.nixos.ssh = {
    # Linux config: setup OpenSSH server, firewall-ports, etc.
  };

  flake.modules.darwin.ssh = {
    # MacOS config: enable MacOS builtin ssh server, etc.
  };

  flake.modules.homeManager.ssh = {
    # setup ~/.ssh/config, authorized_keys, private keys secrets, etc.
  };

  perSystem = {pkgs, ...}: {
    # custom packages taking advantage of ssh facilities, eg deployment-scripts.
  };
}
```

That's it. This is what Dendritic is all about. By following this configuration pattern you
will notice your code now incorporates the following:

## Denritic Advantages

### No need to use `specialArgs` for communicating values.

A common pattern for passing values between different nix configurations types (e.g., between a `nixos` config and a `homeManager` one),
is to use the [`specialArgs`](https://nixos.org/manual/nixos/stable/options#opt-_module.args) module argument or [`home-manager.extraSpecialArgs`](https://home-manager.dev/manual/23.11/nixos-options.xhtml#nixos-opt-home-manager.extraSpecialArgs).

This is considered an _anti-pattern in dendritic setups_, since there's no need to use `specialArgs` at all. Because you can
always use let bindings (or even define your own _options_ at the flake-parts level) to share values across different configuration classes.

```nix
# modules/vic.nix -- a flake-parts module that configures the "vic" user aspect.
let
  userName = "vic"; # a shared value between classes
in
{
  flake.modules.nixos.${userName} = {
     users.users.${userName} = { isNormalUser = true; extraGroups = [ "wheel" ]; };
  };

  flake.modules.darwin.${userName} = {
     system.primaryUser = userName; # note that configuring a user is different on MacOS than on NixOS.
  };

  flake.modules.homeManager.${userName} =
    { pkgs, lib, ... }:
    {
      home.username = lib.mkDefault userName;
      home.homeDirectory = lib.mkDefault (if pkgs.stdenvNoCC.isDarwin then "/Users/${userName}" else "/home/${userName}");
      home.stateVersion = lib.mkDefault "25.05";
    };
}
```

### No file organization restrictions.

The dendritic pattern imposes no restrictions on how you organize or name your nix files.

Unlike other nix-configuration libs/frameworks that mandate a predefined structure. In Dendritic,
you are free to move or rename each file as it better suits your mental model.

This is possible because:

### All nix files have the same semantic meaning.

In a Dendritic setup, each `.nix` file has only one interpretation: A flake-parts module.

Unlike other kinds of setup where each nix file can be a `nixos` configuration, or a `home-manager` configuration, or
a package, or something entirely different. In such setups, loading a file requires you to know what kind of meaning
each file has before importing it.

This leads us to having:

### No manual file imports.

All files being flake-parts modules, means we have no need for manually importing nix files. They can all be
loaded at once into a single import.

The Dendritic community commonly uses [`vic/import-tree`](https://github.com/vic/import-tree) for this.
Note: import-tree ignores any file that has an `/_` as part of its path.

```nix
# flake.nix
{
  inputs = {
    flake-parts.url = "github:hercules-ci/flake-parts";
    import-tree.url = "github:vic/import-tree";
    # all other inputs your flake needs, like nixpkgs.
  };
  outputs = inputs: inputs.flake-parts.lib.mkFlake { inherit inputs; } (inputs.import-tree ./modules);
}
```

This is the only place you will call `import-tree` and it will load all files under `./modules` recursively.

This means we can have:

### Minimal and focused flake.nix

Instead of having huge `flake.nix` files with lots of nix logic inside. It is now possible
to move all nix logic into well organized auto-imported flake-parts in `./modules`. This way, `flake.nix` serves more as a manifest of dependencies and flake entrypoint.

Some people go a step further and use [`vic/flake-file`](https://github.com/vic/flake-file) to manage their flake.nix automatically, by letting each flake-parts module also define the flake inputs needed by each module.

Any flake-parts module contributes to flake.nix as needed, either inputs/flake-configuration (by using `vic/flake-file`) or outputs (modules/packages/checks/osConfigurations/etc by using flake-parts options).

```nix
# ./modules/home/vim.nix
{ inputs, ... }:
{
  flake-file.inputs.nixvim.url = "github:nix-community/nixvim";
  flake.modules.homeManager.vim = {
    # use inputs.nixvim
  };
}
```

### Feature Centric instead of Host Centric.

As noted by Pol Dellaiera in [Flipping the Configuration Matrix](https://not-a-number.io/2025/refactoring-my-infrastructure-as-code-configurations/#flipping-the-configuration-matrix) -a very recommended read-:

> [In a Dendritic setup] the configuration is now structured around features, not hostnames. It is a shift in the axis of composition, essentially an inversion of configuration control. What may seem like a subtle change at first has profound implications for flexibility, reuse, and maintainability.

You will notice that you start naming your files around the `aspect`s (features) they define
instead of where they are specifically applied.

It might be useful to ask yourself **_how_** you like to use your Linux Environment, instead of **_what_** components constitute the environment or **_where_** will the environment finally applied. By doing so, you will start naming your aspects around "usability concerns", eg. `macos-like-bindings`, `scrolling-desktop`, `tui` interfaces, nextgen `cli` utilities, `ai` intergation, etc. Instead of naming modules around specific packages or host-names.

In the following example, the `scrolling-desktop` aspect is included accross different operating systems:
On Linux, `flake.modules.nixos.scrolling-desktop` might enable [`niri`](https://variety4me.github.io/niri_docs/) and on MacOS, `flake.modules.darwin.scrolling-desktop` might enable [`paneru`](https://github.com/karinushka/paneru). Each configuration uses the tools available on the respective platform, but the aspect is the same, and you could use flake-parts level options or let-bindings to configure behaviour on both (e.g, the scrolling animations speed).

```nix
# ./modules/hosts.nix
{ inputs, ... }:
{
  flake.nixosConfigurations.my-host = inputs.nixpkgs.lib.nixosSystem {
    system = "aarm64-linux";
    modules = with inputs.self.modules.nixos;  [ ai ssh vpn mac-like-keyboard scrolling-desktop ];
  };
  flake.darwinConfigurations.my-host = inputs.nix-darwin.lib.darwinSystem {
    system = "aarm64-darwin";
    modules = with inputs.self.modules.darwin; [ ai ssh vpn scrolling-desktop ];
  };
}
```

### Feature _Closures_

By closure, we mean: everything that is needed for a given _feature_ to work is
configured closely, in the same unit (file/directory named after the feature).

Because a single `feature.nix` contributes to different configuration classes, it has all
the information on how feature works, instead of having to look at different files for
package definitions, nixos or home-manager configurations dispersed over all over the tree.

If you need to look where some feature is defined on a repo you don't know,
it will be easier to simply guess by path name. _Paths become documentation_.

### _Incremental_ Features

Since all nix files are loaded automatically. You can increment the capabilities that an
existing `feature-x/basic.nix` provides by just creating another `feature-x/advanced.nix`.
Both of them should contribute to the same aspect: `flake.modules.<class>.feature-x`, but
each file focuses on the different capabilities they provide to the system whole.

This way, you can split `feature-x/advanced.nix` into more files. And adding or removing
files from your modules (or adding an `_` for them to be ignored) has no
other impact than the overall capabilities provided into your systems.

This is an easy way to disable loading files while on a huge refactor. Or when some hosts
or features should be decommissioned immediately/temporarily.

### No dependencies

> _Dendritic_ is a configuration _pattern_ - a _way-of-doing_-, not a library nor a framework.

The Dendritic repository has no code at all and any libraries mentioned on this document are mere recommendations and pointers to things other people using the Dendritic pattern has found useful.

You are free and encouraged to explore new ways of doing or wiring Dendritic setups. Be sure to share your insights with the community.

Because all of this, there are many possible implementations of the Dendritic pattern.

Some people like to use inline-style definitions:

```nix
{ inputs, ... }:
{
  flake.modules.<class1>.<aspect1> = { ... };
  flake.modules.<class2>.<aspect1> = { ... };
  flake.modules.<class3>.<aspect1> = { ... };
}
```

Others might prefer nested modules using libs like [unify](https://codeberg.org/quasigod/unify) or [`vic/flake-aspects`](https://github.com/vic/flake-aspects):

All is good as long as you expose `flake.modules.<class>.<aspect>` attribute sets.

```nix
# using vic/flake-aspects:
{ inputs, ... }:
{
  flake.aspects.<aspect1> = {
    <class1> = { ... };
    <class2> = { ... };
    <class3> = { ... };
  };
}
```

### Dendritic community.

Last but not least. By using the dendritic pattern you open the door to defining or re-using
existing generic (user/host independent) configurations from the community.

This is the goal of the Dendrix project: To allow people share dendritic configurations and
socially enhance their capabilities.
</file>

<file path="dev/book/src/Dendrix-Conventions.md">
# Dendrix conventions

There are some non-mandatory conventions on Dendrix. However using them can ease integration of your repo.

Some of these conventions translate as code in the [default pipe-line](https://github.com/vic/dendrix/blob/main/dev/community/_pipeline.nix) used to configure each import-tree.

## Having a `modules/community` directory.

By default, dendrix detects if the community repo has a `modules/community` directory. If so, _only_ that directory is scanned for aspects. So we recommend having such a directory.

Otherwise the `modules/` directory will be scanned and shared.

If you, however, prefer to have another structure, it is possible to define a `paths` [option](https://github.com/vic/dendrix/blob/main/dev/community/options.nix).

## Anything `private` is not shared.

Any file (even inside `modules/community`) having a `private` infix anywhere in their path is not visible to the community.

This is akin to import-tree's `_` convention used for ignoring files. However `private` paths can be loaded by your flake but
not on Dendrix import-trees.

## Flags

Flags are a convention for allowing consumers of your repo
to easily select or skip collections of files.

A flag has the following form: `+flag`. A plus-sign and a name consisting of alphanumeric characters and `-` hypen.

Some examples of flags are: `+lsp`, `+local-ai`, `+rust`.

Flags can be present anywhere on a path: directory or file names.

By using flags in your paths, it can be posible for people do
things like including/excluding some capabilities:

```nix
{
  imports = [
    # Include anything with +vim on their path.
    # Exclude anything with +emacs on their path.
    (inputs.dendrix.your-repo.flagged "-emacs +vim")
  ];
}
```

## A clean `flake.nix` that just `import-tree ./modules`

As noted in the [focused flake.nix](Dendritic.html#minimal-and-focused-flakenix), a best practice is to move all your nix logic into a nix file inside `./modules`.

People usually have a `./modules/flake` for this purpose.

## Using standard nix features.

At least on community intended directories. Outside of your shared directories
you can use whatever nix features you want or any custom input of yours.
However, keeping the shared code usable for most people is best for code adoption.
</file>

<file path="dev/book/src/Dendrix-Layers.md">
# Dendrix layers

[Layers](https://github.com/vic/dendrix/tree/main/dev/layers) are cross-repository flake-parts modules that provide community-managed
facilities by importing from different [`community import-trees`](https://github.com/vic/dendrix/tree/main/dev/community/discovered).

> In the future, Layers can allow to provide custom batteries-included specialized NixOS distributions.
> Like, NixOS for Gaming, NixOS for AI, NixOS for DevSec Ops, etc.

## Using Existing Layers

Layers are usable by anyone who uses flake-parts, you just need to import the corresponding module.

If you were to use the example AI layer (from below), you'd do the following on a flake module of yours:

```nix
# your ./modules/ai.nix
{ inputs, ...}:
{
   imports = [ inputs.dendrix.ai ];
}
```

## Creating Layers

A Dendrix Layer is defined at `./dev/layers/<name>/modules/**.nix`. If you create one, make sure you
also provide a `./dev/layers/<name>/README.md` with details about usage or input requirements.

For example, if the community comes up with an `ai` aspect shared across different repos, we
could have a _blessed_ ai layer providing files from both repos and community-managed configurations.

```nix
# This is an example of how an AI Layer might be defined in our Dendrix community repository.
#
# ./dev/layers/ai/modules/default.nix
{ inputs, lib, ... }:
let
  ai-one = inputs.dendrix.repo-one.ai; # import-tree for AI aspect from repo-one.
  ai-two = inputs.dendrix.repo-two.ai; # import-tree for AI aspect from repo-two.
in
{
  imports = [ ai-one ai-two ];

  # flake-level community options.
  options.ai.something.enable = lib.mkEnableOption "Enable something for AI";

  # packages,checks,devshells,etc for AI
  perSystem = {pkgs, ...}: {
    packages.ai-cli = { };
  };

  # extensions to the ai aspect.
  flake.modules.nixos.ai = { };
  flake.modules.darwin.ai = { };
  flake.modules.homeManager.ai = { };
}
```

For this to be possible we first need to collaborate around configuring the `ai` feature
in `repo-one` and `repo-two` so that their configurations do not depend on host/user specifics.

This is quite possible, because repos are free to share only part of their trees with the community.
Keeping the non-shared parts for their private infra customization.

```shell
# only this is shared to the community
./modules/community/ai.nix

# these two are not community shared.
./modules/hosts/myhost/ai.nix # augmented for host specific gpu.
./modules/users/vic/ai.nix    # with user specific credentials.
```
</file>

<file path="dev/book/src/Dendrix-Trees.md">
# Dendrix import-trees

Our last section ended with the following mission statement:

> This is the goal of the Dendrix project: To allow people share dendritic configurations and
> socially enhance their capabilities.

As a first step into this goal, Dendrix [discovers](https://github.com/vic/dendrix/blob/main/dev/lib/discover.nix) what `aspect`s and which nix configuration `class`es are provided by the dendritic [community repository sources](https://github.com/vic/dennix/blob/main/dev/npins/sources.json).

The sidebar on the left shows a filtering UI that serves three purposes:

- Document which aspects/classes are found on each repo and their locations.
- Visibility on what names are used by the community for defining aspects/classes.
- Allow people to re-use existing aspects by providing import-trees [to them](https://github.com/vic/dendrix/tree/main/dev/community/discovered).

## Using Community import-trees

For each [community repository](https://github.com/vic/dendrix/tree/main/dev/community/discovered),
Dendrix exposes a _top-level_ import-tree that provides all files in the repo shared paths.
And for each discovered aspect in the repo, Dendrix defines another import-tree inside repo attribute.

```nix
# your ./modules/something.nix
{inputs, ...}:
{
  imports = [
    inputs.dendrix.some-repo # ALL shared files in a repository. intended to be used WITH `.filter`.
    inputs.dendrix.some-repo.some-aspect # Files that define flake.modules.<class>.some-aspect
  ];
}
```

An example of a repo's import-tree is [`dendrix.vic-vix`](https://github.com/vic/dendrix/tree/main/dev/community/discovered/vic-vix).
It references all files shared by [vic's `modules/community`](https://github.com/vic/vix/tree/main/modules/community) directory,
except for those having the `private` infix (see [conventions](Dendrix-Conventions.html)).

An example of an repo's aspect import-tree is [`dendrix.vic-vix.macos-keys`](https://github.com/vic/dendrix/blob/main/dev/community/discovered/vic-vix/macos-keys.json) that provides MacOS like keys on Linux using `keyd`.

## Community Participation.

### Sharing re-usable parts of your Dendritic configs.

You are free to send a PR adding/removing your dendritic repo into `dev/npins/sources.json`.

If you have an uncommon directory layout, or you want to share custom import-trees, you can specify [specific community `paths`](https://github.com/vic/dendrix/blob/main/dev/community/vic-vix.nix). (see all [options](https://github.com/vic/dendrix/blob/main/dev/community/options.nix))

As an example in the previous link, vic has a `modules/community` subdir, indicating that
everything outside of it might not be ready for re-use by other people. perhaps because it depends on some hardware or
host-specifc or user-specific settings.

### Organizing with other people around aspects.

The better we organize and name our files around aspects, the better it will be to discover their intent and re-usability.

It is our hope that using the UI at the left, we can discover how are community members naming our aspects
or organizing our files, and we can participate in community discussions around aspect's naming conventions.
</file>

<file path="dev/book/src/Development.md">
# Development

We recommend to use `direnv` or simply run `nix develop ./dev` to load the env.
If you are using direnv, we provide an `.envrc` for it.

Upon entering the shell, you will see a menu of useful commands:

```shell
$ nix develop ./dev
🔨 Welcome to devshell

[[general commands]]

  book         - serve dev/book
  check        - run flake checks
  discover     - generate files with discovery-community-aspects enabled.
  elm-build    - compile elm debug mode
  elm-check    - run elm tests
  elm-registry - use elm2nix to regen dependencies registry for nix
  files        - fmt / genfiles / fmt
  fmt          - run code formatter
  genfiles     - generate files from sources
  menu         - prints this menu
  pins         - run npins inside dev
```
</file>

<file path="dev/book/src/FAQ.md">
# Frequently Asked Questions

- Are these configurations restriced to dendritic setups?

  Yes. The reason is that using dendritic patterns allows
  us to easily combine configs from many different community sources
  knowing that each and every .nix file will be a flake-parts module.

  Layers (blessed presets) are always loaded by import-tree,
  but _only enabled_ when you include them as part of a top-level module of yours.

- Is dendrix a NixOS based distribution ?

  In a way, but we still don't provide customized bootable installers.

  It is more a flake-parts configurations collection that can be included
  on any dendritic setup.

- Can I contribute my _awesome Desktop_ rice?

  Sure! the best way to do that is to keep your desktop rice on your own repository.
  And use this repo to add an import-tree object pointing to it. See the notes above
  about contributing on `dev/npins/sources.json` and `dev/community/*.nix`.

- How are layers made?

  A layer is a _blessed_ dendritic setup, aimed to reuse aspects from the community
  provided dendritic repositories. However these blessed configs might have conventions
  that community repositories not necessarily follow (since our repos are mainly used
  for our own infra). So it is part of this community to create discussions about how
  to name things so that best practices and conventions arise around sharing and
  extending known aspects.

  For example, if we had a `gaming` aspect. We would need conventions on how to name
  aspect modules for gaming. And people would likely provide such dendritic configurations
  on their setups.

  So, long story short, layers are community owned setups. And repos are owned by
  a respective community member.

- How about Games/AI/Devops/Security layers?

  You are right on point!, that's precisely why this project started. We also
  want to provide specialized versions of NixOS focused on pre-configured security, gaming,
  development setups.
</file>

<file path="dev/book/src/Getting-Started.md">
# Getting Started

## Usage (for existing flake-parts setups)

Add the `dendrix` input to your flake:

```nix
# flake.nix -- add the dendrix input:
{
  inputs.dendrix.url = "github:vic/dendrix";

  # Flatten dependencies.
  #inputs.dendrix.inputs.import-tree.follows = "import-tree";
  #inputs.dendrix.inputs.nixpkgs-lib.follows = "nixpkgs-lib";
}
```

Then import Dendrix trees/layers on any flake-parts module of yours:

```nix
{ inputs, ... }:
{
  imports = [
    # inputs.dendrix.vic-vix.macos-keys # example <macos-keys> aspect.
    # inputs.dendrix.vix # example layer, see https://github.com/vic/dendrix/tree/main/dev/layers
  ];
}
```

See usage instructions for either [Dendrix Trees](Dendrix-Trees.html#using-community-import-trees) or [Dendrix Layers](Dendrix-Layers.html#using-existing-layers).

## Quick Start (for NixOS newcomers)

> Dendrix is a work in progress. We aim to provide batteries-included preconfigured NixOS experience for newcomers.
> But we are currently working on it.

We provide some [templates](https://github.com/vic/dendrix/tree/main/templates) you can
use to start a new system flake.

```
nix flake init github:vic/dendrix#template
```

Then edit your [`layers.nix`](https://github.com/vic/dendrix/tree/main/templates/default/modules/layers.nix) file.

### Try it Online!

If you are not currently a NixOS user, you can try
running an ephemeral NixOS on the web.

- Go to [Distrosea NixOS](https://distrosea.com/select/nixos/), select latest `minimal` release.
- Start a machine and run the following:

```shell
nix run .#os-switch template
```

## Customization

Once you have a `./modules/` directory on your flake, just add flake-parts modules following the dendritic pattern.
All files will be loaded automatically. Edit your `layers.nix` to include dendrix provided aspects you choose.
</file>

<file path="dev/book/src/README.md">
# Dendrix - community-driven distribution of Dendritic Nix configurations.

Editor-distributions like those for nvim/emacs provide community-driven, opinionated configurations that can be easily reused and enabled by newcomers.

The `dendrix` project aims to provide the same experience: having community-managed, author-maintained and no-barrier-of-entry [setups](Dendrix-Layers.html) for everything that can be configured using [flake-parts modules](https://flake.parts/options/flake-parts-modules.html).

In a sense, this repository is akin to [nix-community/NUR](https://github.com/nix-community/NUR) but for flake-parts [dendritic](Dendritic.html) modules that can provide packages and aspects to many different nix configuration classes.

> Dendrix is an on-going effort. We already have all the code infrastructure on this repo to provide [Layers](Dendrix-Layers.html)
> and [aspect import-trees](Dendrix-Trees.html) from community repositories.
>
> However as any _community_ project, the success of Dendrix depends not on a single person, but on people willing to participate on it.
>
> Join us by using Dendrix' exposed trees or by sharing part of your configs with the community, or by joining the [discussion](https://github.com/vic/dennix/discussions) on how to better come up with community-managed configurations.
>
> It all depends on each of us.

Made with <3 by [@vic](https://github.com/vic)
</file>

<file path="dev/book/src/SUMMARY.md">
# Summary

[Introduction](README.md)

[Getting Started](Getting-Started.md)

[Dendritic Nix](Dendritic.md)

[Dendrix `import-tree`s](Dendrix-Trees.md)

[Dendrix layers](Dendrix-Layers.md)

[Dendrix conventions](Dendrix-Conventions.md)

[Contributing](Contributing.md)

[Development](Development.md)

[FAQ](FAQ.md)
</file>

<file path="dev/book/theme/catppuccin.css">
/* https://highlightjs.readthedocs.io/en/latest/css-classes-reference.html */
.latte.hljs {
  color: #4c4f69;
  background: #eff1f5;
}
.latte .hljs-keyword {
  color: #8839ef;
}
.latte .hljs-built_in {
  color: #d20f39;
}
.latte .hljs-type {
  color: #df8e1d;
}
.latte .hljs-literal {
  color: #fe640b;
}
.latte .hljs-number {
  color: #fe640b;
}
.latte .hljs-operator {
  color: #04a5e5;
}
.latte .hljs-punctuation {
  color: #5c5f77;
}
.latte .hljs-property {
  color: #179299;
}
.latte .hljs-regexp {
  color: #ea76cb;
}
.latte .hljs-string {
  color: #40a02b;
}
.latte .hljs-char.escape_ {
  color: #40a02b;
}
.latte .hljs-subst {
  color: #6c6f85;
}
.latte .hljs-symbol {
  color: #dd7878;
}
.latte .hljs-variable {
  color: #8839ef;
}
.latte .hljs-variable.language_ {
  color: #8839ef;
}
.latte .hljs-variable.constant_ {
  color: #fe640b;
}
.latte .hljs-title {
  color: #1e66f5;
}
.latte .hljs-title.class_ {
  color: #df8e1d;
}
.latte .hljs-title.function_ {
  color: #1e66f5;
}
.latte .hljs-params {
  color: #4c4f69;
}
.latte .hljs-comment {
  color: #7c7f93;
}
.latte .hljs-doctag {
  color: #d20f39;
}
.latte .hljs-meta {
  color: #fe640b;
}
.latte .hljs-section {
  color: #1e66f5;
}
.latte .hljs-tag {
  color: #179299;
}
.latte .hljs-name {
  color: #8839ef;
}
.latte .hljs-attr {
  color: #1e66f5;
}
.latte .hljs-attribute {
  color: #40a02b;
}
.latte .hljs-bullet {
  color: #179299;
}
.latte .hljs-code {
  color: #40a02b;
}
.latte .hljs-emphasis {
  color: #d20f39;
  font-style: italic;
}
.latte .hljs-strong {
  color: #d20f39;
  font-weight: bold;
}
.latte .hljs-formula {
  color: #179299;
}
.latte .hljs-link {
  color: #209fb5;
  font-style: italic;
}
.latte .hljs-quote {
  color: #40a02b;
  font-style: italic;
}
.latte .hljs-selector-tag {
  color: #df8e1d;
}
.latte .hljs-selector-id {
  color: #1e66f5;
}
.latte .hljs-selector-class {
  color: #179299;
}
.latte .hljs-selector-attr {
  color: #8839ef;
}
.latte .hljs-selector-pseudo {
  color: #179299;
}
.latte .hljs-template-tag {
  color: #dd7878;
}
.latte .hljs-template-variable {
  color: #dd7878;
}
.latte .hljs-addition {
  color: #40a02b;
  background: rgba(64, 160, 43, 0.15);
}
.latte .hljs-deletion {
  color: #d20f39;
  background: rgba(210, 15, 57, 0.15);
}
.latte :is(h1, h2, h3, h4, h5, h6) a code {
  color: #4c4f69;
}
.latte a code {
  color: #1e66f5;
}
.latte code {
  color: #4c4f69;
  background: #e6e9ef;
}
.latte blockquote blockquote {
  border-top: 0.1em solid #acb0be;
  border-bottom: 0.1em solid #acb0be;
}
.latte hr {
  border-color: #acb0be;
  border-style: solid;
}
.latte del {
  color: #7c7f93;
}
.latte .ace_gutter {
  color: #8c8fa1;
  background: #e6e9ef;
}
.latte .ace_gutter-active-line.ace_gutter-cell {
  color: #ea76cb;
  background: #e6e9ef;
}
.latte .tooltiptext {
  background: #e6e9ef;
  color: #4c4f69;
}

.frappe.hljs {
  color: #c6d0f5;
  background: #303446;
}
.frappe .hljs-keyword {
  color: #ca9ee6;
}
.frappe .hljs-built_in {
  color: #e78284;
}
.frappe .hljs-type {
  color: #e5c890;
}
.frappe .hljs-literal {
  color: #ef9f76;
}
.frappe .hljs-number {
  color: #ef9f76;
}
.frappe .hljs-operator {
  color: #99d1db;
}
.frappe .hljs-punctuation {
  color: #b5bfe2;
}
.frappe .hljs-property {
  color: #81c8be;
}
.frappe .hljs-regexp {
  color: #f4b8e4;
}
.frappe .hljs-string {
  color: #a6d189;
}
.frappe .hljs-char.escape_ {
  color: #a6d189;
}
.frappe .hljs-subst {
  color: #a5adce;
}
.frappe .hljs-symbol {
  color: #eebebe;
}
.frappe .hljs-variable {
  color: #ca9ee6;
}
.frappe .hljs-variable.language_ {
  color: #ca9ee6;
}
.frappe .hljs-variable.constant_ {
  color: #ef9f76;
}
.frappe .hljs-title {
  color: #8caaee;
}
.frappe .hljs-title.class_ {
  color: #e5c890;
}
.frappe .hljs-title.function_ {
  color: #8caaee;
}
.frappe .hljs-params {
  color: #c6d0f5;
}
.frappe .hljs-comment {
  color: #949cbb;
}
.frappe .hljs-doctag {
  color: #e78284;
}
.frappe .hljs-meta {
  color: #ef9f76;
}
.frappe .hljs-section {
  color: #8caaee;
}
.frappe .hljs-tag {
  color: #81c8be;
}
.frappe .hljs-name {
  color: #ca9ee6;
}
.frappe .hljs-attr {
  color: #8caaee;
}
.frappe .hljs-attribute {
  color: #a6d189;
}
.frappe .hljs-bullet {
  color: #81c8be;
}
.frappe .hljs-code {
  color: #a6d189;
}
.frappe .hljs-emphasis {
  color: #e78284;
  font-style: italic;
}
.frappe .hljs-strong {
  color: #e78284;
  font-weight: bold;
}
.frappe .hljs-formula {
  color: #81c8be;
}
.frappe .hljs-link {
  color: #85c1dc;
  font-style: italic;
}
.frappe .hljs-quote {
  color: #a6d189;
  font-style: italic;
}
.frappe .hljs-selector-tag {
  color: #e5c890;
}
.frappe .hljs-selector-id {
  color: #8caaee;
}
.frappe .hljs-selector-class {
  color: #81c8be;
}
.frappe .hljs-selector-attr {
  color: #ca9ee6;
}
.frappe .hljs-selector-pseudo {
  color: #81c8be;
}
.frappe .hljs-template-tag {
  color: #eebebe;
}
.frappe .hljs-template-variable {
  color: #eebebe;
}
.frappe .hljs-addition {
  color: #a6d189;
  background: rgba(166, 209, 137, 0.15);
}
.frappe .hljs-deletion {
  color: #e78284;
  background: rgba(231, 130, 132, 0.15);
}
.frappe :is(h1, h2, h3, h4, h5, h6) a code {
  color: #c6d0f5;
}
.frappe a code {
  color: #8caaee;
}
.frappe code {
  color: #c6d0f5;
  background: #292c3c;
}
.frappe blockquote blockquote {
  border-top: 0.1em solid #626880;
  border-bottom: 0.1em solid #626880;
}
.frappe hr {
  border-color: #626880;
  border-style: solid;
}
.frappe del {
  color: #949cbb;
}
.frappe .ace_gutter {
  color: #838ba7;
  background: #292c3c;
}
.frappe .ace_gutter-active-line.ace_gutter-cell {
  color: #f4b8e4;
  background: #292c3c;
}
.frappe .tooltiptext {
  background: #292c3c;
  color: #c6d0f5;
}

.macchiato.hljs {
  color: #cad3f5;
  background: #24273a;
}
.macchiato .hljs-keyword {
  color: #c6a0f6;
}
.macchiato .hljs-built_in {
  color: #ed8796;
}
.macchiato .hljs-type {
  color: #eed49f;
}
.macchiato .hljs-literal {
  color: #f5a97f;
}
.macchiato .hljs-number {
  color: #f5a97f;
}
.macchiato .hljs-operator {
  color: #91d7e3;
}
.macchiato .hljs-punctuation {
  color: #b8c0e0;
}
.macchiato .hljs-property {
  color: #8bd5ca;
}
.macchiato .hljs-regexp {
  color: #f5bde6;
}
.macchiato .hljs-string {
  color: #a6da95;
}
.macchiato .hljs-char.escape_ {
  color: #a6da95;
}
.macchiato .hljs-subst {
  color: #a5adcb;
}
.macchiato .hljs-symbol {
  color: #f0c6c6;
}
.macchiato .hljs-variable {
  color: #c6a0f6;
}
.macchiato .hljs-variable.language_ {
  color: #c6a0f6;
}
.macchiato .hljs-variable.constant_ {
  color: #f5a97f;
}
.macchiato .hljs-title {
  color: #8aadf4;
}
.macchiato .hljs-title.class_ {
  color: #eed49f;
}
.macchiato .hljs-title.function_ {
  color: #8aadf4;
}
.macchiato .hljs-params {
  color: #cad3f5;
}
.macchiato .hljs-comment {
  color: #939ab7;
}
.macchiato .hljs-doctag {
  color: #ed8796;
}
.macchiato .hljs-meta {
  color: #f5a97f;
}
.macchiato .hljs-section {
  color: #8aadf4;
}
.macchiato .hljs-tag {
  color: #8bd5ca;
}
.macchiato .hljs-name {
  color: #c6a0f6;
}
.macchiato .hljs-attr {
  color: #8aadf4;
}
.macchiato .hljs-attribute {
  color: #a6da95;
}
.macchiato .hljs-bullet {
  color: #8bd5ca;
}
.macchiato .hljs-code {
  color: #a6da95;
}
.macchiato .hljs-emphasis {
  color: #ed8796;
  font-style: italic;
}
.macchiato .hljs-strong {
  color: #ed8796;
  font-weight: bold;
}
.macchiato .hljs-formula {
  color: #8bd5ca;
}
.macchiato .hljs-link {
  color: #7dc4e4;
  font-style: italic;
}
.macchiato .hljs-quote {
  color: #a6da95;
  font-style: italic;
}
.macchiato .hljs-selector-tag {
  color: #eed49f;
}
.macchiato .hljs-selector-id {
  color: #8aadf4;
}
.macchiato .hljs-selector-class {
  color: #8bd5ca;
}
.macchiato .hljs-selector-attr {
  color: #c6a0f6;
}
.macchiato .hljs-selector-pseudo {
  color: #8bd5ca;
}
.macchiato .hljs-template-tag {
  color: #f0c6c6;
}
.macchiato .hljs-template-variable {
  color: #f0c6c6;
}
.macchiato .hljs-addition {
  color: #a6da95;
  background: rgba(166, 218, 149, 0.15);
}
.macchiato .hljs-deletion {
  color: #ed8796;
  background: rgba(237, 135, 150, 0.15);
}
.macchiato :is(h1, h2, h3, h4, h5, h6) a code {
  color: #cad3f5;
}
.macchiato a code {
  color: #8aadf4;
}
.macchiato code {
  color: #cad3f5;
  background: #1e2030;
}
.macchiato blockquote blockquote {
  border-top: 0.1em solid #5b6078;
  border-bottom: 0.1em solid #5b6078;
}
.macchiato hr {
  border-color: #5b6078;
  border-style: solid;
}
.macchiato del {
  color: #939ab7;
}
.macchiato .ace_gutter {
  color: #8087a2;
  background: #1e2030;
}
.macchiato .ace_gutter-active-line.ace_gutter-cell {
  color: #f5bde6;
  background: #1e2030;
}
.macchiato .tooltiptext {
  background: #1e2030;
  color: #cad3f5;
}

.mocha.hljs {
  color: #cdd6f4;
  background: #1e1e2e;
}
.mocha .hljs-keyword {
  color: #cba6f7;
}
.mocha .hljs-built_in {
  color: #f38ba8;
}
.mocha .hljs-type {
  color: #f9e2af;
}
.mocha .hljs-literal {
  color: #fab387;
}
.mocha .hljs-number {
  color: #fab387;
}
.mocha .hljs-operator {
  color: #89dceb;
}
.mocha .hljs-punctuation {
  color: #bac2de;
}
.mocha .hljs-property {
  color: #94e2d5;
}
.mocha .hljs-regexp {
  color: #f5c2e7;
}
.mocha .hljs-string {
  color: #a6e3a1;
}
.mocha .hljs-char.escape_ {
  color: #a6e3a1;
}
.mocha .hljs-subst {
  color: #a6adc8;
}
.mocha .hljs-symbol {
  color: #f2cdcd;
}
.mocha .hljs-variable {
  color: #cba6f7;
}
.mocha .hljs-variable.language_ {
  color: #cba6f7;
}
.mocha .hljs-variable.constant_ {
  color: #fab387;
}
.mocha .hljs-title {
  color: #89b4fa;
}
.mocha .hljs-title.class_ {
  color: #f9e2af;
}
.mocha .hljs-title.function_ {
  color: #89b4fa;
}
.mocha .hljs-params {
  color: #cdd6f4;
}
.mocha .hljs-comment {
  color: #9399b2;
}
.mocha .hljs-doctag {
  color: #f38ba8;
}
.mocha .hljs-meta {
  color: #fab387;
}
.mocha .hljs-section {
  color: #89b4fa;
}
.mocha .hljs-tag {
  color: #94e2d5;
}
.mocha .hljs-name {
  color: #cba6f7;
}
.mocha .hljs-attr {
  color: #89b4fa;
}
.mocha .hljs-attribute {
  color: #a6e3a1;
}
.mocha .hljs-bullet {
  color: #94e2d5;
}
.mocha .hljs-code {
  color: #a6e3a1;
}
.mocha .hljs-emphasis {
  color: #f38ba8;
  font-style: italic;
}
.mocha .hljs-strong {
  color: #f38ba8;
  font-weight: bold;
}
.mocha .hljs-formula {
  color: #94e2d5;
}
.mocha .hljs-link {
  color: #74c7ec;
  font-style: italic;
}
.mocha .hljs-quote {
  color: #a6e3a1;
  font-style: italic;
}
.mocha .hljs-selector-tag {
  color: #f9e2af;
}
.mocha .hljs-selector-id {
  color: #89b4fa;
}
.mocha .hljs-selector-class {
  color: #94e2d5;
}
.mocha .hljs-selector-attr {
  color: #cba6f7;
}
.mocha .hljs-selector-pseudo {
  color: #94e2d5;
}
.mocha .hljs-template-tag {
  color: #f2cdcd;
}
.mocha .hljs-template-variable {
  color: #f2cdcd;
}
.mocha .hljs-addition {
  color: #a6e3a1;
  background: rgba(166, 227, 161, 0.15);
}
.mocha .hljs-deletion {
  color: #f38ba8;
  background: rgba(243, 139, 168, 0.15);
}
.mocha :is(h1, h2, h3, h4, h5, h6) a code {
  color: #cdd6f4;
}
.mocha a code {
  color: #89b4fa;
}
.mocha code {
  color: #cdd6f4;
  background: #181825;
}
.mocha blockquote blockquote {
  border-top: 0.1em solid #585b70;
  border-bottom: 0.1em solid #585b70;
}
.mocha hr {
  border-color: #585b70;
  border-style: solid;
}
.mocha del {
  color: #9399b2;
}
.mocha .ace_gutter {
  color: #7f849c;
  background: #181825;
}
.mocha .ace_gutter-active-line.ace_gutter-cell {
  color: #f5c2e7;
  background: #181825;
}
.mocha .tooltiptext {
  background: #181825;
  color: #cdd6f4;
}

.latte {
  --bg: #eff1f5;
  --fg: #4c4f69;
  --sidebar-bg: #e6e9ef;
  --sidebar-fg: #4c4f69;
  --sidebar-non-existant: #9ca0b0;
  --sidebar-active: #1e66f5;
  --sidebar-spacer: #9ca0b0;
  --scrollbar: #9ca0b0;
  --icons: #9ca0b0;
  --icons-hover: #7c7f93;
  --links: #1e66f5;
  --inline-code-color: #4c4f69;
  --theme-popup-bg: #e6e9ef;
  --theme-popup-border: #9ca0b0;
  --theme-hover: #ccd0da;
  --quote-bg: #e6e9ef;
  --quote-border: #dce0e8;
  --table-border-color: #ccd0da;
  --table-header-bg: #e6e9ef;
  --table-alternate-bg: #e6e9ef;
  --searchbar-border-color: #ccd0da;
  --searchbar-bg: #e6e9ef;
  --searchbar-fg: #4c4f69;
  --searchbar-shadow-color: #dce0e8;
  --searchresults-header-fg: #4c4f69;
  --searchresults-border-color: #ccd0da;
  --searchresults-li-bg: #eff1f5;
  --search-mark-bg: #fe640b;
  --warning-border: #fe640b;
  --color-scheme: light;
  --copy-button-filter: brightness(0) saturate(100%) invert(47%) sepia(6%) saturate(1263%) hue-rotate(195deg) brightness(90%) contrast(81%);
  --copy-button-filter-hover: brightness(0) saturate(100%) invert(30%) sepia(80%) saturate(1850%) hue-rotate(209deg) brightness(94%) contrast(105%);
}

.frappe {
  --bg: #303446;
  --fg: #c6d0f5;
  --sidebar-bg: #292c3c;
  --sidebar-fg: #c6d0f5;
  --sidebar-non-existant: #737994;
  --sidebar-active: #8caaee;
  --sidebar-spacer: #737994;
  --scrollbar: #737994;
  --icons: #737994;
  --icons-hover: #949cbb;
  --links: #8caaee;
  --inline-code-color: #c6d0f5;
  --theme-popup-bg: #292c3c;
  --theme-popup-border: #737994;
  --theme-hover: #414559;
  --quote-bg: #292c3c;
  --quote-border: #232634;
  --table-border-color: #414559;
  --table-header-bg: #292c3c;
  --table-alternate-bg: #292c3c;
  --searchbar-border-color: #414559;
  --searchbar-bg: #292c3c;
  --searchbar-fg: #c6d0f5;
  --searchbar-shadow-color: #232634;
  --searchresults-header-fg: #c6d0f5;
  --searchresults-border-color: #414559;
  --searchresults-li-bg: #303446;
  --search-mark-bg: #ef9f76;
  --warning-border: #ef9f76;
  --color-scheme: dark;
  --copy-button-filter: brightness(0) saturate(100%) invert(82%) sepia(6%) saturate(1287%) hue-rotate(192deg) brightness(86%) contrast(85%);
  --copy-button-filter-hover: brightness(0) saturate(100%) invert(68%) sepia(16%) saturate(1070%) hue-rotate(185deg) brightness(96%) contrast(95%);
}

.macchiato {
  --bg: #24273a;
  --fg: #cad3f5;
  --sidebar-bg: #1e2030;
  --sidebar-fg: #cad3f5;
  --sidebar-non-existant: #6e738d;
  --sidebar-active: #8aadf4;
  --sidebar-spacer: #6e738d;
  --scrollbar: #6e738d;
  --icons: #6e738d;
  --icons-hover: #939ab7;
  --links: #8aadf4;
  --inline-code-color: #cad3f5;
  --theme-popup-bg: #1e2030;
  --theme-popup-border: #6e738d;
  --theme-hover: #363a4f;
  --quote-bg: #1e2030;
  --quote-border: #181926;
  --table-border-color: #363a4f;
  --table-header-bg: #1e2030;
  --table-alternate-bg: #1e2030;
  --searchbar-border-color: #363a4f;
  --searchbar-bg: #1e2030;
  --searchbar-fg: #cad3f5;
  --searchbar-shadow-color: #181926;
  --searchresults-header-fg: #cad3f5;
  --searchresults-border-color: #363a4f;
  --searchresults-li-bg: #24273a;
  --search-mark-bg: #f5a97f;
  --warning-border: #f5a97f;
  --color-scheme: dark;
  --copy-button-filter: brightness(0) saturate(100%) invert(75%) sepia(18%) saturate(361%) hue-rotate(190deg) brightness(91%) contrast(86%);
  --copy-button-filter-hover: brightness(0) saturate(100%) invert(67%) sepia(17%) saturate(1007%) hue-rotate(183deg) brightness(99%) contrast(94%);
}

.mocha {
  --bg: #1e1e2e;
  --fg: #cdd6f4;
  --sidebar-bg: #181825;
  --sidebar-fg: #cdd6f4;
  --sidebar-non-existant: #6c7086;
  --sidebar-active: #89b4fa;
  --sidebar-spacer: #6c7086;
  --scrollbar: #6c7086;
  --icons: #6c7086;
  --icons-hover: #9399b2;
  --links: #89b4fa;
  --inline-code-color: #cdd6f4;
  --theme-popup-bg: #181825;
  --theme-popup-border: #6c7086;
  --theme-hover: #313244;
  --quote-bg: #181825;
  --quote-border: #11111b;
  --table-border-color: #313244;
  --table-header-bg: #181825;
  --table-alternate-bg: #181825;
  --searchbar-border-color: #313244;
  --searchbar-bg: #181825;
  --searchbar-fg: #cdd6f4;
  --searchbar-shadow-color: #11111b;
  --searchresults-header-fg: #cdd6f4;
  --searchresults-border-color: #313244;
  --searchresults-li-bg: #1e1e2e;
  --search-mark-bg: #fab387;
  --warning-border: #fab387;
  --color-scheme: dark;
  --copy-button-filter: brightness(0) saturate(100%) invert(84%) sepia(9%) saturate(767%) hue-rotate(192deg) brightness(84%) contrast(84%);
  --copy-button-filter-hover: brightness(0) saturate(100%) invert(68%) sepia(18%) saturate(951%) hue-rotate(180deg) brightness(98%) contrast(100%);
}
</file>

<file path="dev/book/theme/dendrix_repos.js">
window.dendrix_repos={repositories:[{name:"Maka-77x-nixconf7",trees:[{aspects:[{aspect:"ai",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/tika/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/searx.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/open-webui.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/ollama.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/litellm/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/docling-serve.nix"]}],name:"ai"},{aspects:[{aspect:"base",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/flake-parts/unfree-packages.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/xdg.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/passwords-mgmt/password-store.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/home.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/editors/micro.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/command-not-found.nix"]},{aspect:"base",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/flake-parts/unfree-packages.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/time/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system/auto-upgrade/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/services.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/security/sudo-rs.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/security/rtkit.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/security/pam.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/power-mgmt/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/nix.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/network/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/i18n.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/editors/nano.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/documentation.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/console/console.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/command-not-found.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/boot/kernel.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/boot/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/admin/nh.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/accessibility/default.nix"]}],name:"base"},{aspects:[{aspect:"bluetooth",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/bluetooth/default.nix"]}],name:"bluetooth"},{aspects:[{aspect:"desktop",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/web-browsers/firefox.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/fonts/fonts.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/environment/kdeplasma.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/environment/default.nix"]},{aspect:"desktop",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/fonts/fonts.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/environment/default.nix"]}],name:"desktop"},{aspects:[{aspect:"dev",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/xdg.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/languages/nix.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/mergiraf.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/lazygit.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/jujutsu.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/gpg.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/git.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/gh.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/gh-dash.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/editors/zeditor.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/editors/vscode.nix"]},{aspect:"dev",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/editors/vscode.nix"]}],name:"dev"},{aspects:[{aspect:"displaylink",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/work/displaylink.nix"]}],name:"displaylink"},{aspects:[{aspect:"email",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/email/default.nix"]}],name:"email"},{aspects:[{aspect:"facter",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/facter/facter.nix"]},{aspect:"facter",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/facter/facter.nix"]}],name:"facter"},{aspects:[{aspect:"fwupd",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/fwupd/default.nix"]}],name:"fwupd"},{aspects:[{aspect:"games",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/games/enemy-territory.nix"]}],name:"games"},{aspects:[{aspect:"guacamole",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/guacamole/guacamole.nix"]}],name:"guacamole"},{aspects:[{aspect:"hosts/gouda",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/virtualisation.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/services.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/programs.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/networking.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/hardware.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/fileSystems.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/facter.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/boot.nix"]}],name:"hosts/gouda"},{aspects:[{aspect:"hosts/nixos",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/networking.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/fileSystems.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/facter.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/default.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/boot.nix"]}],name:"hosts/nixos"},{aspects:[{aspect:"messaging",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/messaging/default.nix"]}],name:"messaging"},{aspects:[{aspect:"mimi",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/users/mimi/default.nix"]}],name:"mimi"},{aspects:[{aspect:"openssh",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/openssh/default.nix"]}],name:"openssh"},{aspects:[{aspect:"root",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/users/root/default.nix"]}],name:"root"},{aspects:[{aspect:"shell",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/zoxide.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/starship.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/ripgrep.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/nix-your-shell.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/htop.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/ghostty.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/fzf.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/fish.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/eza.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/direnv.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/bottom.nix","/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/bat.nix"]},{aspect:"shell",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/fish.nix"]}],name:"shell"},{aspects:[{aspect:"sound",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/sound/default.nix"]}],name:"sound"},{aspects:[{aspect:"virtualisation",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/virtualisation/default.nix"]}],name:"virtualisation"},{aspects:[{aspect:"vpn",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/vpn/default.nix"]},{aspect:"vpn",class:"nixos",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/vpn/default.nix"]}],name:"vpn"},{aspects:[{aspect:"work",class:"homeManager",files:["/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/work/aws.nix"]}],name:"work"}],url:"https://github.com/Maka-77x/nixconf7/archive/e3fd4cacd66d708911109b3a0f43f7b65d8be7bd.tar.gz"},{name:"dliberalesso-nix-config",trees:[{aspects:[{aspect:"default",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"default",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"default"},{aspects:[{aspect:"facter",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"facter",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"facter"},{aspects:[{aspect:"gui",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"gui",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"gui"},{aspects:[{aspect:"hyprde",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"hyprde",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"hyprde"},{aspects:[{aspect:"irpf",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"irpf",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"irpf"},{aspects:[{aspect:"laptop",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"laptop",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"laptop"},{aspects:[{aspect:"work",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"work",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"work"},{aspects:[{aspect:"wsl",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"wsl",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"wsl"}],url:"https://github.com/dliberalesso/nix-config/archive/e78eae677a5545aed7dfeea9167e2f1298d06d9b.tar.gz"},{name:"drupol-infra",trees:[{aspects:[{aspect:"ai",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/tika/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/searx.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/open-webui.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/ollama.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/litellm/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/docling-serve.nix"]}],name:"ai"},{aspects:[{aspect:"base",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/flake-parts/unfree-packages.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/yubikey.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/xdg.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/system/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/podman.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/passwords-mgmt/password-store.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/home.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/editors/micro.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/command-not-found.nix"]},{aspect:"base",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/flake-parts/unfree-packages.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/yubikey.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/time/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/system/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/system/auto-upgrade/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/services.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/security/sudo-rs.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/security/rtkit.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/power-mgmt/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/nix.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/network/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/i18n.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/documentation.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/console/console.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/command-not-found.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/boot/kernel.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/boot/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/admin/nh.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/accessibility/default.nix"]}],name:"base"},{aspects:[{aspect:"bluetooth",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/bluetooth/default.nix"]}],name:"bluetooth"},{aspects:[{aspect:"desktop",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/web-browsers/firefox.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/fonts/fonts.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/kdeplasma.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/default.nix"]},{aspect:"desktop",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/fonts/fonts.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/winbox.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/default.nix"]}],name:"desktop"},{aspects:[{aspect:"dev",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/xdg.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/languages/nix.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/mergiraf.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/lazygit.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/jujutsu.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/gpg.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/git.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/gh.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/gh-dash.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/editors/zeditor.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/editors/vscode.nix"]},{aspect:"dev",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/editors/vscode.nix"]}],name:"dev"},{aspects:[{aspect:"displaylink",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/work/displaylink.nix"]}],name:"displaylink"},{aspects:[{aspect:"email",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/email/default.nix"]}],name:"email"},{aspects:[{aspect:"facter",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/facter/facter.nix"]},{aspect:"facter",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/facter/facter.nix"]}],name:"facter"},{aspects:[{aspect:"fwupd",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/fwupd/default.nix"]}],name:"fwupd"},{aspects:[{aspect:"games",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/games/enemy-territory.nix"]}],name:"games"},{aspects:[{aspect:"guacamole",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/guacamole/guacamole.nix"]}],name:"guacamole"},{aspects:[{aspect:"hosts/nixos",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/networking.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/fileSystems.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/facter.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/boot.nix"]}],name:"hosts/nixos"},{aspects:[{aspect:"hosts/x13",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/services.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/programs.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/hardware.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/fileSystems.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/facter.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/boot.nix"]}],name:"hosts/x13"},{aspects:[{aspect:"hosts/x260",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/services.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/fileSystems.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/facter.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/boot.nix"]}],name:"hosts/x260"},{aspects:[{aspect:"hosts/x280",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/services.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/fileSystems.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/facter.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/boot.nix"]}],name:"hosts/x280"},{aspects:[{aspect:"hosts/xeonixos",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/nvidia.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/fileSystems.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/facter.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/default.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/boot.nix"]}],name:"hosts/xeonixos"},{aspects:[{aspect:"messaging",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/messaging/default.nix"]}],name:"messaging"},{aspects:[{aspect:"openssh",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/openssh/default.nix"]}],name:"openssh"},{aspects:[{aspect:"pol",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/users/pol/default.nix"]}],name:"pol"},{aspects:[{aspect:"root",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/users/root/default.nix"]}],name:"root"},{aspects:[{aspect:"shell",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/zoxide.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/starship.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/ripgrep.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/nix-your-shell.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/htop.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/ghostty.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/fzf.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/fish.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/eza.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/direnv.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/bottom.nix","/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/bat.nix"]},{aspect:"shell",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/fish.nix"]}],name:"shell"},{aspects:[{aspect:"sound",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/sound/default.nix"]}],name:"sound"},{aspects:[{aspect:"vpn",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/vpn/default.nix"]},{aspect:"vpn",class:"nixos",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/vpn/default.nix"]}],name:"vpn"},{aspects:[{aspect:"work",class:"homeManager",files:["/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/work/aws.nix"]}],name:"work"}],url:"https://github.com/drupol/infra/archive/d168261d989d5b5814cb13eb9b9142078e202c5f.tar.gz"},{name:"gaetanlepage-nix-config",trees:[{aspects:[{aspect:"agenix",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/agenix.nix"]}],name:"agenix"},{aspects:[{aspect:"android",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/android.nix"]}],name:"android"},{aspects:[{aspect:"bg-stream",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/bg-stream.nix"]}],name:"bg-stream"},{aspects:[{aspect:"bluetooth",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/bluetooth.nix"]}],name:"bluetooth"},{aspects:[{aspect:"bootloader",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/bootloader.nix"]}],name:"bootloader"},{aspects:[{aspect:"caddy-reverse-proxies",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/server/caddy-reverse-proxies.nix"]}],name:"caddy-reverse-proxies"},{aspects:[{aspect:"cloud-backup",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/server/cloud-backup/default.nix"]}],name:"cloud-backup"},{aspects:[{aspect:"core",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/zellij.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/yazi.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/tmux.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/nix-builders.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/hosts/default.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/default.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/aliases.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/starship.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/remi.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/misc.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/fish.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/eza.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/exputils.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/aliases.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/performance.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/options.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/keymappings.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/default.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/completion.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/autocommands.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/monitoring.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/misc.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/git.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/imports.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/typst.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/shell.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/rust.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/python.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/vim.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/shell-aliases.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/packages.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/nix-init.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/misc.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/github-token.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/cmake.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/apptainer.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/default.nix"]},{aspect:"core",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/packages.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/misc.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/imports.nix"]}],name:"core"},{aspects:[{aspect:"csConfig",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/cs-config/default.nix"]}],name:"csConfig"},{aspects:[{aspect:"desktop",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/imports.nix"]},{aspect:"desktop",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/wayland.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/packages.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/misc.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/imports.nix"]}],name:"desktop"},{aspects:[{aspect:"desktop-programs",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/programs.nix"]}],name:"desktop-programs"},{aspects:[{aspect:"dev",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/default.nix"]}],name:"dev"},{aspects:[{aspect:"display-manager",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/display-manager.nix"]}],name:"display-manager"},{aspects:[{aspect:"dunst",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/dunst.nix"]}],name:"dunst"},{aspects:[{aspect:"email",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/email.nix"]}],name:"email"},{aspects:[{aspect:"firefox",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/firefox.nix"]}],name:"firefox"},{aspects:[{aspect:"flameshot",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/flameshot.nix"]}],name:"flameshot"},{aspects:[{aspect:"foot",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/foot.nix"]}],name:"foot"},{aspects:[{aspect:"gammastep",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/gammastep.nix"]}],name:"gammastep"},{aspects:[{aspect:"gtk",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/gtk.nix"]}],name:"gtk"},{aspects:[{aspect:"home-manager",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/home-manager.nix"]},{aspect:"home-manager",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/home-manager.nix"]}],name:"home-manager"},{aspects:[{aspect:"host_cuda",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/cuda/home.nix"]},{aspect:"host_cuda",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/cuda/default.nix"]}],name:"host_cuda"},{aspects:[{aspect:"host_feroe",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/zfs.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/wireguard/default.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/hardware.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/default.nix"]}],name:"host_feroe"},{aspects:[{aspect:"host_framework",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/kanshi.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/inria.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/default.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/backup/default.nix"]},{aspect:"host_framework",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/wireguard/default.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/misc.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/hardware.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/disko.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/default.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/autofs.nix"]}],name:"host_framework"},{aspects:[{aspect:"host_inria",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/inria/home.nix"]}],name:"host_inria"},{aspects:[{aspect:"host_jrs",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/jrs/home.nix"]}],name:"host_jrs"},{aspects:[{aspect:"host_tank",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/tank/default.nix"]}],name:"host_tank"},{aspects:[{aspect:"host_vps",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/vps/default.nix"]}],name:"host_vps"},{aspects:[{aspect:"kanshi",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/kanshi/module.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/kanshi/default.nix"]}],name:"kanshi"},{aspects:[{aspect:"keyring",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/keyring.nix"]}],name:"keyring"},{aspects:[{aspect:"nh",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/nh.nix"]}],name:"nh"},{aspects:[{aspect:"nix",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/nix.nix"]},{aspect:"nix",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/nix.nix"]}],name:"nix"},{aspects:[{aspect:"nix-index-database",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/nix-index-database.nix"]}],name:"nix-index-database"},{aspects:[{aspect:"nvidia",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/nvidia.nix"]}],name:"nvidia"},{aspects:[{aspect:"obs",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/obs.nix"]}],name:"obs"},{aspects:[{aspect:"printing",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/printing.nix"]}],name:"printing"},{aspects:[{aspect:"remote-builders",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/remote-builders/default.nix"]}],name:"remote-builders"},{aspects:[{aspect:"rofi",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/rofi.nix"]}],name:"rofi"},{aspects:[{aspect:"security",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/security.nix"]}],name:"security"},{aspects:[{aspect:"server",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/server/imports.nix"]}],name:"server"},{aspects:[{aspect:"sound",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/sound.nix"]}],name:"sound"},{aspects:[{aspect:"ssh-client",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/ssh-client/default.nix"]}],name:"ssh-client"},{aspects:[{aspect:"ssh-server",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/ssh-server.nix"]}],name:"ssh-server"},{aspects:[{aspect:"streaming",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/streaming.nix"]}],name:"streaming"},{aspects:[{aspect:"substituters",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/substituters.nix"]}],name:"substituters"},{aspects:[{aspect:"sway",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/workspaces.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/theming.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/startup.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/keybindings.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/input.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/default.nix"]}],name:"sway"},{aspects:[{aspect:"swaylock",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/swaylock.nix"]}],name:"swaylock"},{aspects:[{aspect:"thunar",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/thunar.nix"]}],name:"thunar"},{aspects:[{aspect:"udiskie",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/udiskie.nix"]}],name:"udiskie"},{aspects:[{aspect:"users",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/users.nix"]}],name:"users"},{aspects:[{aspect:"waybar",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/waybar/sway.nix","/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/waybar/default.nix"]}],name:"waybar"},{aspects:[{aspect:"wayland",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/wayland.nix"]}],name:"wayland"},{aspects:[{aspect:"wireguard-client",class:"nixos",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/wireguard-client.nix"]}],name:"wireguard-client"},{aspects:[{aspect:"xdg",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/xdg.nix"]}],name:"xdg"},{aspects:[{aspect:"zathura",class:"homeManager",files:["/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/zathura.nix"]}],name:"zathura"}],url:"https://github.com/gaetanlepage/nix-config/archive/c97af82e25d96d720d9871c4d31d1479a7d3667e.tar.gz"},{name:"henrysipp-nix-setup",trees:[{aspects:[{aspect:"albion",class:"hosts",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/albion/default.nix"]}],name:"albion"},{aspects:[{aspect:"allowedUnfreePackages",class:"nixpkgs",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/vscode.nix"]}],name:"allowedUnfreePackages"},{aspects:[{aspect:"base",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/omarchy.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/system/default.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/home.nix"]},{aspect:"base",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/time.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/system/default.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/security/rtkit.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/security/polkit.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/nix.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/network/default.nix"]}],name:"base"},{aspects:[{aspect:"containers",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/containers/podman.nix"]}],name:"containers"},{aspects:[{aspect:"darwin-desktop",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/darwin-desktop.nix"]}],name:"darwin-desktop"},{aspects:[{aspect:"desktop",class:"darwin",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/darwin-desktop.nix"]},{aspect:"desktop",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/wallpapers.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/default.nix"]},{aspect:"desktop",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/default.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/browsers/firefox.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/browsers/chrome.nix"]}],name:"desktop"},{aspects:[{aspect:"dev",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/sapling.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/git.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/vscode.nix"]},{aspect:"dev",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/sapling.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/packages.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/languages.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/firewall.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/vscode.nix"]}],name:"dev"},{aspects:[{aspect:"fonts",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/fonts/fonts.nix"]},{aspect:"fonts",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/fonts/fonts.nix"]}],name:"fonts"},{aspects:[{aspect:"games",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/mangohud.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/default.nix"]},{aspect:"games",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/gamescope.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/default.nix"]}],name:"games"},{aspects:[{aspect:"gawain",class:"hosts",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/gawain/hardware-configuration.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/gawain/default.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/gawain/boot.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/nvidia/default.nix"]}],name:"gawain"},{aspects:[{aspect:"gnome",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/gnome.nix"]},{aspect:"gnome",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/gnome.nix"]}],name:"gnome"},{aspects:[{aspect:"guren",class:"hosts",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/omarchy.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/hardware-configuration.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/default.nix","/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/boot.nix"]}],name:"guren"},{aspects:[{aspect:"henry",class:"nixosUsers",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/users/henry/default.nix"]}],name:"henry"},{aspects:[{aspect:"nixvim",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/nixvim/default.nix"]}],name:"nixvim"},{aspects:[{aspect:"packages",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/packages/packages.nix"]}],name:"packages"},{aspects:[{aspect:"plasma",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/plasma.nix"]},{aspect:"plasma",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/plasma.nix"]}],name:"plasma"},{aspects:[{aspect:"root",class:"nixosUsers",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/users/root/default.nix"]}],name:"root"},{aspects:[{aspect:"shell",class:"darwin",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/shell/default.nix"]},{aspect:"shell",class:"homeManager",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/shell/default.nix"]},{aspect:"shell",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/shell/default.nix"]}],name:"shell"},{aspects:[{aspect:"sound",class:"nixos",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/sound/sound.nix"]}],name:"sound"},{aspects:[{aspect:"system",class:"darwin",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/darwin-system.nix"]}],name:"system"},{aspects:[{aspect:"work",class:"darwin",files:["/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/work.nix"]}],name:"work"}],url:"https://github.com/henrysipp/nix-setup/archive/48a93d0275eba0adf48977609fc100dce8f9b49c.tar.gz"},{name:"icyd-nixvim",trees:[{aspects:[{aspect:"additional-plugins",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/additional-plugins.nix"]}],name:"additional-plugins"},{aspects:[{aspect:"auto-session",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/auto-session.nix"]}],name:"auto-session"},{aspects:[{aspect:"colorizer",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/colorizer.nix"]}],name:"colorizer"},{aspects:[{aspect:"compiler",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/compiler.nix"]}],name:"compiler"},{aspects:[{aspect:"completion",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/completion.nix"]}],name:"completion"},{aspects:[{aspect:"core",class:"config",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/configs/core.nix"]},{aspect:"core",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/options.nix","/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/keybindings.nix","/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/default.nix","/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/autocmds.nix"]}],name:"core"},{aspects:[{aspect:"debug",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/debug.nix"]}],name:"debug"},{aspects:[{aspect:"dial",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/dial.nix"]}],name:"dial"},{aspects:[{aspect:"firenvim",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/firenvim.nix"]}],name:"firenvim"},{aspects:[{aspect:"full",class:"config",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/configs/full.nix"]}],name:"full"},{aspects:[{aspect:"git",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/git.nix"]}],name:"git"},{aspects:[{aspect:"harpoon",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/harpoon.nix"]}],name:"harpoon"},{aspects:[{aspect:"lsp",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/otter.nix","/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/lint.nix","/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/format.nix","/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/default.nix"]}],name:"lsp"},{aspects:[{aspect:"markdown",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/markdown.nix"]}],name:"markdown"},{aspects:[{aspect:"maximize",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/maximize.nix"]}],name:"maximize"},{aspects:[{aspect:"navigator",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/navigator.nix"]}],name:"navigator"},{aspects:[{aspect:"neorg",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/neorg.nix"]}],name:"neorg"},{aspects:[{aspect:"oil",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/oil.nix"]}],name:"oil"},{aspects:[{aspect:"optimizations",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/optimizations.nix"]}],name:"optimizations"},{aspects:[{aspect:"overseer",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/overseer.nix"]}],name:"overseer"},{aspects:[{aspect:"project-nvim",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/project-nvim.nix"]}],name:"project-nvim"},{aspects:[{aspect:"telescope",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/telescope.nix"]}],name:"telescope"},{aspects:[{aspect:"tests",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/tests.nix"]}],name:"tests"},{aspects:[{aspect:"todo-comments",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/todo-comments.nix"]}],name:"todo-comments"},{aspects:[{aspect:"treesitter",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/treesitter.nix"]}],name:"treesitter"},{aspects:[{aspect:"trouble",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/trouble.nix"]}],name:"trouble"},{aspects:[{aspect:"ufo",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/ufo.nix"]}],name:"ufo"},{aspects:[{aspect:"ui",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/ui.nix"]}],name:"ui"},{aspects:[{aspect:"utils",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/utils.nix"]}],name:"utils"},{aspects:[{aspect:"yanky",class:"nixvim",files:["/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/yanky.nix"]}],name:"yanky"}],url:"https://github.com/icyd/nixvim/archive/f3b8fb687c6c59af13c569f8201d0359088e2ada.tar.gz"},{name:"quasigod-nixconfig",trees:[{aspects:[{aspect:"cachix",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"cachix",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"cachix"},{aspects:[{aspect:"default",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"default",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"default"},{aspects:[{aspect:"gaming",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"gaming",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"gaming"},{aspects:[{aspect:"hacking",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"hacking",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"hacking"},{aspects:[{aspect:"laptop",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"laptop",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"laptop"},{aspects:[{aspect:"localai",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"localai",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"localai"},{aspects:[{aspect:"plymouth",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"plymouth",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"plymouth"},{aspects:[{aspect:"remote",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"remote",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"remote"},{aspects:[{aspect:"replays",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"replays",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"replays"},{aspects:[{aspect:"secure-boot",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"secure-boot",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"secure-boot"},{aspects:[{aspect:"server",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"server",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"server"},{aspects:[{aspect:"ssh",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"ssh",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"ssh"},{aspects:[{aspect:"syncthing-client",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"syncthing-client",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"syncthing-client"},{aspects:[{aspect:"syncthing-server",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"syncthing-server",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"syncthing-server"},{aspects:[{aspect:"virtualisation",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"virtualisation",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"virtualisation"},{aspects:[{aspect:"waydroid",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"waydroid",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"waydroid"},{aspects:[{aspect:"workstation",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"workstation",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"workstation"},{aspects:[{aspect:"zfs",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"zfs",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"zfs"},{aspects:[{aspect:"zsa-kb",class:"home",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]},{aspect:"zsa-kb",class:"nixos",files:["/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"]}],name:"zsa-kb"}],url:"https://codeberg.org/vic/quasigod-nixconfig/archive/4326b7976ff363f83a461700a4567859830906bf.tar.gz"},{name:"vic-vix",trees:[{aspects:[{aspect:"aarch64-darwin",class:"darwin",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"]}],name:"aarch64-darwin"},{aspects:[{aspect:"aarch64-linux",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"]}],name:"aarch64-linux"},{aspects:[{aspect:"all-firmware",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/all-firmware.nix"]}],name:"all-firmware"},{aspects:[{aspect:"bootable",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/bootable.nix"]}],name:"bootable"},{aspects:[{aspect:"darwin",class:"darwin",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/darwin.nix"]}],name:"darwin"},{aspects:[{aspect:"gnome-desktop",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/gnome-desktop.nix"]}],name:"gnome-desktop"},{aspects:[{aspect:"kde-desktop",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/kde-desktop.nix"]}],name:"kde-desktop"},{aspects:[{aspect:"kvm-amd",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/kvm+amd.nix"]}],name:"kvm-amd"},{aspects:[{aspect:"kvm-intel",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/kvm+intel.nix"]}],name:"kvm-intel"},{aspects:[{aspect:"macos-keys",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/macos-keys.nix"]}],name:"macos-keys"},{aspects:[{aspect:"nix-index",class:"homeManager",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/home/nix-index.nix"]}],name:"nix-index"},{aspects:[{aspect:"nix-registry",class:"homeManager",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/home/nix-registry.nix"]}],name:"nix-registry"},{aspects:[{aspect:"nix-settings",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/nix-setttings.nix"]}],name:"nix-settings"},{aspects:[{aspect:"nixos",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/nixos.nix"]}],name:"nixos"},{aspects:[{aspect:"nvidia",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/nvidia.nix"]}],name:"nvidia"},{aspects:[{aspect:"rdesk",class:"homeManager",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/rdesk+inputleap+anydesk.nix"]},{aspect:"rdesk",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/rdesk+inputleap+anydesk.nix"]}],name:"rdesk"},{aspects:[{aspect:"unfree",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/unfree.nix"]}],name:"unfree"},{aspects:[{aspect:"vic",class:"darwin",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/user.nix"]},{aspect:"vic",class:"homeManager",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/unfree.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/ssh.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/secrets.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/rdesk.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/nvim.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/jujutsu.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/imports.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/home.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/git.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/fish.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/dots.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/doom.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/direnv.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/desktop-apps.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/apps.nix"]},{aspect:"vic",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/user.nix","/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/rdesk.nix"]}],name:"vic"},{aspects:[{aspect:"vscode-server",class:"homeManager",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/home/vscode-server.nix"]}],name:"vscode-server"},{aspects:[{aspect:"wl-broadcom",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/wl-broadcom.nix"]}],name:"wl-broadcom"},{aspects:[{aspect:"wsl",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/wsl.nix"]}],name:"wsl"},{aspects:[{aspect:"x86_64-darwin",class:"darwin",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"]}],name:"x86_64-darwin"},{aspects:[{aspect:"x86_64-linux",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"]}],name:"x86_64-linux"},{aspects:[{aspect:"xfce-desktop",class:"nixos",files:["/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/xfce-desktop.nix"]}],name:"xfce-desktop"}],url:"https://github.com/vic/vix/archive/f31e8a10fd4dc69980d661bbd610f4aa551fbbb0.tar.gz"}]};
</file>

<file path="dev/book/theme/elm-init.js">
(function () {
  var search = document.createElement("div");
  var results = document.createElement("results");
  document
    .getElementsByTagName("mdbook-sidebar-scrollbox")[0]
    .appendChild(search);
  var main = document.getElementsByTagName("main")[0];
  main.insertBefore(results, main.children[0]);

  var dendrix_data = {
    repositories: [
      {
        name: "vic-vix",
        trees: [
          {
            name: "default",
            aspects: [
              { aspect: "game", class: "darwin", files: ["file1", "file2"] },
              { aspect: "game", class: "nixos", files: ["file3"] },
              { aspect: "dev", class: "nixos", files: ["file3nixos"] },
              { aspect: "dev", class: "darwin", files: ["file3darwin"] },
            ],
          },
          {
            name: "vic",
            aspects: [
              { aspect: "vic", class: "nixos", files: ["file3nixos"] },
              { aspect: "vic", class: "darwin", files: ["file3darwin"] },
            ],
          },
        ],
      },
      {
        name: "drupol-infra",
        trees: [
          {
            name: "default",
            aspects: [
              { aspect: "dev", class: "nixos", files: ["a.nix"] },
              { aspect: "ai", class: "nixos", files: ["b.nix"] },
            ],
          },
        ],
      },
    ],
  };

  var elm_search = Elm.Search.init({
    node: search,
    flags: window.dendrix_repos,
  });

  var elm_results = Elm.Results.init({
    node: results,
    flags: {},
  });

  elm_search.ports.cmdOut.subscribe(function (cmd) {
    elm_results.ports.cmdIn.send(cmd);
  });

  elm_results.ports.cmdOut.subscribe(function (cmd) {
    if (cmd.name === "HIGHLIGHT") {
      setTimeout(() => {
        hljs.highlightAll();
      }, 0);
    } else {
      elm_search.ports.cmdIn.send(cmd);
    }
  });
})();
</file>

<file path="dev/book/theme/elm.js">
(F=>{function R(n,r,t){return t.a=n,t.f=r,t}function a(t){return R(2,t,function(r){return function(n){return t(r,n)}})}function r(e){return R(3,e,function(t){return function(r){return function(n){return e(t,r,n)}}})}function n(u){return R(4,u,function(e){return function(t){return function(r){return function(n){return u(e,t,r,n)}}}})}function B(i){return R(5,i,function(u){return function(e){return function(t){return function(r){return function(n){return i(u,e,t,r,n)}}}}})}function S(a){return R(7,a,function(c){return function(i){return function(u){return function(e){return function(t){return function(r){return function(n){return a(c,i,u,e,t,r,n)}}}}}}})}function s(n,r,t){return 2===n.a?n.f(r,t):n(r)(t)}function b(n,r,t,e){return 3===n.a?n.f(r,t,e):n(r)(t)(e)}function v(n,r,t,e,u){return 4===n.a?n.f(r,t,e,u):n(r)(t)(e)(u)}function l(n,r,t,e,u,i){return 5===n.a?n.f(r,t,e,u,i):n(r)(t)(e)(u)(i)}function q(n,r,t,e,u,i,c,a){return 7===n.a?n.f(r,t,e,u,i,c,a):n(r)(t)(e)(u)(i)(c)(a)}function U(n,r){for(var t,e=[],u=P(n,r,0,e);u&&(t=e.pop());u=P(t.a,t.b,0,e));return u}function P(n,r,t,e){if(n!==r){if("object"!=typeof n||null===n||null===r)return"function"==typeof n&&X(5),!1;if(100<t)e.push({a:n,b:r});else for(var u in n.$<0&&(n=Lr(n),r=Lr(r)),n)if(!P(n[u],r[u],t+1,e))return!1}return!0}var Y=a(function(n,r){return!U(n,r)});function f(n,r,t){if("object"!=typeof n)return n===r?0:n<r?-1:1;if(void 0===n.$)return(t=(t=f(n.a,r.a))||f(n.b,r.b))||f(n.c,r.c);for(;n.b&&r.b&&!(t=f(n.a,r.a));n=n.b,r=r.b);return t||(n.b?1:r.b?-1:0)}var I=a(function(n,r){n=f(n,r);return n<0?jr:n?Ar:kr}),H=0;function i(n,r){var t,e={};for(t in n)e[t]=n[t];for(t in r)e[t]=r[t];return e}function J(n,r){if("string"==typeof n)return n+r;if(!n.b)return r;var t={$:1,a:n.a,b:r};n=n.b;for(var e=t;n.b;n=n.b)e=e.b={$:1,a:n.a,b:r};return t}var d={$:0};function M(n,r){return{$:1,a:n,b:r}}var W=a(M);function $(n){for(var r=d,t=n.length;t--;)r={$:1,a:n[t],b:r};return r}function K(n){for(var r=[];n.b;n=n.b)r.push(n.a);return r}var Q=a(function(t,n){return $(K(n).sort(function(n,r){return f(t(n),t(r))}))}),t=r(function(n,r,t){for(var e=Array(n),u=0;u<n;u++)e[u]=t(r+u);return e}),V=a(function(n,r){for(var t=Array(n),e=0;e<n&&r.b;e++)t[e]=r.a,r=r.b;return t.length=e,{a:t,b:r}});function X(n){throw Error("https://github.com/elm/core/blob/1.0.0/hints/"+n+".md")}var Z=Math.ceil,nn=Math.floor,rn=Math.log,tn=a(function(n,r){return r.split(n)}),en=a(function(n,r){return r.join(n)}),un=a(function(n,r){return!!~r.indexOf(n)}),cn={$:2,b:function(n){return"boolean"==typeof n?k(n):g("a BOOL",n)}},an={$:2,b:function(n){return k(n)}},on={$:2,b:function(n){return"string"==typeof n?k(n):n instanceof String?k(n+""):g("a STRING",n)}},fn=a(function(n,r){return{$:6,d:n,b:r}}),bn=r(function(n,r,t){return{$:9,f:n,g:[r,t]}}),sn=n(function(n,r,t,e){return{$:9,f:n,g:[r,t,e]}}),vn=a(h);function h(n,r){switch(n.$){case 2:return n.b(r);case 5:return null===r?k(n.c):g("null",r);case 3:return dn(r)?ln(n.b,r,$):g("a LIST",r);case 4:return dn(r)?ln(n.b,r,$n):g("an ARRAY",r);case 6:var t=n.d;return"object"==typeof r&&null!==r&&t in r?(i=h(n.b,r[t]),j(i)?i:x(s(Er,t,i.a))):g("an OBJECT with a field named `"+t+"`",r);case 7:t=n.e;return dn(r)?t<r.length?(i=h(n.b,r[t]),j(i)?i:x(s(Gr,t,i.a))):g("a LONGER array. Need index "+t+" but only see "+r.length+" entries",r):g("an ARRAY",r);case 8:if("object"!=typeof r||null===r||dn(r))return g("an OBJECT",r);var e,u=d;for(e in r)if(r.hasOwnProperty(e)){var i=h(n.b,r[e]);if(!j(i))return x(s(Er,e,i.a));u={$:1,a:{a:e,b:i.a},b:u}}return k(Br(u));case 9:for(var c=n.f,a=n.g,o=0;o<a.length;o++){i=h(a[o],r);if(!j(i))return i;c=c(i.a)}return k(c);case 10:i=h(n.b,r);return j(i)?h(n.h(i.a),r):i;case 11:for(var f=d,b=n.g;b.b;b=b.b){i=h(b.a,r);if(j(i))return i;f={$:1,a:i.a,b:f}}return x(Nr(Br(f)));case 1:return x(s(Dr,n.a,r));case 0:return k(n.a)}}function ln(n,r,t){for(var e=r.length,u=Array(e),i=0;i<e;i++){var c=h(n,r[i]);if(!j(c))return x(s(Gr,i,c.a));u[i]=c.a}return k(t(u))}function dn(n){return Array.isArray(n)||"undefined"!=typeof FileList&&n instanceof FileList}function $n(r){return s(rt,r.length,function(n){return r[n]})}function g(n,r){return x(s(Dr,"Expecting "+n,r))}function hn(n,r){if(n===r)return!0;if(n.$!==r.$)return!1;switch(n.$){case 0:case 1:return n.a===r.a;case 2:return n.b===r.b;case 5:return n.c===r.c;case 3:case 4:case 8:return hn(n.b,r.b);case 6:return n.d===r.d&&hn(n.b,r.b);case 7:return n.e===r.e&&hn(n.b,r.b);case 9:return n.f===r.f&&gn(n.g,r.g);case 10:return n.h===r.h&&hn(n.b,r.b);case 11:return gn(n.g,r.g)}}function gn(n,r){var t=n.length;if(t!==r.length)return!1;for(var e=0;e<t;e++)if(!hn(n[e],r[e]))return!1;return!0}function pn(n){return n}var mn=r(function(n,r,t){return t[n]=r,t});function yn(n){return{$:0,a:n}}var xn=a(function(n,r){return{$:3,b:n,d:r}}),kn=0;function An(n){n={$:0,e:kn++,f:n,g:null,h:[]};return Dn(n),n}function jn(r){return{$:2,b:function(n){n({$:0,a:An(r)})},c:null}}function _n(n,r){n.h.push(r),Dn(n)}var Ln=!1,wn=[];function Dn(n){if(wn.push(n),!Ln){for(Ln=!0;n=wn.shift();)(r=>{for(;r.f;){var n=r.f.$;if(0===n||1===n){for(;r.g&&r.g.$!==n;)r.g=r.g.i;if(!r.g)return;r.f=r.g.b(r.f.a),r.g=r.g.i}else{if(2===n)return r.f.c=r.f.b(function(n){r.f=n,Dn(r)});if(5===n){if(0===r.h.length)return;r.f=r.f.b(r.h.shift())}else r.g={$:3===n?0:1,b:r.f.b,i:r.g},r.f=r.f.d}}})(n);Ln=!1}}function En(n,r,t,e,u,i){var n=s(vn,n,r?r.flags:void 0),c=(j(n)||X(2),{}),r=t(n.a),a=r.a,o=i(f,a),t=((n,r)=>{var t,e;for(e in p){var u=p[e];u.a&&((t=t||{})[e]=u.a(e,r)),n[e]=((n,r)=>{var e={g:r,h:void 0},u=n.c,i=n.d,c=n.e,a=n.f;function o(t){return s(xn,o,{$:5,b:function(n){var r=n.a;return 0===n.$?b(i,e,r,t):c&&a?v(u,e,r.i,r.j,t):b(u,e,c?r.i:r.j,t)}})}return e.h=An(s(xn,o,n.b))})(u,r)}return t})(c,f);function f(n,r){n=s(e,n,a);o(a=n.a,r),zn(c,n.b,u(a))}return zn(c,r.b,u(a)),t?{ports:t}:{}}var p={},Gn=a(function(r,t){return{$:2,b:function(n){r.g(t),n({$:0,a:H})},c:null}});function Nn(r){return function(n){return{$:1,k:r,l:n}}}var On=[],Cn=!1;function zn(n,r,t){if(On.push({p:n,q:r,r:t}),!Cn){Cn=!0;for(var e;e=On.shift();)((n,r,t)=>{var e,u={};for(e in Tn(!0,r,u,null),Tn(!1,t,u,null),n)_n(n[e],{$:"fx",a:u[e]||{i:d,j:d}})})(e.p,e.q,e.r);Cn=!1}}function Tn(n,r,t,e){switch(r.$){case 1:var u=r.k,i=((n,r,t,e)=>{function u(n){for(var r=t;r;r=r.t)n=r.s(n);return n}return s(n?p[r].e:p[r].f,u,e)})(n,u,e,r.l);return void(t[u]=((n,r,t)=>(t=t||{i:d,j:d},n?t.i={$:1,a:r,b:t.i}:t.j={$:1,a:r,b:t.j},t))(n,i,t[u]));case 2:for(var c=r.m;c.b;c=c.b)Tn(n,c.a,t,e);return;case 3:Tn(n,r.o,t,{s:r.n,t:e})}}function Fn(n){p[n]&&X(3)}var Rn=a(function(n,r){return r});function Bn(n){var t,c=[],a=p[n].u,o=(t=0,{$:2,b:function(n){var r=setTimeout(function(){n({$:0,a:H})},t);return function(){clearTimeout(r)}},c:null});return p[n].b=o,p[n].c=r(function(n,r,t){for(;r.b;r=r.b)for(var e=c,u=a(r.a),i=0;i<e.length;i++)e[i](u);return o}),{subscribe:function(n){c.push(n)},unsubscribe:function(n){(n=(c=c.slice()).indexOf(n))<0||c.splice(n,1)}}}var Sn,qn=a(function(r,t){return function(n){return r(t(n))}});function Un(n,e){var u=d,i=p[n].u,c={$:0,a:null};return p[n].b=c,p[n].c=r(function(n,r,t){return u=r,c}),{send:function(n){j(n=s(vn,i,n))||X(4);for(var r=n.a,t=u;t.b;t=t.b)e(t.a(r))}}}var Pn="undefined"!=typeof document?document:{};function Yn(n){return{$:0,a:n}}var In,o=a(function(i,c){return a(function(n,r){for(var t=[],e=0;r.b;r=r.b){var u=r.a;e+=u.b||0,t.push(u)}return e+=t.length,{$:1,c:c,d:Qn(n),e:t,f:i,b:e}})})(void 0),Hn=(a(function(i,c){return a(function(n,r){for(var t=[],e=0;r.b;r=r.b){var u=r.a;e+=u.b.b||0,t.push(u)}return e+=t.length,{$:2,c:c,d:Qn(n),e:t,f:i,b:e}})})(void 0),a(function(n,r){return{$:"a0",n:n,o:r}})),Jn=a(function(n,r){return{$:"a1",n:n,o:r}}),Mn=a(function(n,r){return{$:"a2",n:n,o:r}}),Wn=a(function(n,r){return{$:"a3",n:n,o:r}}),Kn=/^\s*j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:/i;function Qn(n){for(var r={};n.b;n=n.b){var t,e=n.a,u=e.$,i=e.n,e=e.o;"a2"===u?"className"===i?Vn(r,i,e):r[i]=e:(t=r[u]||(r[u]={}),"a3"===u&&"class"===i?Vn(t,i,e):t[i]=e)}return r}function Vn(n,r,t){var e=n[r];n[r]=e?e+" "+t:t}function m(n,r){var t=n.$;if(5===t)return m(n.k||(n.k=n.m()),r);if(0===t)return Pn.createTextNode(n.a);if(4===t){for(var e=n.k,u=n.j;4===e.$;)"object"!=typeof u?u=[u,e.j]:u.push(e.j),e=e.k;var i={j:u,p:r};(c=m(e,i)).elm_event_node_ref=i}else if(3===t)Xn(c=n.h(n.g),r,n.d);else{var c=n.f?Pn.createElementNS(n.f,n.c):Pn.createElement(n.c);Sn&&"a"==n.c&&c.addEventListener("click",Sn(c)),Xn(c,r,n.d);for(var a=n.e,o=0;o<a.length;o++)c.appendChild(m(1===t?a[o]:a[o].b,r))}return c}function Xn(n,r,t){for(var e in t){var u=t[e];"a1"===e?((n,r)=>{var t,e=n.style;for(t in r)e[t]=r[t]})(n,u):"a0"===e?((n,r,t)=>{var e,u=n.elmFs||(n.elmFs={});for(e in t){var i=t[e],c=u[e];if(i){if(c){if(c.q.$===i.$){c.q=i;continue}n.removeEventListener(e,c)}c=((o,n)=>{function f(n){var r=f.q,t=h(r.a,n);if(j(t)){for(var e,r=et(r),t=t.a,u=r?r<3?t.a:t.J:t,i=1==r?t.b:3==r&&t.aE,c=(i&&n.stopPropagation(),(2==r?t.b:3==r&&t.aB)&&n.preventDefault(),o);e=c.j;){if("function"==typeof e)u=e(u);else for(var a=e.length;a--;)u=e[a](u);c=c.p}c(u,i)}}return f.q=n,f})(r,i),n.addEventListener(e,c,In&&{passive:et(i)<2}),u[e]=c}else n.removeEventListener(e,c),u[e]=void 0}})(n,r,u):"a3"===e?((n,r)=>{for(var t in r){var e=r[t];void 0!==e?n.setAttribute(t,e):n.removeAttribute(t)}})(n,u):"a4"===e?((n,r)=>{for(var t in r){var e=r[t],u=e.f,e=e.o;void 0!==e?n.setAttributeNS(u,t,e):n.removeAttributeNS(u,t)}})(n,u):("value"!==e&&"checked"!==e||n[e]!==u)&&(n[e]=u)}}try{window.addEventListener("t",null,Object.defineProperty({},"passive",{get:function(){In=!0}}))}catch(n){}function Zn(n,r){var t=[];return G(n,r,t,0),t}function E(n,r,t,e){r={$:r,r:t,s:e,t:void 0,u:void 0};return n.push(r),r}function G(n,r,t,e){if(n!==r){var u=n.$,i=r.$;if(u!==i){if(1!==u||2!==i)return void E(t,0,e,r);r=(n=>{for(var r=n.e,t=r.length,e=Array(t),u=0;u<t;u++)e[u]=r[u].b;return{$:1,c:n.c,d:n.d,e:e,f:n.f,b:n.b}})(r),i=1}switch(i){case 5:for(var c=n.l,a=r.l,o=c.length,f=o===a.length;f&&o--;)f=c[o]===a[o];if(f)return void(r.k=n.k);r.k=r.m();var b=[];return G(n.k,r.k,b,0),void(0<b.length&&E(t,1,e,b));case 4:for(var s=n.j,v=r.j,l=!1,d=n.k;4===d.$;)l=!0,"object"!=typeof s?s=[s,d.j]:s.push(d.j),d=d.k;for(var $=r.k;4===$.$;)l=!0,"object"!=typeof v?v=[v,$.j]:v.push($.j),$=$.k;return l&&s.length!==v.length?void E(t,0,e,r):((l?((n,r)=>{for(var t=0;t<n.length;t++)if(n[t]!==r[t])return;return 1})(s,v):s===v)||E(t,2,e,v),void G(d,$,t,e+1));case 0:return void(n.a!==r.a&&E(t,3,e,r.a));case 1:return void nr(n,r,t,e,tr);case 2:return void nr(n,r,t,e,er);case 3:if(n.h!==r.h)return void E(t,0,e,r);b=rr(n.d,r.d),b=(b&&E(t,4,e,b),r.i(n.g,r.g));b&&E(t,5,e,b)}}}function nr(n,r,t,e,u){var i;n.c!==r.c||n.f!==r.f?E(t,0,e,r):((i=rr(n.d,r.d))&&E(t,4,e,i),u(n,r,t,e))}function rr(n,r,t){var e,u,i,c,a;for(u in n)"a1"===u||"a0"===u||"a3"===u||"a4"===u?(i=rr(n[u],r[u]||{},u))&&((e=e||{})[u]=i):u in r?(i=n[u])===(c=r[u])&&"value"!==u&&"checked"!==u||"a0"===t&&((n,r)=>n.$==r.$&&hn(n.a,r.a))(i,c)||((e=e||{})[u]=c):(e=e||{})[u]=t?"a1"===t?"":"a0"===t||"a3"===t?void 0:{f:n[u].f,o:void 0}:"string"==typeof n[u]?"":null;for(a in r)a in n||((e=e||{})[a]=r[a]);return e}function tr(n,r,t,e){var u=n.e,i=r.e,n=u.length,r=i.length;r<n?E(t,6,e,{v:r,i:n-r}):n<r&&E(t,7,e,{v:n,e:i});for(var c=n<r?n:r,a=0;a<c;a++){var o=u[a];G(o,i[a],t,++e),e+=o.b||0}}function er(n,r,t,e){for(var u=[],i={},c=[],a=n.e,o=r.e,f=a.length,b=o.length,s=0,v=0,l=e;s<f&&v<b;){var d=a[s],$=o[v],h=d.a,g=$.a,p=d.b,m=$.b,y=void 0,x=void 0;if(h===g)G(p,m,u,++l),l+=p.b||0,s++,v++;else{var k,A,j,_,L=a[s+1],w=o[v+1];if(L&&(A=L.b,x=g===(k=L.a)),w&&(_=w.b,y=h===(j=w.a)),y&&x)G(p,_,u,++l),ir(i,u,h,m,v,c),l+=p.b||0,cr(i,u,h,A,++l),l+=A.b||0,s+=2,v+=2;else if(y)l++,ir(i,u,g,m,v,c),G(p,_,u,l),l+=p.b||0,s+=1,v+=2;else if(x)cr(i,u,h,p,++l),l+=p.b||0,G(A,m,u,++l),l+=A.b||0,s+=2,v+=1;else{if(!L||k!==j)break;cr(i,u,h,p,++l),ir(i,u,g,m,v,c),l+=p.b||0,G(A,_,u,++l),l+=A.b||0,s+=2,v+=2}}}for(;s<f;){p=(d=a[s]).b;cr(i,u,d.a,p,++l),l+=p.b||0,s++}for(;v<b;){var D=D||[];ir(i,u,($=o[v]).a,$.b,void 0,D),v++}(0<u.length||0<c.length||D)&&E(t,8,e,{w:u,x:c,y:D})}var ur="_elmW6BL";function ir(n,r,t,e,u,i){var c,a=n[t];a?1===a.c?(i.push({r:u,A:a}),a.c=2,G(a.z,e,c=[],a.r),a.r=u,a.s.s={w:c,A:a}):ir(n,r,t+ur,e,u,i):(i.push({r:u,A:a={c:0,z:e,r:u,s:void 0}}),n[t]=a)}function cr(n,r,t,e,u){var i,c=n[t];c?0===c.c?(c.c=2,G(e,c.z,i=[],u),E(r,9,u,{w:i,A:c})):cr(n,r,t+ur,e,u):(i=E(r,9,u,void 0),n[t]={c:1,z:e,r:u,s:i})}function ar(n,r,t,e){!function n(r,t,e,u,i,c,a){var o=e[u];var f=o.r;for(;f===i;){var b,s=o.$;if(1===s?ar(r,t.k,o.s,a):8===s?(o.t=r,o.u=a,0<(b=o.s.w).length&&n(r,t,b,0,i,c,a)):9===s?(o.t=r,o.u=a,(s=o.s)&&(s.A.s=r,0<(b=s.w).length)&&n(r,t,b,0,i,c,a)):(o.t=r,o.u=a),!(o=e[++u])||(f=o.r)>c)return u}var v=t.$;if(4===v){for(var l=t.k;4===l.$;)l=l.k;return n(r,l,e,u,i+1,c,r.elm_event_node_ref)}var d=t.e;var $=r.childNodes;for(var h=0;h<d.length;h++){var g=1===v?d[h]:d[h].b,p=++i+(g.b||0);if(i<=f&&f<=p&&(u=n($[h],g,e,u,i,p,a),!(o=e[u])||(f=o.r)>c))return u;i=p}return u}(n,r,t,0,0,r.b,e)}function or(n,r,t,e){return 0===t.length?n:(ar(n,r,t,e),fr(n,t))}function fr(n,r){for(var t=0;t<r.length;t++){var e=r[t],u=e.t,e=((n,r)=>{switch(r.$){case 0:return((n,r,t)=>{var e=n.parentNode;return(r=m(r,t)).elm_event_node_ref||(r.elm_event_node_ref=n.elm_event_node_ref),e&&r!==n&&e.replaceChild(r,n),r})(n,r.s,r.u);case 4:return Xn(n,r.u,r.s),n;case 3:return n.replaceData(0,n.length,r.s),n;case 1:return fr(n,r.s);case 2:return n.elm_event_node_ref?n.elm_event_node_ref.j=r.s:n.elm_event_node_ref={j:r.s,p:r.u},n;case 6:for(var t=r.s,e=0;e<t.i;e++)n.removeChild(n.childNodes[t.v]);return n;case 7:for(var u=(t=r.s).e,e=t.v,i=n.childNodes[e];e<u.length;e++)n.insertBefore(m(u[e],r.u),i);return n;case 9:var c;return(t=r.s)?(void 0!==(c=t.A).r&&n.parentNode.removeChild(n),c.s=fr(n,t.w)):n.parentNode.removeChild(n),n;case 8:return((n,r)=>{for(var t=r.s,e=((n,r)=>{if(n){for(var t=Pn.createDocumentFragment(),e=0;e<n.length;e++){var u=n[e].A;t.appendChild(2===u.c?u.s:m(u.z,r.u))}return t}})(t.y,r),u=(n=fr(n,t.w),t.x),i=0;i<u.length;i++){var c=u[i],a=c.A,a=2===a.c?a.s:m(a.z,r.u);n.insertBefore(a,n.childNodes[c.r])}return e&&n.appendChild(e),n})(n,r);case 5:return r.s(n);default:X(10)}})(u,e);u===n&&(n=e)}return n}function br(n){if(3===n.nodeType)return{$:0,a:n.textContent};if(1!==n.nodeType)return{$:0,a:""};for(var r=d,t=n.attributes,e=t.length;e--;)var u=t[e],r={$:1,a:s(Wn,u.name,u.value),b:r};for(var i=n.tagName.toLowerCase(),c=d,a=n.childNodes,e=a.length;e--;)c={$:1,a:br(a[e]),b:c};return b(o,i,r,c)}var sr=n(function(r,n,t,c){return En(n,c,r.b0,r.cA,r.ct,function(t,n){var e=r.cC,u=c.node,i=br(u);return lr(n,function(n){var n=e(n),r=Zn(i,n);u=or(u,i,r,t),i=n})})}),vr="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:function(n){return setTimeout(n,1e3/60)};function lr(t,e){e(t);var u=0;function i(){u=1===u?0:(vr(i),e(t),1)}return function(n,r){t=n,r?(e(t),2===u&&(u=1)):(0===u&&vr(i),u=2)}}function dr(n){var r=xt(pt(s(_,function(n){return n.bO},s(L,s($t,function(n){return n.cy},L(function(n){return n.bG})),n))));return{ar:xt(pt(s(_,function(n){return n.bF},s(L,s($t,function(n){return n.cy},L(function(n){return n.bG})),n)))),as:r,U:s(_,function(n){return n.a3},n),L:n,x:d,y:d,D:d,z:d}}function $r(n){return Lt(s(_t,"REPO_UPDATE",jt($([{a:"anySelected",b:wt((n=n).bD)},{a:"repos",b:s(Dt,Nt,n.cm)}]))))}function hr(n){return n.b}function gr(n){return{$:1,a:n}}function pr(n){return{$:2,a:n}}function mr(n){var r,t,e,u,i,c,a,o;return-1===n.$&&-1===n.d.$&&-1===n.e.$?-1!==n.e.d.$||n.e.d.a?(e=(o=n.e).b,u=o.c,i=o.d,o=o.e,l(T,1,n.b,n.c,l(T,0,(r=n.d).b,r.c,r.d,r.e),l(T,0,e,u,i,o))):(e=(t=n.e).b,u=t.c,c=(i=t.d).d,a=i.e,o=t.e,l(T,0,i.b,i.c,l(T,1,n.b,n.c,l(T,0,(r=n.d).b,r.c,r.d,r.e),c),l(T,1,e,u,a,o))):n}function yr(n){var r,t,e,u,i,c,a,o,f;return-1===n.$&&-1===n.d.$&&-1===n.e.$?-1!==n.d.d.$||n.d.d.a?(c=(f=n.e).b,a=f.c,o=f.d,f=f.e,l(T,1,r=n.b,t=n.c,l(T,0,(u=n.d).b,u.c,u.d,u=u.e),l(T,0,c,a,o,f))):(r=n.b,t=n.c,u=(e=n.d).e,c=(i=n.e).b,a=i.c,o=i.d,f=i.e,l(T,0,e.b,e.c,l(T,1,(i=e.d).b,i.c,i.d,i.e),l(T,1,r,t,u,l(T,0,c,a,o,f)))):n}function xr(n){var r,t,e,u,i,c;return-1===n.$&&-1===n.d.$?(r=n.a,t=n.b,e=n.c,c=(u=n.d).d,i=n.e,1===u.a?-1!==c.$||c.a?-1===(c=mr(n)).$?(n=c.e,l(_e,c.a,c.b,c.c,xr(c.d),n)):z:l(T,r,t,e,xr(u),i):l(T,r,t,e,xr(u),i)):z}var kr=1,Ar=2,jr=0,y=W,_r=r(function(n,r,t){for(;;){if(-2===t.$)return r;var e=t.d,u=n,i=b(n,t.b,t.c,b(_r,n,r,t.e));n=u,r=i,t=e}}),Lr=function(n){return b(_r,r(function(n,r,t){return s(y,{a:n,b:r},t)}),d,n)},wr=function(n){return b(_r,r(function(n,r,t){return s(y,n,t)}),d,n)},x=function(n){return{$:1,a:n}},Dr=a(function(n,r){return{$:3,a:n,b:r}}),Er=a(function(n,r){return{$:0,a:n,b:r}}),Gr=a(function(n,r){return{$:1,a:n,b:r}}),k=function(n){return{$:0,a:n}},Nr=function(n){return{$:2,a:n}},Or=function(n){return{$:0,a:n}},Cr={$:1},zr=function(n){return n+""},Tr=a(function(n,r){return s(en,n,K(r))}),Fr=a(function(n,r){return $(s(tn,n,r))}),Rr=r(function(n,r,t){for(;;){if(!t.b)return r;var e=t.b,u=n,i=s(n,t.a,r);n=u,r=i,t=e}}),A=function(n){return b(Rr,a(function(n,r){return r+1}),0,n)},Br=function(n){return b(Rr,y,d,n)},Sr=n(function(n,r,t,e){return{$:0,a:n,b:r,c:t,d:e}}),qr=[],Ur=Z,Pr=a(function(n,r){return rn(r)/rn(n)}),Yr=Ur(s(Pr,2,32)),Ir=v(Sr,0,Yr,qr,qr),Hr=t,Jr=nn,Mr=function(n){return n.length},Wr=a(function(n,r){return 0<f(n,r)?n:r}),Kr=V,Qr=a(function(n,r){for(;;){var t=s(Kr,32,n),e=t.b,t=s(y,{$:0,a:t.a},r);if(!e.b)return Br(t);n=e,r=t}}),Vr=function(n){return n.a},Xr=a(function(n,r){for(;;){var t=Ur(r/32);if(1===t)return s(Kr,32,n).a;n=s(Qr,n,d),r=t}}),Zr=a(function(n,r){var t,e;return r.f?(e=Jr(s(Pr,32,(t=32*r.f)-1)),n=n?Br(r.j):r.j,n=s(Xr,n,r.f),v(Sr,Mr(r.i)+t,s(Wr,5,e*Yr),n,r.i)):v(Sr,Mr(r.i),Yr,qr,r.i)}),nt=B(function(n,r,t,e,u){for(;;){if(r<0)return s(Zr,!1,{j:e,f:t/32|0,i:u});var i={$:1,a:b(Hr,32,r,n)};n=n,r=r-32,t=t,e=s(y,i,e),u=u}}),rt=a(function(n,r){var t;return 0<n?l(nt,r,n-(t=n%32)-32,n,d,b(Hr,t,n-t,r)):Ir}),j=function(n){return!n.$},W=bn,tt=function(n){return{$:0,a:n}},et=function(n){switch(n.$){case 0:return 0;case 1:return 1;case 2:return 2;default:return 3}},ut=function(n){return n},it=un,ct=yn,Z=ct(0),at=n(function(n,r,t,e){var u,i,c,a;return e.b?(u=e.a,(e=e.b).b?(i=e.a,(e=e.b).b?(c=e.a,(e=e.b).b?(a=e.b,s(n,u,s(n,i,s(n,c,s(n,e.a,500<t?b(Rr,n,r,Br(a)):v(at,n,r,t+1,a)))))):s(n,u,s(n,i,s(n,c,r)))):s(n,u,s(n,i,r))):s(n,u,r)):r}),ot=r(function(n,r,t){return v(at,n,r,0,t)}),_=a(function(t,n){return b(ot,a(function(n,r){return s(y,t(n),r)}),d,n)}),ft=xn,bt=a(function(r,n){return s(ft,function(n){return ct(r(n))},n)}),st=r(function(t,n,e){return s(ft,function(r){return s(ft,function(n){return ct(s(t,r,n))},e)},n)}),vt=Gn,lt=a(function(n,r){return jn(s(ft,vt(n),r))}),t=r(function(n,r,t){return s(bt,function(n){return 0},(n=s(_,lt(n),r),b(ot,st(y),ct(d),n)))}),nn=(p.Task={b:Z,c:t,d:r(function(n,r,t){return ct(0)}),e:a(function(n,r){return s(bt,n,r)}),f:void 0},Nn("Task"),sr),dt=vn,$t=r(function(n,r,t){return r(n(t))}),ht=a(function(n,r){return r.b?b(ot,y,r,n):n}),L=a(function(n,r){return b(ot,ht,d,s(_,n,r))}),gt=Q,pt=function(n){return s(gt,ut,n)},mt=a(function(n,r){for(;;){if(!r.b)return!1;var t=r.b;if(n(r.a))return!0;n=n,r=t}}),w=a(function(r,n){return s(mt,function(n){return U(n,r)},n)}),yt=n(function(n,r,t,e){for(;;){if(!t.b)return Br(e);var u=t.a,i=t.b,c=n(u);e=s(w,c,r)?(n=n,r=r,t=i,e):(n=n,r=s(y,c,r),t=i,s(y,u,e))}}),xt=function(n){return v(yt,ut,d,n,d)},kt=function(n){return{$:2,m:n}}(d),e=fn,V=function(n){return{$:3,b:n}},bn=r(function(n,r,t){return{a3:n,cy:t,cB:r}}),un=sn,u=on,Gn=a(function(n,r){return{bG:r,a3:n}}),Z=v(un,r(function(n,r,t){return{bF:n,bO:r,bY:t}}),s(e,"aspect",u),s(e,"class",u),s(e,"files",V(u))),t=b(W,Gn,s(e,"name",u),s(e,"aspects",V(Z))),sr=v(un,bn,s(e,"name",u),s(e,"url",u),s(e,"trees",V(t))),At=s(e,"repositories",V(sr)),jt=function(n){return b(Rr,a(function(n,r){return b(mn,n.a,n.b,r)}),{},n)},c=pn,_t=a(function(n,r){return jt($([{a:"name",b:c(n)},{a:"value",b:r}]))}),Lt=(Q=ut,Fn(fn="cmdOut"),p[fn]={e:Rn,u:Q,a:Bn},Nn(fn)),wt=pn,Dt=a(function(n,r){return b(Rr,(t=>a(function(n,r){return r.push(t(n)),r}))(n),[],r)}),Et=function(n){return jt($([{a:"aspect",b:c(n.bF)},{a:"class",b:c(n.bO)},{a:"files",b:s(Dt,c,n.bY)}]))},Gt=function(n){return jt($([{a:"name",b:c(n.a3)},{a:"aspects",b:s(Dt,Et,n.bG)}]))},Nt=function(n){return jt($([{a:"name",b:c(n.a3)},{a:"url",b:c(n.cB)},{a:"trees",b:s(Dt,Gt,n.cy)}]))},Ot={$:5},Ct={$:6},zt=((n,r)=>(Fn(n),p[n]={f:qn,u:r,a:Un},Nn(n)))("cmdIn",sn=an),Tt=a(function(n,r){return U(s(dt,s(e,"name",u),r),k(n))}),Ft=a(function(n,r){return{bD:n,cm:r}}),D=a(function(t,n){return b(ot,a(function(n,r){return t(n)?s(y,n,r):r}),d,n)}),Rt=a(function(r,n){return r.b?s(D,function(n){return!!n.bG.b},s(_,function(n){return i(n,{bG:s(D,function(n){return s(w,n.bF,r)},n.bG)})},n)):n}),Bt=a(function(r,n){return r.b?s(D,function(n){return!!n.cy.b},s(_,function(n){return i(n,{cy:s(Rt,r,n.cy)})},n)):n}),St=a(function(r,n){return r.b?s(D,function(n){return!!n.bG.b},s(_,function(n){return i(n,{bG:s(D,function(n){return s(w,n.bO,r)},n.bG)})},n)):n}),qt=a(function(r,n){return r.b?s(D,function(n){return!!n.cy.b},s(_,function(n){return i(n,{cy:s(St,r,n.cy)})},n)):n}),Ut=a(function(r,n){return r.b?s(D,function(n){return s(w,n.a3,r)},n):n}),Pt=a(function(n,r){return n.b?s(D,function(n){return!!n.cy.b},s(_,function(r){var t=s(_,hr,s(D,function(n){return U(n.a,r.a3)},n));return i(r,t.b?{cy:s(D,function(n){return s(w,n.a3,t)},r.cy)}:{cy:d})},r)):r}),Yt=Y,on=a(function(n,r){var t=a(function(n,r){return s(w,n,r)?s(D,Yt(n),r):s(y,n,r)}),e=(()=>{switch(n.$){case 6:return r;case 5:return i(r,{U:s(_,function(n){return n.a3},r.L),x:d,y:d,D:d,z:d});case 0:return i(r,{D:s(t,n.a,r.D)});case 1:return i(r,{x:s(t,n.a,r.x)});case 2:return i(r,{y:s(t,n.a,r.y)});case 3:return i(r,{z:s(t,{a:n.a,b:n.b},r.z)});default:return i(r,{U:s(t,n.a,r.U)})}})(),u=A(e.D)+A(e.y)+A(e.x)+A(e.z);return{a:e,b:$r(s(Ft,0<u,s(qt,e.y,s(Bt,e.x,s(Pt,e.z,s(Ut,e.D,e.L))))))}}),N=o("div"),It=o("h4"),O=Yn,Ht=(Gn=a(function(n,r){return s(Mn,n,wt(r))}))("checked"),Jt=Gn("disabled"),Mt=o("input"),Wt=o("label"),Kt=Hn,Qt=a(function(n,r){return s(Kt,n,{$:0,a:r})}),Vt=function(n){return s(Qt,"click",tt(n))},C=Jn,Xt=a(function(n,r){return s(Mn,n,c(r))}),Zt=Xt("type"),ne=n(function(n,e,u,i){return s(N,d,s(_,function(n){var r=s(w,n,u),t=r||s(w,n,e);return s(N,d,$([s(Wt,$([s(C,"opacity",t?"1.0":"0.5")]),$([s(Mt,$([Zt("checkbox"),Ht(r),Vt(t?i(n):Ct),Jt(!t)]),d),O(n)]))]))},n))}),re=a(function(n,r){return{$:3,a:n,b:r}}),te=o("a"),ee=function(n){return s(Xt,"href",Kn.test(n=n)?"":n)},ue=r(function(n,r,t){return s(Tr,r,s(Fr,n,t))}),ie=o("small"),ce=o("span"),ae=a(function(a,o){return s(N,d,s(_,function(i){var n=s(ue,"/archive/",s(it,"codeberg.org",i.cB)?"/src/commit/":"/tree/")(b(ue,".tar.gz","",i.cB)),r=s(w,i.a3,a.D),t=r||s(w,i.a3,o),e=s(w,i.a3,a.U),c=s(St,a.y,s(Rt,a.x,i.cy)),u=A(c);return s(N,$([s(C,"margin-bottom","1em")]),$([s(N,$([s(C,"display","flex"),s(C,"align-items","center")]),$([s(Wt,$([s(C,"opacity",t?"1.0":"0.5")]),$([s(Mt,$([Zt("checkbox"),Ht(r),Vt(t?{$:0,a:i.a3}:Ct),Jt(!t)]),d),O(i.a3)])),s(N,$([s(C,"cursor","pointer"),s(C,"margin-left","auto"),s(C,"display","flex"),s(C,"align-items","center")]),$([s(ie,$([s(C,"margin-right","5px")]),$([s(te,$([ee(n)]),$([O("(home)")]))])),s(ce,$([Vt({$:4,a:i.a3}),s(C,"display","block ruby")]),$([O(e?"►":"▼"),s(ie,d,$([O("("+zr(u)+" trees)")]))]))]))])),e?s(N,d,d):s(N,$([s(C,"padding-left","2em")]),s(_,function(n){var r=s(w,{a:i.a3,b:n.a3},a.z),t=r||s(w,n.a3,s(_,function(n){return n.a3},c)),e="https://github.com/vic/dendrix/blob/main/dev/community/discovered/"+i.a3+"/"+n.a3+".json",u=s(L,function(n){return n.bY},n.bG);return s(N,$([s(C,"margin-left","auto"),s(C,"display","flex")]),$([s(Wt,$([s(C,"opacity",t?"1.0":"0.5")]),$([s(Mt,$([Zt("checkbox"),Ht(r),Vt(t?s(re,i.a3,n.a3):Ct),Jt(!t)]),d),O(n.a3)])),s(N,$([s(C,"margin-left","auto"),s(C,"display","flex"),s(C,"align-items","center")]),$([s(te,$([ee(e)]),$([O(zr(A(u))+" files")]))]))]))},i.cy))]))},a.L))}),Z=nn({b0:function(n){n=s(dt,At,n);return n.$?{a:dr(d),b:kt}:{a:dr(n.a),b:$r({bD:!1,cm:d})}},ct:function(n){return zt(function(n){return s(Tt,"CLEAR_ALL",n)?Ot:Ct})},cA:on,cC:function(n){function r(n){return zr(A(n))}var t=s(Pt,n.z,s(qt,n.y,s(Bt,n.x,n.L))),e=s(Pt,n.z,s(Bt,n.x,s(Ut,n.D,n.L))),t=s(_,function(n){return n.a3},t),e=xt(pt(s(_,function(n){return n.bO},s(L,s($t,function(n){return n.cy},L(function(n){return n.bG})),e)))),u=s(Pt,n.z,s(qt,n.y,s(Ut,n.D,n.L))),u=xt(pt(s(_,function(n){return n.bF},s(L,s($t,function(n){return n.cy},L(function(n){return n.bG})),u))));return s(N,d,$([s(It,d,$([O("Dendritic Repositories ("+r(t)+")")])),s(ae,n,t),s(It,d,$([O("Nix Config Classes ("+r(e)+")")])),v(ne,n.as,e,n.y,pr),s(It,d,$([O("Dendritic Aspects ("+r(u)+")")])),v(ne,n.ar,u,n.x,gr)]))}}),oe={$:2},fe=a(function(n,r){return s(dt,s(e,"value",n),r)}),be=b(W,Ft,s(e,"anySelected",cn),s(e,"repos",V(sr))),se=function(n){return{$:0,a:n}},ve=Lt(s(_t,"CLEAR_ALL",null)),le=Lt(s(_t,"HIGHLIGHT",null)),un=a(function(n,r){switch(n.$){case 2:return{a:r,b:kt};case 0:return{a:n.a,b:le};default:return{a:r,b:ve}}}),de={$:1},$e=a(function(n,r){return r.$?Cr:n(r.a)}),he=o("button"),ge=Xt("className"),pe=o("code"),z={$:-2},me=z,ye=I,xe=a(function(n,r){for(;;){if(-2===r.$)return Cr;var t=r.c,e=r.d,u=r.e;switch(s(ye,n,r.b)){case 0:n=n,r=e;continue;case 1:return Or(t);default:n=n,r=u;continue}}}),ke=function(n){return n.b?Or(n.a):Cr},Ae=o("p"),je=o("pre"),T=B(function(n,r,t,e,u){return{$:-1,a:n,b:r,c:t,d:e,e:u}}),_e=B(function(n,r,t,e,u){var i,c,a,o;return-1!==u.$||u.a?-1!==e.$||e.a||-1!==e.d.$||e.d.a?l(T,n,r,t,e,u):(i=e.d,o=e.e,l(T,0,e.b,e.c,l(T,1,i.b,i.c,i.d,i.e),l(T,1,r,t,o,u))):(i=u.b,c=u.c,a=u.d,u=u.e,-1!==e.$||e.a?l(T,n,i,c,l(T,0,r,t,e,a),u):l(T,0,r,t,l(T,1,e.b,e.c,e.d,o=e.e),l(T,1,i,c,a,u)))}),Le=r(function(n,r,t){if(-2===t.$)return l(T,0,n,r,z,z);var e=t.a,u=t.b,i=t.c,c=t.d,a=t.e;switch(s(ye,n,u)){case 0:return l(_e,e,u,i,b(Le,n,r,c),a);case 1:return l(T,e,u,r,c,a);default:return l(_e,e,u,i,c,b(Le,n,r,a))}}),we=r(function(n,r,t){n=b(Le,n,r,t);return-1!==n.$||n.a?n:l(T,1,n.b,n.c,n.d,n.e)}),De=S(function(n,r,t,e,u,i,c){if(-1!==i.$||i.a){for(;;){if(-1!==c.$||1!==c.a)break;if(-1!==c.d.$)return yr(r);if(1===c.d.a)return yr(r);break}return r}return l(T,t,i.b,i.c,i.d,l(T,0,e,u,i.e,c))}),Ee=a(function(n,r){var t,e,u,i,c,a,o;return-2===r.$?z:(t=r.a,u=r.c,i=r.d,c=r.e,f(n,e=r.b)<0?-1===i.$&&1===i.a?-1!==(a=i.d).$||a.a?-1===(a=mr(r)).$?(o=a.e,l(_e,a.a,a.b,a.c,s(Ee,n,a.d),o)):z:l(T,t,e,u,s(Ee,n,i),c):l(T,t,e,u,s(Ee,n,i),c):s(Ge,n,q(De,n,r,t,e,u,i,c)))}),Ge=a(function(n,r){var t,e,u,i,c;return-1===r.$?(t=r.a,e=r.c,u=r.d,i=r.e,U(n,r=r.b)?-1===(c=(n=>{for(;;){if(-1!==n.$||-1!==n.d.$)return n;n=n.d}})(i)).$?l(_e,t,c.b,c.c,u,xr(i)):z:l(_e,t,r,e,u,s(Ee,n,i))):z}),Ne=a(function(n,r){n=s(Ee,n,r);return-1!==n.$||n.a?n:l(T,1,n.b,n.c,n.d,n.e)}),Oe=r(function(n,r,t){r=r(s(xe,n,t));return r.$?s(Ne,n,t):b(we,n,r.a,t)}),Ce=function(n){return b(_r,r(function(n,r,t){return s(y,r,t)}),d,n)},ze=function(n){return s(_,function(n){var r=n.a,n=s(Tr,"/",pt(n.b));return s(N,d,$([s(pe,d,$([O(r+": "+n)]))]))},s(gt,Vr,Lr(n)))},Te=function(n){return s(Tr,"",n)},Fe=Xt("id"),Re=function(n){return s(je,$([Fe("dendrix-usage")]),$([s(pe,$([ge("language-nix")]),$([(n=s(_,function(n){return Te($(["    inputs.dendrix.",n.a,".",n.b,"\n"]))},s(L,function(r){return s(_,function(n){return{a:r.a3,b:n.a3}},r.cy)},n)),n=J($(["# modules/dendrix-imports.nix -- on any module of yours.\n{ inputs, ... }:\n{\n  imports = [","\n"]),J(n,$(["  ];\n}","\n"]))),O(Te(n)))]))]))},Be=a(function(n,r){return r.$?n:r.a}),bn=nn({b0:function(n){return{a:{bD:!1,cm:d},b:kt}},ct:function(n){return zt(function(n){return s(Tt,"REPO_UPDATE",n)?se((n=s(fe,be,n)).$?{bD:!1,cm:d}:n.a):oe})},cA:un,cC:function(n){return s(N,d,n.bD?(n=>{var r=A(s(L,function(n){return n.bY},s(L,function(n){return n.bG},s(L,function(n){return n.cy},n.cm)))),t=b(Rr,a(function(n,r){var t=n.b;return b(Oe,n.a,function(n){return Or(s(y,t,s(Be,d,n)))},r)}),me,xt(s(_,function(n){return{a:n.bF,b:n.bO}},s(L,function(n){return n.bG},s(L,function(n){return n.cy},n.cm))))),e=zr(A(wr(t))),u=zr(A(xt(s(L,ut,Ce(t))))),i=s(Be,"virtualisation",ke(wr(t))),c=s(Be,"nixos",s($e,ke,s(xe,i,t)));return $([s(N,d,$([s(he,$([Vt(de)]),$([O("Reset filters")]))])),s(Ae,d,$([O(zr(r)+" nix files\n"),O("contaning the following "+e+" aspects across "+u+" configuration classes:\n")])),s(Ae,d,ze(t)),s(Ae,d,$([O("Add the following to your "),s(pe,d,$([O("flake.nix")])),O(" to include these configuration modules. See also: "),s(te,$([ee("Getting-Started.html")]),$([O("Usage for Dendrix Trees/Layers")]))])),Re(n.cm),s(Ae,d,$([O("On a flake module of yours, extend any of these aspects with your custom configs, like:"),s(N,d,$([s(je,d,$([s(pe,$([ge("language-nix")]),$([O("# modules/${aspect}.nix\n{\n  # eg flake.modules."+c+"."+i+" = { ... };\n  flake.modules.${class}.${aspect} = { <your-configs> };\n}\n                    ")]))]))]))]))])})(n):d)}});t={Results:{init:bn(tt(0))(0)},Search:{init:Z(sn)(0)}},F.Elm?function n(r,t){for(var e in t)e in r?"init"==e?X(6):n(r[e],t[e]):r[e]=t[e]}(F.Elm,t):F.Elm=t})(this);
</file>

<file path="dev/book/theme/index.hbs">
<!DOCTYPE HTML>
<html lang="{{ language }}" class="{{ default_theme }} sidebar-visible" dir="{{ text_direction }}">
    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/styles/default.min.css">
        <script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/highlight.min.js"></script>
        <script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.11.1/build/languages/nix.min.js"></script>

        <!-- Book generated using mdBook -->
        <meta charset="UTF-8">
        <title>{{ title }}</title>
        {{#if is_print }}
        <meta name="robots" content="noindex">
        {{/if}}
        {{#if base_url}}
        <base href="{{ base_url }}">
        {{/if}}


        <!-- Custom HTML head -->
        {{> head}}

        <meta name="description" content="{{ description }}">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="theme-color" content="#ffffff">

        {{#if favicon_svg}}
        <link rel="icon" href="{{ resource "favicon.svg" }}">
        {{/if}}
        {{#if favicon_png}}
        <link rel="shortcut icon" href="{{ resource "favicon.png" }}">
        {{/if}}
        <link rel="stylesheet" href="{{ resource "css/variables.css" }}">
        <link rel="stylesheet" href="{{ resource "css/general.css" }}">
        <link rel="stylesheet" href="{{ resource "css/chrome.css" }}">
        {{#if print_enable}}
        <link rel="stylesheet" href="{{ resource "css/print.css" }}" media="print">
        {{/if}}

        <!-- Fonts -->
        <link rel="stylesheet" href="{{ resource "FontAwesome/css/font-awesome.css" }}">
        {{#if copy_fonts}}
        <link rel="stylesheet" href="{{ resource "fonts/fonts.css" }}">
        {{/if}}

        <!-- Highlight.js Stylesheets -->
        <link rel="stylesheet" id="highlight-css" href="{{ resource "highlight.css" }}">
        <link rel="stylesheet" id="tomorrow-night-css" href="{{ resource "tomorrow-night.css" }}">
        <link rel="stylesheet" id="ayu-highlight-css" href="{{ resource "ayu-highlight.css" }}">

        <!-- Custom theme stylesheets -->
        {{#each additional_css}}
        <link rel="stylesheet" href="{{ resource this }}">
        {{/each}}

        {{#if mathjax_support}}
        <!-- MathJax -->
        <script async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
        {{/if}}

        <!-- Provide site root and default themes to javascript -->
        <script>
            const path_to_root = "{{ path_to_root }}";
            const default_light_theme = "{{ default_theme }}";
            const default_dark_theme = "{{ preferred_dark_theme }}";
        </script>
        <!-- Start loading toc.js asap -->
        <script src="{{ resource "toc.js" }}"></script>
    </head>
    <body>
    <div id="body-container">
        <!-- Work around some values being stored in localStorage wrapped in quotes -->
        <script>
            try {
                let theme = localStorage.getItem('mdbook-theme');
                let sidebar = localStorage.getItem('mdbook-sidebar');

                if (theme.startsWith('"') && theme.endsWith('"')) {
                    localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));
                }

                if (sidebar.startsWith('"') && sidebar.endsWith('"')) {
                    localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));
                }
            } catch (e) { }
        </script>

        <!-- Set the theme before any content is loaded, prevents flash -->
        <script>
            const default_theme = window.matchMedia("(prefers-color-scheme: dark)").matches ? default_dark_theme : default_light_theme;
            let theme;
            try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }
            if (theme === null || theme === undefined) { theme = default_theme; }
            const html = document.documentElement;
            html.classList.remove('{{ default_theme }}')
            html.classList.add(theme);
            html.classList.add("js");
        </script>

        <input type="checkbox" id="sidebar-toggle-anchor" class="hidden">

        <!-- Hide / unhide sidebar before it is displayed -->
        <script>
            let sidebar = null;
            const sidebar_toggle = document.getElementById("sidebar-toggle-anchor");
            if (document.body.clientWidth >= 1080) {
                try { sidebar = localStorage.getItem('mdbook-sidebar'); } catch(e) { }
                sidebar = sidebar || 'visible';
            } else {
                sidebar = 'hidden';
            }
            sidebar_toggle.checked = sidebar === 'visible';
            html.classList.remove('sidebar-visible');
            html.classList.add("sidebar-" + sidebar);
        </script>

        <nav id="sidebar" class="sidebar" aria-label="Table of contents">
            <!-- populated by js -->
            <mdbook-sidebar-scrollbox class="sidebar-scrollbox"></mdbook-sidebar-scrollbox>
            <noscript>
                <iframe class="sidebar-iframe-outer" src="{{ path_to_root }}toc.html"></iframe>
            </noscript>
            <div id="sidebar-resize-handle" class="sidebar-resize-handle">
                <div class="sidebar-resize-indicator"></div>
            </div>
        </nav>

        <div id="page-wrapper" class="page-wrapper">

            <div class="page">
                {{> header}}
                <div id="menu-bar-hover-placeholder"></div>
                <div id="menu-bar" class="menu-bar sticky">
                    <div class="left-buttons">
                        <label id="sidebar-toggle" class="icon-button" for="sidebar-toggle-anchor" title="Toggle Table of Contents" aria-label="Toggle Table of Contents" aria-controls="sidebar">
                            <i class="fa fa-bars"></i>
                        </label>
                        <button id="theme-toggle" class="icon-button" type="button" title="Change theme" aria-label="Change theme" aria-haspopup="true" aria-expanded="false" aria-controls="theme-list">
                            <i class="fa fa-paint-brush"></i>
                        </button>
                        <ul id="theme-list" class="theme-popup" aria-label="Themes" role="menu">
                            <li role="none"><button role="menuitem" class="theme" id="default_theme">Auto</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="light">Light</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="rust">Rust</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="coal">Coal</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="navy">Navy</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="ayu">Ayu</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="latte">Latte</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="frappe">Frappe</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="macchiato">Macchiato</button></li>
                            <li role="none"><button role="menuitem" class="theme" id="mocha">Mocha</button></li>
                        </ul>
                        {{#if search_enabled}}
                        <button id="search-toggle" class="icon-button" type="button" title="Search. (Shortkey: s)" aria-label="Toggle Searchbar" aria-expanded="false" aria-keyshortcuts="S" aria-controls="searchbar">
                            <i class="fa fa-search"></i>
                        </button>
                        {{/if}}
                    </div>

                    <h1 class="menu-title">{{ book_title }}</h1>

                    <div class="right-buttons">
                        {{#if print_enable}}
                        <a href="{{ path_to_root }}print.html" title="Print this book" aria-label="Print this book">
                            <i id="print-button" class="fa fa-print"></i>
                        </a>
                        {{/if}}
                        {{#if git_repository_url}}
                        <a href="{{git_repository_url}}" title="Git repository" aria-label="Git repository">
                            <i id="git-repository-button" class="fa {{git_repository_icon}}"></i>
                        </a>
                        {{/if}}
                        {{#if git_repository_edit_url}}
                        <a href="{{git_repository_edit_url}}" title="Suggest an edit" aria-label="Suggest an edit">
                            <i id="git-edit-button" class="fa fa-edit"></i>
                        </a>
                        {{/if}}

                    </div>
                </div>

                {{#if search_enabled}}
                <div id="search-wrapper" class="hidden">
                    <form id="searchbar-outer" class="searchbar-outer">
                        <input type="search" id="searchbar" name="searchbar" placeholder="Search this book ..." aria-controls="searchresults-outer" aria-describedby="searchresults-header">
                    </form>
                    <div id="searchresults-outer" class="searchresults-outer hidden">
                        <div id="searchresults-header" class="searchresults-header"></div>
                        <ul id="searchresults">
                        </ul>
                    </div>
                </div>
                {{/if}}

                <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->
                <script>
                    document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');
                    document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');
                    Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {
                        link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);
                    });
                </script>

                <div id="content" class="content">
                    <main>
                        {{{ content }}}
                    </main>

                    <nav class="nav-wrapper" aria-label="Page navigation">
                        <!-- Mobile navigation buttons -->
                        {{#previous}}
                            <a rel="prev" href="{{ path_to_root }}{{link}}" class="mobile-nav-chapters previous" title="Previous chapter" aria-label="Previous chapter" aria-keyshortcuts="Left">
                                <i class="fa fa-angle-left"></i>
                            </a>
                        {{/previous}}

                        {{#next}}
                            <a rel="next prefetch" href="{{ path_to_root }}{{link}}" class="mobile-nav-chapters next" title="Next chapter" aria-label="Next chapter" aria-keyshortcuts="Right">
                                <i class="fa fa-angle-right"></i>
                            </a>
                        {{/next}}

                        <div style="clear: both"></div>
                    </nav>
                </div>
            </div>

            <nav class="nav-wide-wrapper" aria-label="Page navigation">
                {{#previous}}
                    <a rel="prev" href="{{ path_to_root }}{{link}}" class="nav-chapters previous" title="Previous chapter" aria-label="Previous chapter" aria-keyshortcuts="Left">
                        <i class="fa fa-angle-left"></i>
                    </a>
                {{/previous}}

                {{#next}}
                    <a rel="next prefetch" href="{{ path_to_root }}{{link}}" class="nav-chapters next" title="Next chapter" aria-label="Next chapter" aria-keyshortcuts="Right">
                        <i class="fa fa-angle-right"></i>
                    </a>
                {{/next}}
            </nav>

        </div>

        {{#if live_reload_endpoint}}
        <!-- Livereload script (if served using the cli tool) -->
        <script>
            const wsProtocol = location.protocol === 'https:' ? 'wss:' : 'ws:';
            const wsAddress = wsProtocol + "//" + location.host + "/" + "{{{live_reload_endpoint}}}";
            const socket = new WebSocket(wsAddress);
            socket.onmessage = function (event) {
                if (event.data === "reload") {
                    socket.close();
                    location.reload();
                }
            };

            window.onbeforeunload = function() {
                socket.close();
            }
        </script>
        {{/if}}

        {{#if google_analytics}}
        <!-- Google Analytics Tag -->
        <script>
            const localAddrs = ["localhost", "127.0.0.1", ""];

            // make sure we don't activate google analytics if the developer is
            // inspecting the book locally...
            if (localAddrs.indexOf(document.location.hostname) === -1) {
                (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
                })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

                ga('create', '{{google_analytics}}', 'auto');
                ga('send', 'pageview');
            }
        </script>
        {{/if}}

        {{#if playground_line_numbers}}
        <script>
            window.playground_line_numbers = true;
        </script>
        {{/if}}

        {{#if playground_copyable}}
        <script>
            window.playground_copyable = true;
        </script>
        {{/if}}

        {{#if playground_js}}
        <script src="{{ resource "ace.js" }}"></script>
        <script src="{{ resource "editor.js" }}"></script>
        <script src="{{ resource "mode-rust.js" }}"></script>
        <script src="{{ resource "theme-dawn.js" }}"></script>
        <script src="{{ resource "theme-tomorrow_night.js" }}"></script>
        {{/if}}

        {{#if search_js}}
        <script src="{{ resource "elasticlunr.min.js" }}"></script>
        <script src="{{ resource "mark.min.js" }}"></script>
        <script src="{{ resource "searcher.js" }}"></script>
        {{/if}}

        <script src="{{ resource "clipboard.min.js" }}"></script>
        {{!-- <script src="{{ resource "highlight.js" }}"></script> --}}
        <script src="{{ resource "book.js" }}"></script>

        <!-- Custom JS scripts -->
        {{#each additional_js}}
        <script src="{{ resource this}}"></script>
        {{/each}}

        {{#if is_print}}
        {{#if mathjax_support}}
        <script>
        window.addEventListener('load', function() {
            MathJax.Hub.Register.StartupHook('End', function() {
                window.setTimeout(window.print, 100);
            });
        });
        </script>
        {{else}}
        <script>
        window.addEventListener('load', function() {
            window.setTimeout(window.print, 100);
        });
        </script>
        {{/if}}
        {{/if}}

    </div>
    </body>
</html>
</file>

<file path="dev/book/.gitignore">
book/
./book
</file>

<file path="dev/book/book.toml">
[book]
authors = ["Victor Borja"]
language = "en"
src = "src"
title = "Dendrix - Community driven Dendritic Nix configurations."

[output.html]
git-repository-url = "https://github.com/vic/dendrix"
edit-url-template = "https://github.com/vic/dendrix/edit/main/dev/book/{path}"
additional-js = ["./theme/dendrix_repos.js", "./theme/elm.js", "./theme/elm-init.js"]
additional-css = ["./theme/catppuccin.css"]
default-theme = "latte"
preferred-dark-theme = "mocha"
</file>

<file path="dev/book/index.html">
<!doctype html>
<html lang="en" class="latte sidebar-visible" dir="ltr">
  <head>
    <!-- Book generated using mdBook -->
    <meta charset="UTF-8" />
    <title>
      Introduction - Dendrix - Community driven Dendritic Nix configurations.
    </title>

    <!-- Custom HTML head -->

    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#ffffff" />

    <link rel="icon" href="favicon.svg" />
    <link rel="shortcut icon" href="favicon.png" />
    <link rel="stylesheet" href="css/variables.css" />
    <link rel="stylesheet" href="css/general.css" />
    <link rel="stylesheet" href="css/chrome.css" />
    <link rel="stylesheet" href="css/print.css" media="print" />

    <!-- Fonts -->
    <link rel="stylesheet" href="FontAwesome/css/font-awesome.css" />
    <link rel="stylesheet" href="fonts/fonts.css" />

    <!-- Highlight.js Stylesheets -->
    <link rel="stylesheet" id="highlight-css" href="highlight.css" />
    <link rel="stylesheet" id="tomorrow-night-css" href="tomorrow-night.css" />
    <link rel="stylesheet" id="ayu-highlight-css" href="ayu-highlight.css" />

    <!-- Custom theme stylesheets -->
    <link rel="stylesheet" href="./theme/catppuccin.css" />

    <!-- Provide site root and default themes to javascript -->
    <script>
      const path_to_root = "";
      const default_light_theme = "latte";
      const default_dark_theme = "mocha";
    </script>
    <!-- Start loading toc.js asap -->
    <script src="toc.js"></script>
  </head>
  <body>
    <div id="body-container">
      <!-- Work around some values being stored in localStorage wrapped in quotes -->
      <script>
        try {
          let theme = localStorage.getItem("mdbook-theme");
          let sidebar = localStorage.getItem("mdbook-sidebar");

          if (theme.startsWith('"') && theme.endsWith('"')) {
            localStorage.setItem(
              "mdbook-theme",
              theme.slice(1, theme.length - 1),
            );
          }

          if (sidebar.startsWith('"') && sidebar.endsWith('"')) {
            localStorage.setItem(
              "mdbook-sidebar",
              sidebar.slice(1, sidebar.length - 1),
            );
          }
        } catch (e) {}
      </script>

      <!-- Set the theme before any content is loaded, prevents flash -->
      <script>
        const default_theme = window.matchMedia("(prefers-color-scheme: dark)")
          .matches
          ? default_dark_theme
          : default_light_theme;
        let theme;
        try {
          theme = localStorage.getItem("mdbook-theme");
        } catch (e) {}
        if (theme === null || theme === undefined) {
          theme = default_theme;
        }
        const html = document.documentElement;
        html.classList.remove("latte");
        html.classList.add(theme);
        html.classList.add("js");
      </script>

      <input type="checkbox" id="sidebar-toggle-anchor" class="hidden" />

      <!-- Hide / unhide sidebar before it is displayed -->
      <script>
        let sidebar = null;
        const sidebar_toggle = document.getElementById("sidebar-toggle-anchor");
        if (document.body.clientWidth >= 1080) {
          try {
            sidebar = localStorage.getItem("mdbook-sidebar");
          } catch (e) {}
          sidebar = sidebar || "visible";
        } else {
          sidebar = "hidden";
        }
        sidebar_toggle.checked = sidebar === "visible";
        html.classList.remove("sidebar-visible");
        html.classList.add("sidebar-" + sidebar);
      </script>

      <nav id="sidebar" class="sidebar" aria-label="Table of contents">
        <!-- populated by js -->
        <mdbook-sidebar-scrollbox
          class="sidebar-scrollbox"
        ></mdbook-sidebar-scrollbox>
        <noscript>
          <iframe class="sidebar-iframe-outer" src="toc.html"></iframe>
        </noscript>
        <div id="sidebar-resize-handle" class="sidebar-resize-handle">
          <div class="sidebar-resize-indicator"></div>
        </div>
      </nav>

      <div id="page-wrapper" class="page-wrapper">
        <div class="page">
          <div id="menu-bar-hover-placeholder"></div>
          <div id="menu-bar" class="menu-bar sticky">
            <div class="left-buttons">
              <label
                id="sidebar-toggle"
                class="icon-button"
                for="sidebar-toggle-anchor"
                title="Toggle Table of Contents"
                aria-label="Toggle Table of Contents"
                aria-controls="sidebar"
              >
                <i class="fa fa-bars"></i>
              </label>
              <button
                id="theme-toggle"
                class="icon-button"
                type="button"
                title="Change theme"
                aria-label="Change theme"
                aria-haspopup="true"
                aria-expanded="false"
                aria-controls="theme-list"
              >
                <i class="fa fa-paint-brush"></i>
              </button>
              <ul
                id="theme-list"
                class="theme-popup"
                aria-label="Themes"
                role="menu"
              >
                <li role="none">
                  <button role="menuitem" class="theme" id="default_theme">
                    Auto
                  </button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="light">
                    Light
                  </button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="rust">Rust</button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="coal">Coal</button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="navy">Navy</button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="ayu">Ayu</button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="latte">
                    Latte
                  </button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="frappe">
                    Frappe
                  </button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="macchiato">
                    Macchiato
                  </button>
                </li>
                <li role="none">
                  <button role="menuitem" class="theme" id="mocha">
                    Mocha
                  </button>
                </li>
              </ul>
              <button
                id="search-toggle"
                class="icon-button"
                type="button"
                title="Search. (Shortkey: s)"
                aria-label="Toggle Searchbar"
                aria-expanded="false"
                aria-keyshortcuts="S"
                aria-controls="searchbar"
              >
                <i class="fa fa-search"></i>
              </button>
            </div>

            <h1 class="menu-title">
              Dendrix - Community driven Dendritic Nix configurations.
            </h1>

            <div class="right-buttons">
              <a
                href="print.html"
                title="Print this book"
                aria-label="Print this book"
              >
                <i id="print-button" class="fa fa-print"></i>
              </a>
            </div>
          </div>

          <div id="search-wrapper" class="hidden">
            <form id="searchbar-outer" class="searchbar-outer">
              <input
                type="search"
                id="searchbar"
                name="searchbar"
                placeholder="Search this book ..."
                aria-controls="searchresults-outer"
                aria-describedby="searchresults-header"
              />
            </form>
            <div id="searchresults-outer" class="searchresults-outer hidden">
              <div id="searchresults-header" class="searchresults-header"></div>
              <ul id="searchresults"></ul>
            </div>
          </div>

          <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->
          <script>
            document
              .getElementById("sidebar-toggle")
              .setAttribute("aria-expanded", sidebar === "visible");
            document
              .getElementById("sidebar")
              .setAttribute("aria-hidden", sidebar !== "visible");
            Array.from(document.querySelectorAll("#sidebar a")).forEach(
              function (link) {
                link.setAttribute("tabIndex", sidebar === "visible" ? 0 : -1);
              },
            );
          </script>

          <div id="content" class="content">
            <main>
              <h1 id="introduction">
                <a class="header" href="#introduction">Introduction</a>
              </h1>
            </main>

            <nav class="nav-wrapper" aria-label="Page navigation">
              <!-- Mobile navigation buttons -->

              <div style="clear: both"></div>
            </nav>
          </div>
        </div>

        <nav class="nav-wide-wrapper" aria-label="Page navigation"></nav>
      </div>

      <!-- Livereload script (if served using the cli tool) -->
      <script>
        const wsProtocol = location.protocol === "https:" ? "wss:" : "ws:";
        const wsAddress =
          wsProtocol + "//" + location.host + "/" + "__livereload";
        const socket = new WebSocket(wsAddress);
        socket.onmessage = function (event) {
          if (event.data === "reload") {
            socket.close();
            location.reload();
          }
        };

        window.onbeforeunload = function () {
          socket.close();
        };
      </script>

      <script>
        window.playground_copyable = true;
      </script>

      <script src="elasticlunr.min.js"></script>
      <script src="mark.min.js"></script>
      <script src="searcher.js"></script>

      <script src="clipboard.min.js"></script>
      <script src="highlight.js"></script>
      <script src="book.js"></script>

      <!-- Custom JS scripts -->
    </div>
  </body>
</html>
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/default.json">
{
  "default": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/facter.json">
{
  "facter": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/gui.json">
{
  "gui": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/hyprde.json">
{
  "hyprde": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/irpf.json">
{
  "irpf": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/laptop.json">
{
  "laptop": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/work.json">
{
  "work": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/dliberalesso-nix-config/wsl.json">
{
  "wsl": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/hosts/nixos.json">
{
  "hosts/nixos": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/networking.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/fileSystems.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/facter.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/nixos/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/hosts/x13.json">
{
  "hosts/x13": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/services.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/programs.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/hardware.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/fileSystems.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/facter.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x13/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/hosts/x260.json">
{
  "hosts/x260": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/services.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/fileSystems.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/facter.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x260/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/hosts/x280.json">
{
  "hosts/x280": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/services.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/fileSystems.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/facter.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/x280/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/hosts/xeonixos.json">
{
  "hosts/xeonixos": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/nvidia.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/fileSystems.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/facter.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/hosts/xeonixos/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/ai.json">
{
  "ai": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/tika/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/searx.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/open-webui.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/ollama.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/litellm/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/ai/docling-serve.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/base.json">
{
  "base": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/flake-parts/unfree-packages.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/yubikey.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/xdg.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/system/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/podman.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/passwords-mgmt/password-store.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/home.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/editors/micro.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/command-not-found.nix"
    ],
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/flake-parts/unfree-packages.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/yubikey.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/time/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/system/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/system/auto-upgrade/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/services.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/security/sudo-rs.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/security/rtkit.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/power-mgmt/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/nix.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/network/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/i18n.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/documentation.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/console/console.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/command-not-found.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/boot/kernel.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/boot/default.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/admin/nh.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/base/accessibility/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/bluetooth.json">
{
  "bluetooth": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/bluetooth/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/desktop.json">
{
  "desktop": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/web-browsers/firefox.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/fonts/fonts.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/kdeplasma.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/default.nix"
    ],
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/fonts/fonts.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/winbox.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/desktop/environment/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/dev.json">
{
  "dev": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/xdg.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/languages/nix.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/mergiraf.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/lazygit.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/jujutsu.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/gpg.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/git.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/gh.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/git/gh-dash.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/editors/zeditor.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/editors/vscode.nix"
    ],
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/dev/editors/vscode.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/displaylink.json">
{
  "displaylink": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/work/displaylink.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/email.json">
{
  "email": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/email/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/facter.json">
{
  "facter": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/facter/facter.nix"
    ],
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/facter/facter.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/fwupd.json">
{
  "fwupd": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/fwupd/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/games.json">
{
  "games": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/games/enemy-territory.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/guacamole.json">
{
  "guacamole": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/guacamole/guacamole.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/messaging.json">
{
  "messaging": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/messaging/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/openssh.json">
{
  "openssh": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/openssh/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/pol.json">
{
  "pol": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/users/pol/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/root.json">
{
  "root": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/users/root/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/shell.json">
{
  "shell": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/zoxide.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/starship.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/ripgrep.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/nix-your-shell.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/htop.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/ghostty.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/fzf.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/fish.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/eza.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/direnv.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/bottom.nix",
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/bat.nix"
    ],
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/shell/fish.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/sound.json">
{
  "sound": {
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/sound/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/vpn.json">
{
  "vpn": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/vpn/default.nix"
    ],
    "nixos": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/vpn/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/drupol-infra/work.json">
{
  "work": {
    "homeManager": [
      "/nix/store/357xahdzgmmbkqmawphqz9sz1a6gvs9v-source/modules/work/aws.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/agenix.json">
{
  "agenix": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/agenix.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/android.json">
{
  "android": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/android.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/bg-stream.json">
{
  "bg-stream": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/bg-stream.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/bluetooth.json">
{
  "bluetooth": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/bluetooth.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/bootloader.json">
{
  "bootloader": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/bootloader.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/caddy-reverse-proxies.json">
{
  "caddy-reverse-proxies": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/server/caddy-reverse-proxies.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/cloud-backup.json">
{
  "cloud-backup": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/server/cloud-backup/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/core.json">
{
  "core": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/zellij.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/yazi.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/tmux.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/nix-builders.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/hosts/default.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/default.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/ssh/aliases.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/starship.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/remi.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/misc.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/fish.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/eza.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/exputils.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/shell/aliases.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/performance.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/options.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/keymappings.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/default.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/completion.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/neovim/autocommands.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/monitoring.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/misc.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/programs/git.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/imports.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/typst.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/shell.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/rust.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/python.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/vim.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/shell-aliases.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/packages.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/nix-init.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/nix/misc.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/github-token.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/cmake.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/dev/apptainer.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/default.nix"
    ],
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/packages.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/misc.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/imports.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/csConfig.json">
{
  "csConfig": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/cs-config/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/desktop-programs.json">
{
  "desktop-programs": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/programs.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/desktop.json">
{
  "desktop": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/imports.nix"
    ],
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/wayland.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/packages.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/misc.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/imports.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/dev.json">
{
  "dev": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/display-manager.json">
{
  "display-manager": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/display-manager.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/dunst.json">
{
  "dunst": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/dunst.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/email.json">
{
  "email": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/email.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/firefox.json">
{
  "firefox": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/firefox.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/flameshot.json">
{
  "flameshot": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/flameshot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/foot.json">
{
  "foot": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/foot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/gammastep.json">
{
  "gammastep": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/gammastep.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/gtk.json">
{
  "gtk": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/gtk.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/home-manager.json">
{
  "home-manager": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/home-manager.nix"
    ],
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/home-manager.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/host_cuda.json">
{
  "host_cuda": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/cuda/home.nix"
    ],
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/cuda/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/host_feroe.json">
{
  "host_feroe": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/zfs.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/wireguard/default.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/hardware.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/feroe/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/host_framework.json">
{
  "host_framework": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/kanshi.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/inria.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/default.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/home/backup/default.nix"
    ],
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/wireguard/default.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/misc.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/hardware.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/disko.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/default.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/framework/autofs.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/host_inria.json">
{
  "host_inria": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/inria/home.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/host_jrs.json">
{
  "host_jrs": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/jrs/home.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/host_tank.json">
{
  "host_tank": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/tank/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/host_vps.json">
{
  "host_vps": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/hosts/vps/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/kanshi.json">
{
  "kanshi": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/kanshi/module.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/kanshi/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/keyring.json">
{
  "keyring": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/keyring.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/nh.json">
{
  "nh": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/nh.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/nix-index-database.json">
{
  "nix-index-database": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/nix-index-database.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/nix.json">
{
  "nix": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/nix.nix"
    ],
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/nix.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/nvidia.json">
{
  "nvidia": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/nvidia.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/obs.json">
{
  "obs": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/obs.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/printing.json">
{
  "printing": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/printing.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/remote-builders.json">
{
  "remote-builders": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/remote-builders/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/rofi.json">
{
  "rofi": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/rofi.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/security.json">
{
  "security": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/security.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/server.json">
{
  "server": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/server/imports.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/sound.json">
{
  "sound": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/sound.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/ssh-client.json">
{
  "ssh-client": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/ssh-client/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/ssh-server.json">
{
  "ssh-server": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/ssh-server.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/streaming.json">
{
  "streaming": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/streaming.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/substituters.json">
{
  "substituters": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/dev/substituters.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/sway.json">
{
  "sway": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/workspaces.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/theming.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/startup.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/keybindings.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/input.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/sway/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/swaylock.json">
{
  "swaylock": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/swaylock.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/thunar.json">
{
  "thunar": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/desktop/thunar.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/udiskie.json">
{
  "udiskie": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/udiskie.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/users.json">
{
  "users": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/users.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/waybar.json">
{
  "waybar": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/waybar/sway.nix",
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/waybar/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/wayland.json">
{
  "wayland": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/wayland.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/wireguard-client.json">
{
  "wireguard-client": {
    "nixos": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/nixos/core/wireguard-client.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/xdg.json">
{
  "xdg": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/core/xdg.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/gaetanlepage-nix-config/zathura.json">
{
  "zathura": {
    "homeManager": [
      "/nix/store/35kdnji7s93lls6nb7pz5sbqsagdsgwd-source/modules/home/desktop/zathura.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/albion.json">
{
  "albion": {
    "hosts": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/albion/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/allowedUnfreePackages.json">
{
  "allowedUnfreePackages": {
    "nixpkgs": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/vscode.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/base.json">
{
  "base": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/omarchy.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/system/default.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/home.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/time.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/system/default.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/security/rtkit.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/security/polkit.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/nix.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/network/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/containers.json">
{
  "containers": {
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/containers/podman.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/darwin-desktop.json">
{
  "darwin-desktop": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/darwin-desktop.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/desktop.json">
{
  "desktop": {
    "darwin": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/darwin-desktop.nix"
    ],
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/wallpapers.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/default.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/default.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/browsers/firefox.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/browsers/chrome.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/dev.json">
{
  "dev": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/sapling.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/git.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/vscode.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/sapling.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/packages.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/languages.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/firewall.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/vscode.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/fonts.json">
{
  "fonts": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/fonts/fonts.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/fonts/fonts.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/games.json">
{
  "games": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/mangohud.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/default.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/gamescope.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/games/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/gawain.json">
{
  "gawain": {
    "hosts": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/gawain/hardware-configuration.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/gawain/default.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/gawain/boot.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/nvidia/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/gnome.json">
{
  "gnome": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/gnome.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/gnome.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/guren.json">
{
  "guren": {
    "hosts": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/omarchy.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/hardware-configuration.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/default.nix",
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/hosts/guren/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/henry.json">
{
  "henry": {
    "nixosUsers": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/users/henry/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/nixvim.json">
{
  "nixvim": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/dev/editors/nixvim/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/packages.json">
{
  "packages": {
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/packages/packages.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/plasma.json">
{
  "plasma": {
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/plasma.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/desktop/environment/plasma.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/root.json">
{
  "root": {
    "nixosUsers": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/users/root/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/shell.json">
{
  "shell": {
    "darwin": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/shell/default.nix"
    ],
    "homeManager": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/shell/default.nix"
    ],
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/base/shell/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/sound.json">
{
  "sound": {
    "nixos": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/sound/sound.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/system.json">
{
  "system": {
    "darwin": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/darwin-system.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/henrysipp-nix-setup/work.json">
{
  "work": {
    "darwin": [
      "/nix/store/lpnd1hzjg10a8v4hjq6bcarlrh2kcmf4-source/modules/darwin/work.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/additional-plugins.json">
{
  "additional-plugins": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/additional-plugins.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/auto-session.json">
{
  "auto-session": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/auto-session.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/colorizer.json">
{
  "colorizer": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/colorizer.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/compiler.json">
{
  "compiler": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/compiler.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/completion.json">
{
  "completion": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/completion.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/core.json">
{
  "core": {
    "config": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/configs/core.nix"
    ],
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/options.nix",
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/keybindings.nix",
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/default.nix",
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/core/autocmds.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/debug.json">
{
  "debug": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/debug.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/dial.json">
{
  "dial": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/dial.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/firenvim.json">
{
  "firenvim": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/firenvim.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/full.json">
{
  "full": {
    "config": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/configs/full.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/git.json">
{
  "git": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/git.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/harpoon.json">
{
  "harpoon": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/harpoon.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/lsp.json">
{
  "lsp": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/otter.nix",
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/lint.nix",
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/format.nix",
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/lsp/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/markdown.json">
{
  "markdown": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/markdown.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/maximize.json">
{
  "maximize": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/maximize.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/navigator.json">
{
  "navigator": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/navigator.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/neorg.json">
{
  "neorg": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/neorg.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/oil.json">
{
  "oil": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/oil.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/optimizations.json">
{
  "optimizations": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/optimizations.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/overseer.json">
{
  "overseer": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/overseer.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/project-nvim.json">
{
  "project-nvim": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/project-nvim.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/telescope.json">
{
  "telescope": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/telescope.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/tests.json">
{
  "tests": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/tests.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/todo-comments.json">
{
  "todo-comments": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/todo-comments.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/treesitter.json">
{
  "treesitter": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/treesitter.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/trouble.json">
{
  "trouble": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/trouble.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/ufo.json">
{
  "ufo": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/ufo.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/ui.json">
{
  "ui": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/ui.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/utils.json">
{
  "utils": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/utils.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/icyd-nixvim/yanky.json">
{
  "yanky": {
    "nixvim": [
      "/nix/store/hnls1svr87barakf61d003clkb5pk95z-source/modules/yanky.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/hosts/gouda.json">
{
  "hosts/gouda": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/virtualisation.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/services.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/programs.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/networking.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/hardware.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/fileSystems.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/facter.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/gouda/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/hosts/nixos.json">
{
  "hosts/nixos": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/networking.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/fileSystems.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/facter.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/hosts/nixos/boot.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/ai.json">
{
  "ai": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/tika/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/searx.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/open-webui.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/ollama.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/litellm/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/ai/docling-serve.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/base.json">
{
  "base": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/flake-parts/unfree-packages.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/xdg.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/passwords-mgmt/password-store.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/home.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/editors/micro.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/command-not-found.nix"
    ],
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/flake-parts/unfree-packages.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/time/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/system/auto-upgrade/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/services.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/security/sudo-rs.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/security/rtkit.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/security/pam.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/power-mgmt/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/nix.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/network/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/i18n.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/editors/nano.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/documentation.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/console/console.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/command-not-found.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/boot/kernel.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/boot/default.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/admin/nh.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/base/accessibility/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/bluetooth.json">
{
  "bluetooth": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/bluetooth/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/desktop.json">
{
  "desktop": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/web-browsers/firefox.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/fonts/fonts.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/environment/kdeplasma.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/environment/default.nix"
    ],
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/fonts/fonts.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/desktop/environment/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/dev.json">
{
  "dev": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/xdg.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/languages/nix.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/mergiraf.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/lazygit.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/jujutsu.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/gpg.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/git.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/gh.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/git/gh-dash.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/editors/zeditor.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/editors/vscode.nix"
    ],
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/dev/editors/vscode.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/displaylink.json">
{
  "displaylink": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/work/displaylink.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/email.json">
{
  "email": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/email/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/facter.json">
{
  "facter": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/facter/facter.nix"
    ],
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/facter/facter.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/fwupd.json">
{
  "fwupd": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/fwupd/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/games.json">
{
  "games": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/games/enemy-territory.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/guacamole.json">
{
  "guacamole": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/guacamole/guacamole.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/messaging.json">
{
  "messaging": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/messaging/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/mimi.json">
{
  "mimi": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/users/mimi/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/openssh.json">
{
  "openssh": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/openssh/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/root.json">
{
  "root": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/users/root/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/shell.json">
{
  "shell": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/zoxide.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/starship.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/ripgrep.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/nix-your-shell.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/htop.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/ghostty.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/fzf.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/fish.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/eza.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/direnv.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/bottom.nix",
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/bat.nix"
    ],
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/shell/fish.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/sound.json">
{
  "sound": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/sound/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/virtualisation.json">
{
  "virtualisation": {
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/virtualisation/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/vpn.json">
{
  "vpn": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/vpn/default.nix"
    ],
    "nixos": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/vpn/default.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/Maka-77x-nixconf7/work.json">
{
  "work": {
    "homeManager": [
      "/nix/store/qc1p9kh92f9s1nz5wq6n0p3h9xmlm7g7-source/modules/work/aws.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/cachix.json">
{
  "cachix": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/default.json">
{
  "default": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/gaming.json">
{
  "gaming": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/hacking.json">
{
  "hacking": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/laptop.json">
{
  "laptop": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/localai.json">
{
  "localai": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/plymouth.json">
{
  "plymouth": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/remote.json">
{
  "remote": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/replays.json">
{
  "replays": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/secure-boot.json">
{
  "secure-boot": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/server.json">
{
  "server": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/ssh.json">
{
  "ssh": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/syncthing-client.json">
{
  "syncthing-client": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/syncthing-server.json">
{
  "syncthing-server": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/virtualisation.json">
{
  "virtualisation": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/waydroid.json">
{
  "waydroid": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/workstation.json">
{
  "workstation": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/zfs.json">
{
  "zfs": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/quasigod-nixconfig/zsa-kb.json">
{
  "zsa-kb": {
    "home": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ],
    "nixos": [
      "/nix/store/hbar1bqvkyrjjaal0y5xpqp4yapz75sz-source/modules/modules.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/aarch64-darwin.json">
{
  "aarch64-darwin": {
    "darwin": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/aarch64-linux.json">
{
  "aarch64-linux": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/all-firmware.json">
{
  "all-firmware": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/all-firmware.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/bootable.json">
{
  "bootable": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/bootable.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/darwin.json">
{
  "darwin": {
    "darwin": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/darwin.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/gnome-desktop.json">
{
  "gnome-desktop": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/gnome-desktop.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/kde-desktop.json">
{
  "kde-desktop": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/kde-desktop.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/kvm-amd.json">
{
  "kvm-amd": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/kvm+amd.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/kvm-intel.json">
{
  "kvm-intel": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/kvm+intel.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/macos-keys.json">
{
  "macos-keys": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/macos-keys.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/nix-index.json">
{
  "nix-index": {
    "homeManager": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/home/nix-index.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/nix-registry.json">
{
  "nix-registry": {
    "homeManager": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/home/nix-registry.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/nix-settings.json">
{
  "nix-settings": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/nix-setttings.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/nixos.json">
{
  "nixos": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/nixos.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/nvidia.json">
{
  "nvidia": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/nvidia.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/rdesk.json">
{
  "rdesk": {
    "homeManager": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/rdesk+inputleap+anydesk.nix"
    ],
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/rdesk+inputleap+anydesk.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/unfree.json">
{
  "unfree": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/unfree.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/vic.json">
{
  "vic": {
    "darwin": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/user.nix"
    ],
    "homeManager": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/unfree.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/ssh.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/secrets.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/rdesk.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/nvim.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/jujutsu.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/imports.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/home.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/git.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/fish.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/dots.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/doom.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/direnv.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/desktop-apps.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/apps.nix"
    ],
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/user.nix",
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/vic/rdesk.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/vscode-server.json">
{
  "vscode-server": {
    "homeManager": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/home/vscode-server.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/wl-broadcom.json">
{
  "wl-broadcom": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/wl-broadcom.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/wsl.json">
{
  "wsl": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/wsl.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/x86_64-darwin.json">
{
  "x86_64-darwin": {
    "darwin": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/x86_64-linux.json">
{
  "x86_64-linux": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/platform.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/vic-vix/xfce-desktop.json">
{
  "xfce-desktop": {
    "nixos": [
      "/nix/store/grfxh7izx1kk762gsfqc0ijm9zsy1id8-source/modules/community/features/xfce-desktop.nix"
    ]
  }
}
</file>

<file path="dev/community/discovered/trees.json">
{
  "Maka-77x-nixconf7": [
    "ai",
    "base",
    "bluetooth",
    "desktop",
    "dev",
    "displaylink",
    "email",
    "facter",
    "fwupd",
    "games",
    "guacamole",
    "hosts/gouda",
    "hosts/nixos",
    "messaging",
    "mimi",
    "openssh",
    "root",
    "shell",
    "sound",
    "virtualisation",
    "vpn",
    "work"
  ],
  "dliberalesso-nix-config": [
    "default",
    "facter",
    "gui",
    "hyprde",
    "irpf",
    "laptop",
    "work",
    "wsl"
  ],
  "drupol-infra": [
    "ai",
    "base",
    "bluetooth",
    "desktop",
    "dev",
    "displaylink",
    "email",
    "facter",
    "fwupd",
    "games",
    "guacamole",
    "hosts/nixos",
    "hosts/x13",
    "hosts/x260",
    "hosts/x280",
    "hosts/xeonixos",
    "messaging",
    "openssh",
    "pol",
    "root",
    "shell",
    "sound",
    "vpn",
    "work"
  ],
  "gaetanlepage-nix-config": [
    "agenix",
    "android",
    "bg-stream",
    "bluetooth",
    "bootloader",
    "caddy-reverse-proxies",
    "cloud-backup",
    "core",
    "csConfig",
    "desktop",
    "desktop-programs",
    "dev",
    "display-manager",
    "dunst",
    "email",
    "firefox",
    "flameshot",
    "foot",
    "gammastep",
    "gtk",
    "home-manager",
    "host_cuda",
    "host_feroe",
    "host_framework",
    "host_inria",
    "host_jrs",
    "host_tank",
    "host_vps",
    "kanshi",
    "keyring",
    "nh",
    "nix",
    "nix-index-database",
    "nvidia",
    "obs",
    "printing",
    "remote-builders",
    "rofi",
    "security",
    "server",
    "sound",
    "ssh-client",
    "ssh-server",
    "streaming",
    "substituters",
    "sway",
    "swaylock",
    "thunar",
    "udiskie",
    "users",
    "waybar",
    "wayland",
    "wireguard-client",
    "xdg",
    "zathura"
  ],
  "henrysipp-nix-setup": [
    "albion",
    "allowedUnfreePackages",
    "base",
    "containers",
    "darwin-desktop",
    "desktop",
    "dev",
    "fonts",
    "games",
    "gawain",
    "gnome",
    "guren",
    "henry",
    "nixvim",
    "packages",
    "plasma",
    "root",
    "shell",
    "sound",
    "system",
    "work"
  ],
  "icyd-nixvim": [
    "additional-plugins",
    "auto-session",
    "colorizer",
    "compiler",
    "completion",
    "core",
    "debug",
    "dial",
    "firenvim",
    "full",
    "git",
    "harpoon",
    "lsp",
    "markdown",
    "maximize",
    "navigator",
    "neorg",
    "oil",
    "optimizations",
    "overseer",
    "project-nvim",
    "telescope",
    "tests",
    "todo-comments",
    "treesitter",
    "trouble",
    "ufo",
    "ui",
    "utils",
    "yanky"
  ],
  "quasigod-nixconfig": [
    "cachix",
    "default",
    "gaming",
    "hacking",
    "laptop",
    "localai",
    "plymouth",
    "remote",
    "replays",
    "secure-boot",
    "server",
    "ssh",
    "syncthing-client",
    "syncthing-server",
    "virtualisation",
    "waydroid",
    "workstation",
    "zfs",
    "zsa-kb"
  ],
  "vic-vix": [
    "aarch64-darwin",
    "aarch64-linux",
    "all-firmware",
    "bootable",
    "darwin",
    "gnome-desktop",
    "kde-desktop",
    "kvm-amd",
    "kvm-intel",
    "macos-keys",
    "nix-index",
    "nix-registry",
    "nix-settings",
    "nixos",
    "nvidia",
    "rdesk",
    "unfree",
    "vic",
    "vscode-server",
    "wl-broadcom",
    "wsl",
    "x86_64-darwin",
    "x86_64-linux",
    "xfce-desktop"
  ]
}
</file>

<file path="dev/community/_pipeline.nix">
# A pipe line for configuring an import-tree with
# dendrix community conventions, filters and API.
# > See import-tree API for reference.
#
# this is used by options.nix when creating an
# import-tree for each community.<repo>.trees.<name>
#
# By default, paths containing `private` are filtered out
# from all community import-trees.
#
# There's also an import-tree method for people who
# choose to only share files having a `community` path.
#
# Flags are a simple way of marking files by the
# capabilities they use, and still independent
# of their location in an import-tree.
#
# Flags can be present anywhere in a path and
# they consist of a plus-sign and a name: `+lsp`.
# Negation `-lsp` means: filter out files with `+lsp`.
#
# The meaning of each flag is free and conventions might
# arise as people find them useful across repositories.
#
# NOTE: flags are automatically discovered
# from files on each community import-tree.
# and documented on Dendrix README automatically.
#
lib:
let
  pipe-line = [
    skip-private # by default ignore private paths.
    (i: i.withLib lib)
    (i: i.addAPI api)
  ];

  api = {
    inherit
      community
      flagged
      availableFlags
      ;
  };

  # anything having private on its path is ignored.
  skip-private = self: self.filterNot (lib.hasInfix "private");

  # for those only sharing things with community path.
  community = self: self.filter (lib.hasInfix "community");

  # discover +flag from files on a tree
  availableFlags =
    self:
    lib.pipe self [
      (i: i.withLib lib)
      (i: i.leafs.result)
      (builtins.map (builtins.split "\\+([[:alpha:]-]+)"))
      (builtins.map (builtins.filter builtins.isList))
      (lib.flatten)
      (lib.unique)
    ];

  # selects files flagged with flags.
  # `flags` can be an string of "+flag -flag" or a list of them.
  #
  # negative `-flag` is interpreted as exclude `+flag` files.
  #
  # strings not prefixed with +/- are interpreted as (filter hasInfix).
  flagged =
    self: flags:
    let
      flags-pipe = lib.pipe flags [
        (lib.flatten)
        (lib.map (lib.splitString " "))
        (lib.flatten)
        (lib.filter isNonEmpty)
        (lib.map (
          flag:
          if isNegative flag then
            self: self.filterNot (lib.hasInfix ("+" + (lib.removePrefix "-" flag)))
          else
            self: self.filter (lib.hasInfix flag)
        ))
      ];
      isNonEmpty = s: builtins.stringLength s > 0;
      isNegative = lib.hasPrefix "-";
    in
    lib.pipe self flags-pipe;

in
pipe-line
</file>

<file path="dev/community/options.nix">
{
  inputs,
  lib,
  config,
  ...
}:
let
  inherit (lib) mkOption types;

  dendrix = config.dendrix;

  sources = import ./../npins;

  discoverAspects = import ./../lib/discover.nix { inherit lib inputs; };
  defaultPipeline = import ./_pipeline.nix lib;
  createImportTree = paths: lib.pipe (inputs.import-tree.addPath paths) defaultPipeline;

  addTreesAPI =
    trees: self:
    self.addAPI (
      lib.mapAttrs (
        _: t: _self:
        t.import-tree
      ) trees
    );

  cached-trees = lib.pipe ./discovered/trees.json [
    builtins.readFile
    builtins.fromJSON
    (lib.mapAttrs (
      repo-name: tree-names:
      lib.pipe tree-names [
        (lib.map (
          tree-name:
          let
            cached-aspects = lib.pipe ./discovered/${repo-name}/${tree-name}.json [
              builtins.readFile
              builtins.fromJSON
            ];
            all-files = lib.mapAttrsToList (_: lib.attrValues) cached-aspects;
          in
          {
            ${tree-name} = {
              paths = all-files;
              aspects = cached-aspects;
            };
          }
        ))
        lib.mergeAttrsList
      ]
    ))
  ];

  communityOption = mkOption {
    description = "Dendritic Community module trees.";
    default = { };
    type = types.lazyAttrsOf (
      types.submodule (
        {
          name,
          config,
          ...
        }:
        let
          repo-name = name;
          repo-cfg = config;

          trees = if dendrix.discover-community-aspects then discovered-trees else cached-trees.${repo-name};

          discovered-trees = lib.pipe repo-cfg.paths [
            createImportTree
            (discoverAspects repo-cfg.source)
            (lib.mapAttrs (
              aspect: classes: {
                paths = lib.attrValues classes;
                aspects = {
                  ${aspect} = classes;
                };
              }
            ))
          ];

          community-dir =
            if builtins.pathExists "${repo-cfg.source}/modules/community" then
              "${repo-cfg.source}/modules/community"
            else
              "${repo-cfg.source}/modules";
        in
        {
          config = {
            inherit trees;
          };
          options = {
            trees = mkOption {
              description = "import-tree's of shared modules";
              default = { };
              type = types.lazyAttrsOf (
                types.submodule (
                  { name, config, ... }:
                  {
                    options = {
                      pipeline = mkOption {
                        description = "An pipeline to configure ${name} import-tree";
                        type = types.listOf (types.functionTo types.unspecified);
                        default = [ ];
                      };
                      aspects = mkOption {
                        description = "aspects provided on this tree";
                        default = { };
                        internal = true;
                        type = types.attrsOf (types.attrsOf (types.listOf types.str));
                        apply =
                          attrs:
                          if attrs == { } && dendrix.discover-community-aspects then
                            discoverAspects config.source config.import-tree
                          else
                            attrs;
                      };
                      paths = mkOption {
                        description = "import-tree arguments";
                        default = [ ];
                        type = types.listOf types.unspecified;
                      };
                      import-tree = mkOption {
                        description = "${name} import-tree";
                        type = types.unspecified;
                        readOnly = true;
                        internal = true;
                        default = lib.pipe config.paths ([ createImportTree ] ++ config.pipeline);
                      };
                    };
                  }
                )
              );
            };
            source = mkOption {
              type = types.unspecified;
              description = "Repository source for ${name}";
              default = sources.${name};
              readOnly = true;
              internal = true;
            };
            pipeline = mkOption {
              description = "An pipeline to configure top-level import-tree";
              type = types.listOf (types.functionTo types.unspecified);
              default = [ ];
            };
            paths = mkOption {
              type = types.listOf types.unspecified;
              description = "any inport-tree argument representing shared tree";
              default = [ community-dir ];
            };
            import-tree = mkOption {
              description = "top level import-tree";
              type = types.unspecified;
              readOnly = true;
              default = lib.pipe config.paths (
                [ createImportTree ] ++ config.pipeline ++ [ (addTreesAPI config.trees) ]
              );
            };
          };
        }
      )
    );
  };
in
{
  options.dendrix = {
    # for internal use only.
    discover-community-aspects = lib.mkEnableOption "should we discover aspects from flakes.";
    community = communityOption;
  };
  config.dendrix.community = builtins.mapAttrs (_: _: { }) sources;
}
</file>

<file path="dev/community/vic-vix.nix">
{

  dendrix.community.vic-vix =
    { config, ... }:
    {
      # custom directory where to share modules from.
      paths = [ "${config.source}/modules/community" ];

      trees = {
        # a custom import-tree outside of shared community modules.
        vic.paths = [ "${config.source}/modules/vic" ];
      };
    };

}
</file>

<file path="dev/elm/src/Data.elm">
module Data exposing (..)


type alias Repository =
    { name : String
    , url : String
    , trees : List Tree
    }


type alias SelectedRepos =
    { anySelected : Bool, repos : List Repository }


type alias Tree =
    { name : String
    , aspects : List AspectInfo
    }


type alias AspectInfo =
    { aspect : String
    , class : String
    , files : List String
    }
</file>

<file path="dev/elm/src/Deco.elm">
module Deco exposing (..)

import Data exposing (..)
import Json.Decode as D
import Json.Encode as E


repositoriesDecoder : D.Decoder (List Repository)
repositoriesDecoder =
    D.field "repositories" (D.list repositoryDecoder)


selectedReposDecoder : D.Decoder SelectedRepos
selectedReposDecoder =
    D.map2 SelectedRepos (D.field "anySelected" D.bool) (D.field "repos" (D.list repositoryDecoder))


selectedReposEncoder : SelectedRepos -> E.Value
selectedReposEncoder sel =
    E.object [ ( "anySelected", E.bool sel.anySelected ), ( "repos", E.list repositoryEncoder sel.repos ) ]


repositoryDecoder : D.Decoder Repository
repositoryDecoder =
    D.map3 Repository
        (D.field "name" D.string)
        (D.field "url" D.string)
        (D.field "trees" (D.list treeDecoder))


treeDecoder : D.Decoder Tree
treeDecoder =
    D.map2 Tree
        (D.field "name" D.string)
        (D.field "aspects" (D.list aspectInfoDecoder))


aspectInfoDecoder : D.Decoder AspectInfo
aspectInfoDecoder =
    D.map3 AspectInfo
        (D.field "aspect" D.string)
        (D.field "class" D.string)
        (D.field "files" (D.list D.string))


repositoryEncoder : Repository -> E.Value
repositoryEncoder repo =
    E.object
        [ ( "name", E.string repo.name )
        , ( "url", E.string repo.url )
        , ( "trees", E.list treeEncoder repo.trees )
        ]


treeEncoder : Tree -> E.Value
treeEncoder tree =
    E.object
        [ ( "name", E.string tree.name )
        , ( "aspects", E.list aspectInfoEncoder tree.aspects )
        ]


aspectInfoEncoder : AspectInfo -> E.Value
aspectInfoEncoder info =
    E.object
        [ ( "aspect", E.string info.aspect )
        , ( "class", E.string info.class )
        , ( "files", E.list E.string info.files )
        ]
</file>

<file path="dev/elm/src/Ports.elm">
port module Ports exposing (..)

import Json.Decode as D
import Json.Encode as E


port cmdOut : E.Value -> Cmd msg


port cmdIn : (D.Value -> msg) -> Sub msg


cmdEncode : String -> E.Value -> E.Value
cmdEncode name val =
    E.object [ ( "name", E.string name ), ( "value", val ) ]


repoUpdate : String
repoUpdate =
    "REPO_UPDATE"


clearAll : String
clearAll =
    "CLEAR_ALL"


highlight : String
highlight =
    "HIGHLIGHT"


isCmd : String -> D.Value -> Bool
isCmd name json =
    D.decodeValue (D.field "name" D.string) json == Ok name


cmdVal : D.Decoder a -> D.Value -> Result D.Error a
cmdVal dec json =
    D.decodeValue (D.field "value" dec) json
</file>

<file path="dev/elm/src/Results.elm">
module Results exposing (main)

import Browser
import Data
import Deco
import Dict exposing (Dict)
import Html exposing (Html, a, button, code, div, p, pre, text)
import Html.Attributes exposing (class, href, id)
import Html.Events exposing (onClick)
import Json.Decode as D
import Json.Encode as E
import List.Extra
import Ports
import Tuple


main : Program () Model Msg
main =
    Browser.element
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }


type alias Model =
    Data.SelectedRepos


init : () -> ( Model, Cmd Msg )
init () =
    ( { anySelected = False, repos = [] }, Cmd.none )


type Msg
    = UpdateResults Model
    | ClearFilters
    | Noop


update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    case msg of
        Noop ->
            ( model, Cmd.none )

        UpdateResults repos ->
            ( repos, sendHighlight )

        ClearFilters ->
            ( model, sendClearAll )


sendClearAll : Cmd Msg
sendClearAll =
    Ports.cmdOut (Ports.cmdEncode Ports.clearAll E.null)


sendHighlight : Cmd Msg
sendHighlight =
    Ports.cmdOut (Ports.cmdEncode Ports.highlight E.null)


view : Model -> Html Msg
view model =
    div []
        (if model.anySelected then
            viewSelectedRepos model

         else
            []
        )


viewSelectedRepos : Model -> List (Html Msg)
viewSelectedRepos model =
    let
        totalFiles =
            model.repos
                |> List.concatMap .trees
                |> List.concatMap .aspects
                |> List.concatMap .files
                |> List.length

        aspectClassMap =
            model.repos
                |> List.concatMap .trees
                |> List.concatMap .aspects
                |> List.map (\a -> ( a.aspect, a.class ))
                |> List.Extra.unique
                |> List.foldl
                    (\( aspect, class_ ) dict ->
                        Dict.update
                            aspect
                            (\maybeClasses ->
                                Just (class_ :: Maybe.withDefault [] maybeClasses)
                            )
                            dict
                    )
                    Dict.empty

        aspectCount =
            Dict.keys aspectClassMap |> List.length |> String.fromInt

        classesCount =
            Dict.values aspectClassMap |> List.concatMap identity |> List.Extra.unique |> List.length |> String.fromInt

        firstAspect =
            Dict.keys aspectClassMap |> List.head |> Maybe.withDefault "virtualisation"

        firstClass =
            Dict.get firstAspect aspectClassMap |> Maybe.andThen List.head |> Maybe.withDefault "nixos"
    in
    [ div [] [ button [ onClick ClearFilters ] [ text "Reset filters" ] ]
    , p []
        [ text (String.fromInt totalFiles ++ " nix files\n")
        , text ("contaning the following " ++ aspectCount ++ " aspects across " ++ classesCount ++ " configuration classes:\n")
        ]
    , p [] (viewAspectSummary aspectClassMap)
    , p []
        [ text "Add the following to your "
        , code [] [ text "flake.nix" ]
        , text " to include these configuration modules. See also: "
        , a [ href "Getting-Started.html" ] [ text "Usage for Dendrix Trees/Layers" ]
        ]
    , viewUsageCode model.repos
    , p []
        [ text "On a flake module of yours, extend any of these aspects with your custom configs, like:"
        , div []
            [ pre []
                [ code [ class "language-nix" ]
                    [ text ("""# modules/${aspect}.nix
{
  # eg flake.modules.""" ++ firstClass ++ "." ++ firstAspect ++ """ = { ... };
  flake.modules.${class}.${aspect} = { <your-configs> };
}
                    """)
                    ]
                ]
            ]
        ]
    ]


viewAspectSummary : Dict String (List String) -> List (Html msg)
viewAspectSummary aspectDict =
    aspectDict
        |> Dict.toList
        |> List.sortBy Tuple.first
        |> List.map
            (\( aspect, classes ) ->
                let
                    interspersed =
                        String.join "/" (List.sort classes)
                in
                div [] [ code [] [ text (aspect ++ ": " ++ interspersed) ] ]
            )


viewUsageCode : List Data.Repository -> Html msg
viewUsageCode repos =
    pre [ id "dendrix-usage" ]
        [ code [ class "language-nix" ]
            [ let
                trees =
                    List.concatMap (\repo -> List.map (\tree -> ( repo.name, tree.name )) repo.trees) repos

                repoImports =
                    List.map
                        (\( repoName, treeName ) ->
                            String.concat [ "    inputs.dendrix.", repoName, ".", treeName, "\n" ]
                        )
                        trees

                codes =
                    [ """# modules/dendrix-imports.nix -- on any module of yours.
{ inputs, ... }:
{
  imports = ["""
                    , "\n"
                    ]
                        ++ repoImports
                        ++ [ "  ];\n}", "\n" ]
              in
              text (String.concat codes)
            ]
        ]


subscriptions : Model -> Sub Msg
subscriptions _ =
    Ports.cmdIn
        (\cmd ->
            if Ports.isCmd Ports.repoUpdate cmd then
                toMsg <| Ports.cmdVal Deco.selectedReposDecoder cmd

            else
                Noop
        )


toMsg : Result D.Error Model -> Msg
toMsg result =
    case result of
        Ok repos ->
            UpdateResults repos

        Err _ ->
            UpdateResults { anySelected = False, repos = [] }
</file>

<file path="dev/elm/src/Search.elm">
module Search exposing (main)

import Browser
import Data
import Deco
import Html exposing (Html, a, div, h4, input, label, small, span, text)
import Html.Attributes exposing (checked, disabled, href, style, type_)
import Html.Events exposing (onClick)
import Json.Decode as D
import List.Extra
import Ports


main : Program D.Value Model Msg
main =
    Browser.element
        { init = init
        , view = view
        , update = update
        , subscriptions = subscriptions
        }


type alias Model =
    { repositories : List Data.Repository
    , allAspects : List String
    , allClasses : List String
    , selectedAspects : List String
    , selectedClasses : List String
    , selectedRepos : List String
    , selectedTrees : List ( String, String )
    , collapsedRepos : List String
    }


initialModel : List Data.Repository -> Model
initialModel repos =
    let
        allAspects =
            repos
                |> List.concatMap (.trees >> List.concatMap .aspects)
                |> List.map .aspect
                |> List.sort
                |> List.Extra.unique

        allClasses =
            repos
                |> List.concatMap (.trees >> List.concatMap .aspects)
                |> List.map .class
                |> List.sort
                |> List.Extra.unique
    in
    { repositories = repos
    , allAspects = allAspects
    , allClasses = allClasses
    , selectedAspects = []
    , selectedClasses = []
    , selectedRepos = []
    , selectedTrees = []
    , collapsedRepos = List.map .name repos
    }


init : D.Value -> ( Model, Cmd Msg )
init flags =
    let
        decodedRepos =
            D.decodeValue Deco.repositoriesDecoder flags
    in
    case decodedRepos of
        Ok repos ->
            ( initialModel repos, sendReposUpdate { anySelected = False, repos = [] } )

        Err _ ->
            ( initialModel [], Cmd.none )


sendReposUpdate : Data.SelectedRepos -> Cmd msg
sendReposUpdate repos =
    Ports.cmdOut <| Ports.cmdEncode Ports.repoUpdate (Deco.selectedReposEncoder repos)


type Msg
    = ToggleRepo String
    | ToggleAspect String
    | ToggleClass String
    | ToggleTree String String
    | ToggleCollapse String
    | Clear
    | Noop


update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    let
        toggle item list =
            if List.member item list then
                List.filter ((/=) item) list

            else
                item :: list

        newModel =
            case msg of
                Noop ->
                    model

                Clear ->
                    { model
                        | selectedRepos = []
                        , selectedAspects = []
                        , selectedClasses = []
                        , selectedTrees = []
                        , collapsedRepos = List.map .name model.repositories
                    }

                ToggleRepo repoName ->
                    { model | selectedRepos = toggle repoName model.selectedRepos }

                ToggleAspect aspectName ->
                    { model | selectedAspects = toggle aspectName model.selectedAspects }

                ToggleClass className ->
                    { model | selectedClasses = toggle className model.selectedClasses }

                ToggleTree repoName treeName ->
                    { model | selectedTrees = toggle ( repoName, treeName ) model.selectedTrees }

                ToggleCollapse repoName ->
                    { model | collapsedRepos = toggle repoName model.collapsedRepos }

        finalFilteredRepos =
            newModel.repositories
                |> filterByRepos newModel.selectedRepos
                |> filterByTrees newModel.selectedTrees
                |> filterByAspects newModel.selectedAspects
                |> filterByClasses newModel.selectedClasses

        selectedCount =
            List.length newModel.selectedRepos
                + List.length newModel.selectedClasses
                + List.length newModel.selectedAspects
                + List.length newModel.selectedTrees

        sel =
            Data.SelectedRepos (selectedCount > 0) finalFilteredRepos
    in
    ( newModel, sendReposUpdate sel )


view : Model -> Html Msg
view model =
    let
        reposFilteredForAvailability =
            model.repositories
                |> filterByAspects model.selectedAspects
                |> filterByClasses model.selectedClasses
                |> filterByTrees model.selectedTrees

        availableRepos =
            reposFilteredForAvailability
                |> List.map .name

        aspectsFilteredForAvailability =
            model.repositories
                |> filterByRepos model.selectedRepos
                |> filterByClasses model.selectedClasses
                |> filterByTrees model.selectedTrees

        availableAspects =
            aspectsFilteredForAvailability
                |> List.concatMap (.trees >> List.concatMap .aspects)
                |> List.map .aspect
                |> List.sort
                |> List.Extra.unique

        classesFilteredForAvailability =
            model.repositories
                |> filterByRepos model.selectedRepos
                |> filterByAspects model.selectedAspects
                |> filterByTrees model.selectedTrees

        availableClasses =
            classesFilteredForAvailability
                |> List.concatMap (.trees >> List.concatMap .aspects)
                |> List.map .class
                |> List.sort
                |> List.Extra.unique

        count list =
            list |> List.length |> String.fromInt
    in
    div []
        [ h4 [] [ text ("Dendritic Repositories (" ++ count availableRepos ++ ")") ]
        , viewRepoAndTreeCheckboxes model availableRepos
        , h4 [] [ text ("Nix Config Classes (" ++ count availableClasses ++ ")") ]
        , viewCheckboxList model.allClasses availableClasses model.selectedClasses ToggleClass
        , h4 [] [ text ("Dendritic Aspects (" ++ count availableAspects ++ ")") ]
        , viewCheckboxList model.allAspects availableAspects model.selectedAspects ToggleAspect
        ]


viewRepoAndTreeCheckboxes : Model -> List String -> Html Msg
viewRepoAndTreeCheckboxes model availableRepos =
    div []
        (List.map
            (\repo ->
                let
                    isRepoSelected =
                        List.member repo.name model.selectedRepos

                    isRepoAvailable =
                        List.member repo.name availableRepos

                    isRepoEnabled =
                        isRepoSelected || isRepoAvailable

                    availableTrees =
                        repo.trees
                            |> filterTreesByAspects model.selectedAspects
                            |> filterTreesByClasses model.selectedClasses

                    treeCount =
                        List.length availableTrees

                    isCollapsed =
                        List.member repo.name model.collapsedRepos

                    replaceArchivePath =
                        if String.contains "codeberg.org" repo.url then
                            String.replace "/archive/" "/src/commit/"

                        else
                            String.replace "/archive/" "/tree/"

                    repoHome =
                        repo.url
                            |> String.replace ".tar.gz" ""
                            |> replaceArchivePath
                in
                div [ style "margin-bottom" "1em" ]
                    [ div [ style "display" "flex", style "align-items" "center" ]
                        [ label
                            [ style "opacity"
                                (if isRepoEnabled then
                                    "1.0"

                                 else
                                    "0.5"
                                )
                            ]
                            [ input
                                [ type_ "checkbox"
                                , checked isRepoSelected
                                , onClick
                                    (if isRepoEnabled then
                                        ToggleRepo repo.name

                                     else
                                        Noop
                                    )
                                , disabled (not isRepoEnabled)
                                ]
                                []
                            , text repo.name
                            ]
                        , div [ style "cursor" "pointer", style "margin-left" "auto", style "display" "flex", style "align-items" "center" ]
                            [ small [ style "margin-right" "5px" ] [ a [ href repoHome ] [ text "(home)" ] ]
                            , span [ onClick (ToggleCollapse repo.name), style "display" "block ruby" ]
                                [ text
                                    (if isCollapsed then
                                        "►"

                                     else
                                        "▼"
                                    )
                                , small [] [ text ("(" ++ String.fromInt treeCount ++ " trees)") ]
                                ]
                            ]
                        ]
                    , if isCollapsed then
                        div [] []

                      else
                        div [ style "padding-left" "2em" ]
                            (List.map
                                (\tree ->
                                    let
                                        isTreeSelected =
                                            List.member ( repo.name, tree.name ) model.selectedTrees

                                        isTreeAvailable =
                                            List.member tree.name (List.map .name availableTrees)

                                        isTreeEnabled =
                                            isTreeSelected || isTreeAvailable

                                        files =
                                            tree.aspects |> List.concatMap (\a -> a.files)

                                        filesUrl =
                                            "https://github.com/vic/dendrix/blob/main/dev/community/discovered/" ++ repo.name ++ "/" ++ tree.name ++ ".json"
                                    in
                                    div [ style "margin-left" "auto", style "display" "flex" ]
                                        [ label
                                            [ style "opacity"
                                                (if isTreeEnabled then
                                                    "1.0"

                                                 else
                                                    "0.5"
                                                )
                                            ]
                                            [ input
                                                [ type_ "checkbox"
                                                , checked isTreeSelected
                                                , onClick
                                                    (if isTreeEnabled then
                                                        ToggleTree repo.name tree.name

                                                     else
                                                        Noop
                                                    )
                                                , disabled (not isTreeEnabled)
                                                ]
                                                []
                                            , text tree.name
                                            ]
                                        , div [ style "margin-left" "auto", style "display" "flex", style "align-items" "center" ]
                                            [ a [ href filesUrl ] [ text ((files |> List.length |> String.fromInt) ++ " files") ]
                                            ]
                                        ]
                                )
                                repo.trees
                            )
                    ]
            )
            model.repositories
        )


viewCheckboxList : List String -> List String -> List String -> (String -> Msg) -> Html Msg
viewCheckboxList allItems availableItems selectedItems msgConstructor =
    div []
        (List.map
            (\item ->
                let
                    isSelected =
                        List.member item selectedItems

                    isAvailable =
                        List.member item availableItems

                    isEnabled =
                        isSelected || isAvailable
                in
                div []
                    [ label
                        [ style "opacity"
                            (if isEnabled then
                                "1.0"

                             else
                                "0.5"
                            )
                        ]
                        [ input
                            [ type_ "checkbox"
                            , checked isSelected
                            , onClick
                                (if isEnabled then
                                    msgConstructor item

                                 else
                                    Noop
                                )
                            , disabled (not isEnabled)
                            ]
                            []
                        , text item
                        ]
                    ]
            )
            allItems
        )



-- FILTERING HELPERS


filterByTrees : List ( String, String ) -> List Data.Repository -> List Data.Repository
filterByTrees selectedTrees repos =
    if List.isEmpty selectedTrees then
        repos

    else
        repos
            |> List.map
                (\repo ->
                    let
                        relevantTrees =
                            selectedTrees
                                |> List.filter (\( r, _ ) -> r == repo.name)
                                |> List.map Tuple.second
                    in
                    if List.isEmpty relevantTrees then
                        { repo | trees = [] }

                    else
                        { repo
                            | trees =
                                repo.trees
                                    |> List.filter (\tree -> List.member tree.name relevantTrees)
                        }
                )
            |> List.filter (\repo -> not (List.isEmpty repo.trees))


filterByRepos : List String -> List Data.Repository -> List Data.Repository
filterByRepos selectedRepos repos =
    if List.isEmpty selectedRepos then
        repos

    else
        repos
            |> List.filter (\repo -> List.member repo.name selectedRepos)


filterByAspects : List String -> List Data.Repository -> List Data.Repository
filterByAspects selectedAspects repos =
    if List.isEmpty selectedAspects then
        repos

    else
        repos
            |> List.map (\repo -> { repo | trees = repo.trees |> filterTreesByAspects selectedAspects })
            |> List.filter (\repo -> not (List.isEmpty repo.trees))


filterTreesByAspects : List String -> List Data.Tree -> List Data.Tree
filterTreesByAspects selectedAspects trees =
    if List.isEmpty selectedAspects then
        trees

    else
        trees
            |> List.map
                (\tree ->
                    { tree | aspects = tree.aspects |> List.filter (\aspectInfo -> List.member aspectInfo.aspect selectedAspects) }
                )
            |> List.filter (\tree -> not (List.isEmpty tree.aspects))


filterByClasses : List String -> List Data.Repository -> List Data.Repository
filterByClasses selectedClasses repos =
    if List.isEmpty selectedClasses then
        repos

    else
        repos
            |> List.map (\repo -> { repo | trees = repo.trees |> filterTreesByClasses selectedClasses })
            |> List.filter (\repo -> not (List.isEmpty repo.trees))


filterTreesByClasses : List String -> List Data.Tree -> List Data.Tree
filterTreesByClasses selectedClasses trees =
    if List.isEmpty selectedClasses then
        trees

    else
        trees
            |> List.map
                (\tree ->
                    { tree | aspects = tree.aspects |> List.filter (\aspectInfo -> List.member aspectInfo.class selectedClasses) }
                )
            |> List.filter (\tree -> not (List.isEmpty tree.aspects))


subscriptions : Model -> Sub Msg
subscriptions _ =
    Ports.cmdIn
        (\cmd ->
            if Ports.isCmd Ports.clearAll cmd then
                Clear

            else
                Noop
        )
</file>

<file path="dev/elm/tests/DecoTests.elm">
module DecoTests exposing (..)

import Data exposing (..)
import Deco
import Expect
import Json.Decode as D
import Test exposing (..)


exampleRepos : String
exampleRepos =
    """
{
  "repositories": [
    {
      "name": "vic-vix",
      "url": "http://example.org",
      "trees": [
         {
            "name": "default",
            "aspects": [
               { "aspect": "game", "class": "darwin", "files": ["file1", "file2"] },
               { "aspect": "game", "class": "nixos", "files": ["file3"] },
               { "aspect": "dev", "class": "nixos", "files": ["file3nixos"] },
               { "aspect": "dev", "class": "darwin", "files": ["file3darwin"] }
            ]
         }
      ]
    },
    {
        "name": "drupol-infra",
        "url": "http://example.org",
        "trees": [
            {
                "name": "default",
                "aspects": [
                    { "aspect": "dev", "class": "nixos", "files": ["a.nix"]},
                    { "aspect": "ai", "class": "nixos", "files": ["b.nix"]}
                ]
            }
        ]
    }
  ]
}
"""


suite : Test
suite =
    describe "Deco"
        [ describe "Repository"
            [ test "round-trips" <|
                \() ->
                    let
                        original : Result D.Error (List Repository)
                        original =
                            D.decodeString Deco.repositoriesDecoder exampleRepos

                        selected : Result D.Error SelectedRepos
                        selected =
                            Result.map (SelectedRepos False) original

                        encoded =
                            Result.map Deco.selectedReposEncoder selected

                        decoded =
                            Result.map (D.decodeValue Deco.selectedReposDecoder) encoded
                    in
                    Expect.equal (Ok (Ok { anySelected = False, repos = Result.withDefault [] original })) decoded
            ]
        ]
</file>

<file path="dev/elm/elm-srcs.nix">
{

  "elm-community/list-extra" = {
    sha256 = "02grd0p5hc2gvdy4n723d1s28pm1grn95jrzic6jcgb26qh16vcc";
    version = "8.7.0";
  };

  "elm-explorations/test" = {
    sha256 = "10k8ja78zrvkmjx96l99lmngk1d9ix0m1n2rai9x0nw47i4vx8gh";
    version = "2.2.0";
  };

  "elm/browser" = {
    sha256 = "0nagb9ajacxbbg985r4k9h0jadqpp0gp84nm94kcgbr5sf8i9x13";
    version = "1.0.2";
  };

  "elm/core" = {
    sha256 = "19w0iisdd66ywjayyga4kv2p1v9rxzqjaxhckp8ni6n8i0fb2dvf";
    version = "1.0.5";
  };

  "elm/html" = {
    sha256 = "1n3gpzmpqqdsldys4ipgyl1zacn0kbpc3g4v3hdpiyfjlgh8bf3k";
    version = "1.0.0";
  };

  "elm/http" = {
    sha256 = "008bs76mnp48b4dw8qwjj4fyvzbxvlrl4xpa2qh1gg2kfwyw56v1";
    version = "2.0.0";
  };

  "elm/json" = {
    sha256 = "0kjwrz195z84kwywaxhhlnpl3p251qlbm5iz6byd6jky2crmyqyh";
    version = "1.1.3";
  };

  "elm/bytes" = {
    sha256 = "02ywbf52akvxclpxwj9n04jydajcbsbcbsnjs53yjc5lwck3abwj";
    version = "1.0.8";
  };

  "elm/file" = {
    sha256 = "1rljcb41dl97myidyjih2yliyzddkr2m7n74x7gg46rcw4jl0ny8";
    version = "1.0.5";
  };

  "elm/random" = {
    sha256 = "138n2455wdjwa657w6sjq18wx2r0k60ibpc4frhbqr50sncxrfdl";
    version = "1.0.0";
  };

  "elm/time" = {
    sha256 = "0vch7i86vn0x8b850w1p69vplll1bnbkp8s383z7pinyg94cm2z1";
    version = "1.0.0";
  };

  "elm/url" = {
    sha256 = "0av8x5syid40sgpl5vd7pry2rq0q4pga28b4yykn9gd9v12rs3l4";
    version = "1.0.0";
  };

  "elm/virtual-dom" = {
    sha256 = "1brihc087l8bd30vjl5vg1yg4mgxrngh9854qsjs5lrp026h517l";
    version = "1.0.4";
  };
}
</file>

<file path="dev/elm/elm.json">
{
  "type": "application",
  "source-directories": ["src"],
  "elm-version": "0.19.1",
  "dependencies": {
    "direct": {
      "elm/browser": "1.0.2",
      "elm/core": "1.0.5",
      "elm/html": "1.0.0",
      "elm/http": "2.0.0",
      "elm/json": "1.1.3",
      "elm-community/list-extra": "8.7.0",
      "elm-explorations/test": "2.2.0"
    },
    "indirect": {
      "elm/bytes": "1.0.8",
      "elm/file": "1.0.5",
      "elm/random": "1.0.0",
      "elm/time": "1.0.0",
      "elm/url": "1.0.0",
      "elm/virtual-dom": "1.0.4"
    }
  },
  "test-dependencies": {
    "direct": {},
    "indirect": {}
  }
}
</file>

<file path="dev/layers/vix/modules/default.nix">
{ inputs, ... }:
let
  vix = inputs.dendrix.vic-vix;
in
{
  imports = [
    (vix.flagged "+mk-os")
  ];
}
</file>

<file path="dev/layers/vix/README.md">
# vix layer.
</file>

<file path="dev/layers/options.nix">
{ lib, inputs, ... }:
let

  layersOption = lib.mkOption {
    description = "layers flake-parts modules";
    default = discoverLayers;
    readOnly = true;
    type = lib.types.attrsOf lib.types.attrs;
  };

  discoverLayers = lib.pipe ./. [
    builtins.readDir
    (lib.mapAttrsToList (name: type: { inherit name type; }))
    (lib.filter (x: x.type == "directory"))
    (lib.map (x: x.name))
    (lib.map (name: {
      ${name} = {
        imports = [
          (inputs.import-tree ./${name}/modules)
        ];
      };
    }))
    lib.mergeAttrsList
  ];

in
{
  options.dendrix.layers = layersOption;
}
</file>

<file path="dev/lib/discover.nix">
# Discovers which aspects a given community import-tree defines.
#
# Returns an attrset of where flake.modules.<class>.<aspect> was defined
#
#    { <aspect> = { <class> = [ paths ]; }; }
#
# this function will use flake-compat to load the community flake's input
# (because we want to support Unify, and any other dendritic configuration lib)
# and evaluate only a portion of it (the files included by the import-tree),
# in order to inspect the names used for `flake.modules.<class>.<name>`.
#
# currently we evaluate with system fixed to x86_64-linux, since we are likely
# running in CI to generate aspects documentation and we wont evaluate anything
# besides extracting the aspect names.
#
# inputs here are dendrix inputs, required for flake-parts and flake-compat.
{ lib, inputs }:
let
  inherit (inputs) flake-compat flake-parts;
  system = "x86_64-linux";
  discoverAspects =
    src: import-tree:
    let
      flake = import flake-compat { inherit src system; };
      flake-inputs = flake.outputs.inputs;
      evres = flake-parts.lib.evalFlakeModule { inputs = flake-inputs; } {
        systems = [ system ];
        imports = [
          inputs.flake-parts.flakeModules.modules
          import-tree # a subtree of src.
        ];
      };
      definitions = lib.pipe evres [
        (x: x.options.flake.definitionsWithLocations)
        (lib.filter (x: x ? value.modules))
        (lib.map (
          { file, value, ... }:
          lib.mapAttrsToList (
            class: aspects: lib.map (aspect: { inherit aspect class file; }) (lib.attrNames aspects)
          ) value.modules
        ))
        (lib.flatten)
        (lib.foldl (
          acc:
          {
            aspect,
            class,
            file,
          }:
          acc
          // {
            ${aspect} = (acc.${aspect} or { }) // {
              ${class} = (acc.${aspect}.${class} or [ ]) ++ [ file ];
            };
          }
        ) { })
      ];
    in
    definitions;
in
discoverAspects
</file>

<file path="dev/lib/transpose.nix">
# Transposes an attribute set like:
#     {
#       nixos = {
#         foo = 1;
#         bar = 2;
#       };
#       darwin = {
#         bar = 3;
#         baz = 4;
#       };
#     }
#
# Into
#     {
#       foo = {
#         nixos = ...;
#       };
#       bar = {
#         nixos = ...;
#         darwin = ...;
#       };
#       baz = {
#         darwin = ...;
#       };
#     }
#
lib:
let
  transposeChild = child: parent: value: { inherit child parent value; };
  eachChildAttrs = parent: lib.mapAttrsToList (transposeChild parent);
  accTransposed =
    acc:
    {
      parent,
      child,
      value,
    }:
    acc
    // {
      ${parent} = (acc.${parent} or { }) // {
        ${child} = value;
      };
    };

  transpose =
    attrs:
    lib.pipe attrs [
      (lib.mapAttrsToList eachChildAttrs)
      (lib.flatten)
      (lib.foldl accTransposed { })
    ];
in
transpose
</file>

<file path="dev/modules/_gh-provision-nix.nix">
[
  { uses = "actions/checkout@v4"; }
  {
    uses = "wimpysworld/nothing-but-nix@main";
    "with" = {
      hatchet-protocol = "holster";
    };
  }
  { uses = "cachix/install-nix-action@v31"; }
  {
    uses = "cachix/cachix-action@v16";
    "with" = {
      name = "dendrix";
      authToken = "\${{secrets.CACHIX_AUTH_TOKEN}}";
    };
  }
]
</file>

<file path="dev/modules/checks.nix">
{ ... }:
{
  config.perSystem =
    { ... }:
    {
      devshells.default.commands = [
        {
          name = "check";
          help = "run flake checks";
          command = "nix flake check path:dev --override-input dendrix . \"$@\"";
        }
      ];

    };

}
</file>

<file path="dev/modules/devshell.nix">
{ inputs, ... }:
{
  imports = [ inputs.devshell.flakeModule ];
  perSystem =
    { pkgs, ... }:
    {
      devshells.default = {
        packages = [
          pkgs.direnv
        ];
        commands = [
          {
            name = "pins";
            help = "run npins inside dev";
            command = "(cd dev; ${pkgs.npins}/bin/npins \"$@\" )";
          }
          {
            name = "book";
            help = "serve dev/book";
            command = "elm-check && elm-build && ${pkgs.mdbook}/bin/mdbook serve dev/book";
          }
        ];
      };
    };
}
</file>

<file path="dev/modules/direnv.nix">
let
  path_ = ".envrc";
  text = ''
    use flake path:dev
  '';

  file = pkgs: {
    inherit path_;
    drv = pkgs.writeText "direnv-envrc" text;
  };
in
{
  perSystem =
    { pkgs, ... }:
    {
      files.files = [ (file pkgs) ];
      treefmt.settings.global.excludes = [ path_ ];
    };
}
</file>

<file path="dev/modules/discovered.nix">
{ config, lib, ... }:
{
  dendrix.discover-community-aspects = lib.mkDefault (builtins.getEnv "DISCOVER_ASPECTS" != "");

  perSystem =
    { pkgs, ... }:
    let
      discoveredPath = "dev/community/discovered";
      discoverCmd = {
        name = "discover";
        help = "generate files with discovery-community-aspects enabled.";
        command = "env DISCOVER_ASPECTS=true genfiles --impure \"$@\"";
      };

      imports = [
        layersNix
        elmFlag
        treesJson
      ] ++ generatedTrees;

      layersNix = lib.pipe config.dendrix.layers [
        (lib.attrNames)
        (lib.map (
          name: "# inputs.dendrix.${name} # see https://github.com/vic/dendrix/tree/main/dev/layers/${name}"
        ))
        (
          codes:
          let
            path_ = "templates/default/modules/layers.nix";
          in
          {
            treefmt.settings.formatter.deadnix.excludes = [ path_ ];
            treefmt.settings.formatter.nixf-diagnose.excludes = [ path_ ];
            files.files = [
              {
                inherit path_;
                drv = pkgs.writers.writeText "repos.js" ''
                  { inputs, ... }:
                  {
                    imports = [
                  ${lib.concatMapStrings (x: "    " + x + "\n") codes}
                    ];
                  }
                '';
              }
            ];
          }
        )
      ];

      generatedTrees = lib.pipe config.dendrix.community [
        (lib.mapAttrsToList (repo-name: repo: lib.mapAttrsToList (treeMod repo-name) repo.trees))
        (lib.flatten)
      ];

      treeMod =
        repo-name: tree-name: tree:
        let
          name = "${repo-name}/${tree-name}.json";
          path_ = "${discoveredPath}/${name}";
        in
        {
          files.files = [
            {
              inherit path_;
              drv = pkgs.writers.writeJSON name tree.aspects;
            }
          ];
        };

      treesJson =
        let
          path_ = "${discoveredPath}/trees.json";
          json = lib.pipe config.dendrix.community [
            (lib.mapAttrs (_: (repo: lib.attrNames repo.trees)))
          ];
        in
        {
          files.files = [
            {
              inherit path_;
              drv = pkgs.writers.writeJSON "trees.json" json;
            }
          ];
        };

      elmTree = tree-name: tree: {
        name = tree-name;
        aspects = lib.pipe tree.aspects [
          (lib.mapAttrsToList (
            aspect:
            lib.mapAttrsToList (
              class: files: {
                inherit aspect class files;
              }
            )
          ))
          (lib.flatten)
        ];
      };

      elmFlag = lib.pipe config.dendrix.community [
        (lib.mapAttrsToList (
          repo-name: repo: {
            name = repo-name;
            url = repo.source.url;
            trees = lib.mapAttrsToList elmTree repo.trees;
          }
        ))
        (repositories: { inherit repositories; })
        (
          json:
          let
            path_ = "dev/book/theme/dendrix_repos.js";
            uncompressed = pkgs.writers.writeText "repos.js" ";(function() { window.dendrix_repos = (${builtins.toJSON json}); })();";
            compressed = pkgs.stdenvNoCC.mkDerivation {
              name = "dendrix_repos.js";
              buildInputs = [ pkgs.uglify-js ];
              phases = [ "uglify" ];
              uglify = ''
                uglifyjs --compress --mangle --output $out ${uncompressed} 
              '';
            };
          in
          {
            files.files = [
              {
                inherit path_;
                drv = pkgs.writers.writeText "repos.js" (builtins.readFile compressed);
              }
            ];

            treefmt.settings.global.excludes = [ path_ ];
          }
        )
      ];

    in
    {
      inherit imports;
      devshells.default.commands = [ discoverCmd ];
    };

}
</file>

<file path="dev/modules/elm.nix">
let
  path_ = "dev/book/theme/elm.js";
  main = "src/Search.elm src/Results.elm";
in
{
  gitignore = "elm-stuff";
  perSystem =
    { pkgs, ... }:
    let
      elm_js = pkgs.stdenvNoCC.mkDerivation {
        name = "elm-builds";
        src = ./../elm;
        buildInputs = [
          pkgs.uglify-js
          pkgs.elmPackages.elm
          pkgs.elmPackages.elm-test
        ];
        postUnpack = (
          pkgs.elmPackages.fetchElmDeps {
            elmVersion = (builtins.fromJSON (builtins.readFile ./../elm/elm.json)).elm-version;
            elmPackages = import ./../elm/elm-srcs.nix;
            registryDat = ./../elm/registry.dat;
          }
        );
        buildPhase = ''
          mkdir -p $out
          elm make --optimize --output $out/elm.js ${main}
          uglifyjs $out/elm.js --compress 'pure_funcs=[F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9],pure_getters,keep_fargs=false,unsafe_comps,unsafe' | uglifyjs --mangle --output $out/elm.min.js
        '';
        doCheck = true;
        checkPhase = ''
          elm-test
        '';
      };
    in
    {
      treefmt.programs.elm-format.enable = true;
      treefmt.settings.global.excludes = [
        path_
        "dev/elm/elm-stuff/*"
        "dev/elm/registry.dat"
      ];
      checks.elm_tests = elm_js;
      files.files = [
        {
          inherit path_;
          drv = pkgs.writers.writeText "elm.js" (builtins.readFile "${elm_js}/elm.min.js");
        }
      ];
      devshells.default.packages = [
        pkgs.elmPackages.elm
        pkgs.elmPackages.elm-test
      ];
      devshells.default.commands = [
        {
          name = "elm-build";
          help = "compile elm debug mode";
          command = "cd dev/elm; elm make --debug --output ../../${path_} ${main} \"$@\" ";
        }
        {
          name = "elm-check";
          help = "run elm tests";
          command = "cd dev/elm; ${pkgs.elmPackages.elm-test}/bin/elm-test \"$@\"";
        }
        {
          name = "elm-registry";
          help = "use elm2nix to regen dependencies registry for nix";
          command = "cd dev/elm; ${pkgs.elm2nix}/bin/elm2nix convert > elm-srcs.nix && ${pkgs.elm2nix}/bin/elm2nix snapshot";
        }
      ];
    };
}
</file>

<file path="dev/modules/files.nix">
{ inputs, ... }:
{
  imports = [
    inputs.files.flakeModules.default
  ];

  perSystem =
    { config, ... }:
    {
      files.gitToplevel = inputs.dendrix;
      packages.genfiles = config.files.writer.drv;
      devshells.default.commands = [
        {
          name = "genfiles";
          help = "generate files from sources";
          command = "nix run path:dev#genfiles \"$@\"";
        }

        {
          name = "files";
          help = "fmt / genfiles / fmt";
          command = "fmt && genfiles \"$@\" && fmt";
        }
      ];
    };
}
</file>

<file path="dev/modules/fmt.nix">
{ inputs, ... }:
{
  imports = [ inputs.treefmt-nix.flakeModule ];
  perSystem =
    { self', ... }:
    {
      treefmt = {
        projectRoot = inputs.dendrix;
        programs = {
          nixfmt.enable = true;
          deadnix.enable = true;
          nixf-diagnose.enable = true;
          prettier.enable = true;
        };
        settings.on-unmatched = "fatal";
        settings.global.excludes = [
          "LICENSE"
        ];
      };

      packages.fmt = self'.formatter;

      devshells.default.commands = [
        {
          name = "fmt";
          help = "run code formatter";
          command = "nix run path:dev#fmt";
        }
      ];

    };

}
</file>

<file path="dev/modules/gh-flake-check.nix">
let
  name = "flake-check.yaml";
  path_ = ".github/workflows/${name}";
in
{
  perSystem =
    { pkgs, ... }:
    {
      files.files = [
        {
          inherit path_;
          drv = pkgs.writers.writeJSON name {
            name = "flake check";
            on = {
              push = { };
              workflow_call = { };
              workflow_dispatch = { };
            };
            concurrency = {
              group = "test";
              cancel-in-progress = true;
            };
            jobs.check = {
              environment.name = "check";
              environment.url = "\${{steps.check.outputs.page_url}}";
              runs-on = "ubuntu-latest";
              steps = (import ./_gh-provision-nix.nix) ++ [
                {
                  id = "check";
                  run = "nix flake --accept-flake-config check path:dev --override-input dendrix . --print-build-logs";
                }
              ];
            };
          };
        }
      ];
      treefmt.settings.global.excludes = [ path_ ];
    };
}
</file>

<file path="dev/modules/gh-pages.nix">
let
  name = "gh-pages.yaml";
  path_ = ".github/workflows/${name}";
in
{
  perSystem =
    { pkgs, ... }:
    {
      files.files = [
        {
          inherit path_;
          drv = pkgs.writers.writeJSON name {
            name = "gh-pages";
            on = {
              push.branches = [ "main" ];
              push.paths = [
                "dev/book/**"
                "dev/elm/**"
                "dev/npins/**"
              ];
              workflow_call = { };
              workflow_dispatch = { };
            };
            permissions = {
              contents = "read";
              pages = "write";
              id-token = "write";
            };
            concurrency = {
              group = "pages";
              cancel-in-progress = true;
            };
            jobs.deploy = {
              environment.name = "github-pages";
              environment.url = "\${{steps.deployment.outputs.page_url}}";
              runs-on = "ubuntu-latest";
              steps = (import ./_gh-provision-nix.nix) ++ [
                {
                  name = "flake check";
                  run = "nix flake --accept-flake-config check path:dev --override-input dendrix . --print-build-logs";
                }
                {
                  name = "gen book";
                  run = "nix run nixpkgs#mdbook -- build dev/book";
                }
                { uses = "actions/configure-pages@v5"; }
                {
                  uses = "actions/upload-pages-artifact@v3";
                  "with" = {
                    path = "./dev/book/book";
                  };
                }
                {
                  id = "deployment";
                  uses = "actions/deploy-pages@v4";
                }
              ];
            };
          };
        }
      ];
      treefmt.settings.global.excludes = [
        path_
        "dev/book/book/**"
        "dev/book/.gitignore"
        "dev/book/book.toml"
        "dev/book/theme/index.hbs"
        "dev/book/theme/catppuccin.css"
      ];
    };
}
</file>

<file path="dev/modules/gh-update-sources.nix">
let
  name = "update-sources.yaml";
  path_ = ".github/workflows/${name}";
in
{
  perSystem =
    { pkgs, ... }:
    {
      files.files = [
        {
          inherit path_;
          drv = pkgs.writers.writeJSON name {
            name = "update sources";
            on = {
              workflow_call = { };
              workflow_dispatch = { };
              repository_dispatch = { };
              schedule = [
                {
                  cron = "0 5 * * *";
                }
              ];
            };
            permissions = {
              contents = "write";
              pull-requests = "write";
              id-token = "write";
            };
            concurrency = {
              group = "update";
              cancel-in-progress = true;
            };
            jobs.update = {
              environment.name = "update-sources";
              environment.url = "\${{steps.update.outputs.pull-request-url}}";
              runs-on = "ubuntu-latest";
              steps = (import ./_gh-provision-nix.nix) ++ [
                {
                  run = ''
                    set -e
                    (cd dev; nix run nixpkgs#npins -- update)
                    rm -rf ./dev/community/discovered/*-*
                    export DISCOVER_ASPECTS=true
                    nix run --impure --accept-flake-config --override-input dendrix . --print-build-logs ./dev#genfiles
                    nix run --accept-flake-config --override-input dendrix . --print-build-logs ./dev#fmt
                    nix flake --accept-flake-config check path:dev --override-input dendrix . --print-build-logs
                  '';
                }
                {
                  id = "update";
                  uses = "peter-evans/create-pull-request@v7";
                  "with" = {
                    author = "Victor Borja <vborja@apache.org>";
                    commit-message = "Update sources";
                    branch = "update-sources";
                    branch-suffix = "timestamp";
                    title = "Update community sources.";
                    body = "Please review.";
                    assignees = "vic";
                  };
                }
              ];
            };
          };
        }
      ];
      treefmt.settings.global.excludes = [ path_ ];
    };
}
</file>

<file path="dev/modules/git-hooks.nix">
{ inputs, ... }:
{
  perSystem =
    { ... }:
    {
      devshells.default = {
        imports = [
          "${inputs.devshell}/extra/git/hooks.nix"
        ];

        git.hooks = {
          enable = true;
          pre-commit.text = "check";
        };
      };
    };
}
</file>

<file path="dev/modules/gitignore.nix">
{ lib, config, ... }:
{
  options.gitignore = lib.mkOption {
    type = lib.types.lines;
    apply =
      text:
      lib.pipe text [
        (lib.splitString "\n")
        lib.naturalSort
        (lib.concatStringsSep "\n")
      ];
  };
  config = {
    perSystem =
      { pkgs, ... }:
      {
        files.files = [
          {
            path_ = ".gitignore";
            drv = pkgs.writeText ".gitignore" config.gitignore;
          }
        ];
      };

    gitignore = ''
      result
      .vscode
      .direnv
    '';
  };
}
</file>

<file path="dev/modules/systems.nix">
{ inputs, ... }:
{
  systems = import inputs.systems;
}
</file>

<file path="dev/npins/default.nix">
/*
  This file is provided under the MIT licence:

  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
# Generated by npins. Do not modify; will be overwritten regularly
let
  data = builtins.fromJSON (builtins.readFile ./sources.json);
  version = data.version;

  # https://github.com/NixOS/nixpkgs/blob/0258808f5744ca980b9a1f24fe0b1e6f0fecee9c/lib/lists.nix#L295
  range =
    first: last: if first > last then [ ] else builtins.genList (n: first + n) (last - first + 1);

  # https://github.com/NixOS/nixpkgs/blob/0258808f5744ca980b9a1f24fe0b1e6f0fecee9c/lib/strings.nix#L257
  stringToCharacters = s: map (p: builtins.substring p 1 s) (range 0 (builtins.stringLength s - 1));

  # https://github.com/NixOS/nixpkgs/blob/0258808f5744ca980b9a1f24fe0b1e6f0fecee9c/lib/strings.nix#L269
  stringAsChars = f: s: concatStrings (map f (stringToCharacters s));
  concatStrings = builtins.concatStringsSep "";

  # If the environment variable NPINS_OVERRIDE_${name} is set, then use
  # the path directly as opposed to the fetched source.
  # (Taken from Niv for compatibility)
  mayOverride =
    name: path:
    let
      envVarName = "NPINS_OVERRIDE_${saneName}";
      saneName = stringAsChars (c: if (builtins.match "[a-zA-Z0-9]" c) == null then "_" else c) name;
      ersatz = builtins.getEnv envVarName;
    in
    if ersatz == "" then
      path
    else
      # this turns the string into an actual Nix path (for both absolute and
      # relative paths)
      builtins.trace "Overriding path of \"${name}\" with \"${ersatz}\" due to set \"${envVarName}\"" (
        if builtins.substring 0 1 ersatz == "/" then
          /. + ersatz
        else
          /. + builtins.getEnv "PWD" + "/${ersatz}"
      );

  mkSource =
    name: spec:
    assert spec ? type;
    let
      path =
        if spec.type == "Git" then
          mkGitSource spec
        else if spec.type == "GitRelease" then
          mkGitSource spec
        else if spec.type == "PyPi" then
          mkPyPiSource spec
        else if spec.type == "Channel" then
          mkChannelSource spec
        else if spec.type == "Tarball" then
          mkTarballSource spec
        else
          builtins.throw "Unknown source type ${spec.type}";
    in
    spec // { outPath = mayOverride name path; };

  mkGitSource =
    {
      repository,
      revision,
      url ? null,
      submodules,
      hash,
      ...
    }:
    assert repository ? type;
    # At the moment, either it is a plain git repository (which has an url), or it is a GitHub/GitLab repository
    # In the latter case, there we will always be an url to the tarball
    if url != null && !submodules then
      builtins.fetchTarball {
        inherit url;
        sha256 = hash; # FIXME: check nix version & use SRI hashes
      }
    else
      let
        url =
          if repository.type == "Git" then
            repository.url
          else if repository.type == "GitHub" then
            "https://github.com/${repository.owner}/${repository.repo}.git"
          else if repository.type == "GitLab" then
            "${repository.server}/${repository.repo_path}.git"
          else
            throw "Unrecognized repository type ${repository.type}";
        urlToName =
          url: rev:
          let
            matched = builtins.match "^.*/([^/]*)(\\.git)?$" url;

            short = builtins.substring 0 7 rev;

            appendShort = if (builtins.match "[a-f0-9]*" rev) != null then "-${short}" else "";
          in
          "${if matched == null then "source" else builtins.head matched}${appendShort}";
        name = urlToName url revision;
      in
      builtins.fetchGit {
        rev = revision;
        inherit name;
        # hash = hash;
        inherit url submodules;
      };

  mkPyPiSource =
    { url, hash, ... }:
    builtins.fetchurl {
      inherit url;
      sha256 = hash;
    };

  mkChannelSource =
    { url, hash, ... }:
    builtins.fetchTarball {
      inherit url;
      sha256 = hash;
    };

  mkTarballSource =
    {
      url,
      locked_url ? url,
      hash,
      ...
    }:
    builtins.fetchTarball {
      url = locked_url;
      sha256 = hash;
    };
in
if version == 5 then
  builtins.mapAttrs mkSource data.pins
else
  throw "Unsupported format version ${toString version} in sources.json. Try running `npins upgrade`"
</file>

<file path="dev/npins/sources.json">
{
  "pins": {
    "Maka-77x-nixconf7": {
      "type": "Git",
      "repository": {
        "type": "GitHub",
        "owner": "Maka-77x",
        "repo": "nixconf7"
      },
      "branch": "main",
      "submodules": false,
      "revision": "e3fd4cacd66d708911109b3a0f43f7b65d8be7bd",
      "url": "https://github.com/Maka-77x/nixconf7/archive/e3fd4cacd66d708911109b3a0f43f7b65d8be7bd.tar.gz",
      "hash": "0x58y3kg134ykgapb1nic41k78nl32qvrjx0lq9qcy2vmblmmcpa"
    },
    "dliberalesso-nix-config": {
      "type": "Git",
      "repository": {
        "type": "GitHub",
        "owner": "dliberalesso",
        "repo": "nix-config"
      },
      "branch": "main",
      "submodules": false,
      "revision": "e78eae677a5545aed7dfeea9167e2f1298d06d9b",
      "url": "https://github.com/dliberalesso/nix-config/archive/e78eae677a5545aed7dfeea9167e2f1298d06d9b.tar.gz",
      "hash": "0jz69j3f5ynlfjmxjvw3gi3ys02sgzjyfi67xawz844gx1clj07c"
    },
    "drupol-infra": {
      "type": "Git",
      "repository": {
        "type": "GitHub",
        "owner": "drupol",
        "repo": "infra"
      },
      "branch": "master",
      "submodules": false,
      "revision": "d168261d989d5b5814cb13eb9b9142078e202c5f",
      "url": "https://github.com/drupol/infra/archive/d168261d989d5b5814cb13eb9b9142078e202c5f.tar.gz",
      "hash": "150kxqlf47fl0r6z0fz9a2qgikh95rs2x9zf3yjamxmqdjx50gz1"
    },
    "gaetanlepage-nix-config": {
      "type": "Git",
      "repository": {
        "type": "GitHub",
        "owner": "gaetanlepage",
        "repo": "nix-config"
      },
      "branch": "master",
      "submodules": false,
      "revision": "c97af82e25d96d720d9871c4d31d1479a7d3667e",
      "url": "https://github.com/gaetanlepage/nix-config/archive/c97af82e25d96d720d9871c4d31d1479a7d3667e.tar.gz",
      "hash": "16385vs1rf9syc9m8fgyrhm1w3qlk77w7x9m61c7vsx92zy0923a"
    },
    "henrysipp-nix-setup": {
      "type": "Git",
      "repository": {
        "type": "GitHub",
        "owner": "henrysipp",
        "repo": "nix-setup"
      },
      "branch": "main",
      "submodules": false,
      "revision": "48a93d0275eba0adf48977609fc100dce8f9b49c",
      "url": "https://github.com/henrysipp/nix-setup/archive/48a93d0275eba0adf48977609fc100dce8f9b49c.tar.gz",
      "hash": "0zlz8x7fv1lz8ma5wyy652s3gdfjda9m81icf9cql6cfrs1w4ixm"
    },
    "icyd-nixvim": {
      "type": "Git",
      "repository": {
        "type": "GitHub",
        "owner": "icyd",
        "repo": "nixvim"
      },
      "branch": "main",
      "submodules": false,
      "revision": "f3b8fb687c6c59af13c569f8201d0359088e2ada",
      "url": "https://github.com/icyd/nixvim/archive/f3b8fb687c6c59af13c569f8201d0359088e2ada.tar.gz",
      "hash": "1k4clhy4ipx92zp8c7q2jgx0q2x10jj19fnsyrlmf6m56wh73kz9"
    },
    "quasigod-nixconfig": {
      "type": "Git",
      "repository": {
        "type": "Forgejo",
        "server": "https://codeberg.org/",
        "owner": "vic",
        "repo": "quasigod-nixconfig"
      },
      "branch": "vic/jj-change-znunzxyumlrt",
      "submodules": false,
      "revision": "4326b7976ff363f83a461700a4567859830906bf",
      "url": "https://codeberg.org/vic/quasigod-nixconfig/archive/4326b7976ff363f83a461700a4567859830906bf.tar.gz",
      "hash": "1pxh0nvxj1g0a7z3ir99gnhllpylr8xn05b1gz2ysw9zngrpnqya"
    },
    "vic-vix": {
      "type": "Git",
      "repository": {
        "type": "GitHub",
        "owner": "vic",
        "repo": "vix"
      },
      "branch": "main",
      "submodules": false,
      "revision": "f31e8a10fd4dc69980d661bbd610f4aa551fbbb0",
      "url": "https://github.com/vic/vix/archive/f31e8a10fd4dc69980d661bbd610f4aa551fbbb0.tar.gz",
      "hash": "0xwszdbjlcgijyzxvidjlspipxxfd8yyffln1ch1ir2pzs7y5078"
    }
  },
  "version": 5
}
</file>

<file path="dev/default.nix">
inputs:
inputs.flake-parts.lib.mkFlake { inherit inputs; } (
  inputs.import-tree [
    ./modules
    ./community
    ./layers/options.nix
  ]
)
</file>

<file path="dev/flake.lock">
{
  "nodes": {
    "dendrix": {
      "flake": false,
      "locked": {
        "path": "..",
        "type": "path"
      },
      "original": {
        "path": "..",
        "type": "path"
      },
      "parent": []
    },
    "devshell": {
      "inputs": {
        "nixpkgs": [
          "nixpkgs"
        ]
      },
      "locked": {
        "lastModified": 1741473158,
        "narHash": "sha256-kWNaq6wQUbUMlPgw8Y+9/9wP0F8SHkjy24/mN3UAppg=",
        "owner": "numtide",
        "repo": "devshell",
        "rev": "7c9e793ebe66bcba8292989a68c0419b737a22a0",
        "type": "github"
      },
      "original": {
        "owner": "numtide",
        "repo": "devshell",
        "type": "github"
      }
    },
    "files": {
      "locked": {
        "lastModified": 1750263550,
        "narHash": "sha256-EW/QJ8i/13GgiynBb6zOMxhLU1uEkRqmzbIDEP23yVA=",
        "owner": "mightyiam",
        "repo": "files",
        "rev": "5f4ef1fd1f9012354a9748be093e277675d10f07",
        "type": "github"
      },
      "original": {
        "owner": "mightyiam",
        "repo": "files",
        "type": "github"
      }
    },
    "flake-compat": {
      "locked": {
        "lastModified": 1747046372,
        "narHash": "sha256-CIVLLkVgvHYbgI2UpXvIIBJ12HWgX+fjA8Xf8PUmqCY=",
        "owner": "edolstra",
        "repo": "flake-compat",
        "rev": "9100a0f413b0c601e0533d1d94ffd501ce2e7885",
        "type": "github"
      },
      "original": {
        "owner": "edolstra",
        "repo": "flake-compat",
        "type": "github"
      }
    },
    "flake-parts": {
      "inputs": {
        "nixpkgs-lib": "nixpkgs-lib"
      },
      "locked": {
        "lastModified": 1749398372,
        "narHash": "sha256-tYBdgS56eXYaWVW3fsnPQ/nFlgWi/Z2Ymhyu21zVM98=",
        "owner": "hercules-ci",
        "repo": "flake-parts",
        "rev": "9305fe4e5c2a6fcf5ba6a3ff155720fbe4076569",
        "type": "github"
      },
      "original": {
        "owner": "hercules-ci",
        "repo": "flake-parts",
        "type": "github"
      }
    },
    "import-tree": {
      "locked": {
        "lastModified": 1751270547,
        "narHash": "sha256-crsdw+SVF+8JewH2npzM5iy2RowD3min24DqzCZX7uQ=",
        "owner": "vic",
        "repo": "import-tree",
        "rev": "e5a363c65db721944ec29d42c210f33f7dee9808",
        "type": "github"
      },
      "original": {
        "owner": "vic",
        "repo": "import-tree",
        "type": "github"
      }
    },
    "nixpkgs": {
      "locked": {
        "lastModified": 1751285371,
        "narHash": "sha256-/hDU+2AUeFFu5qGHO/UyFMc4UG/x5Cw5uXO36KGTk6c=",
        "owner": "nixos",
        "repo": "nixpkgs",
        "rev": "b9c03fbbaf84d85bb28eee530c7e9edc4021ca1b",
        "type": "github"
      },
      "original": {
        "owner": "nixos",
        "ref": "nixpkgs-unstable",
        "repo": "nixpkgs",
        "type": "github"
      }
    },
    "nixpkgs-lib": {
      "locked": {
        "lastModified": 1748740939,
        "narHash": "sha256-rQaysilft1aVMwF14xIdGS3sj1yHlI6oKQNBRTF40cc=",
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "rev": "656a64127e9d791a334452c6b6606d17539476e2",
        "type": "github"
      },
      "original": {
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "type": "github"
      }
    },
    "root": {
      "inputs": {
        "dendrix": "dendrix",
        "devshell": "devshell",
        "files": "files",
        "flake-compat": "flake-compat",
        "flake-parts": "flake-parts",
        "import-tree": "import-tree",
        "nixpkgs": "nixpkgs",
        "systems": "systems",
        "treefmt-nix": "treefmt-nix"
      }
    },
    "systems": {
      "locked": {
        "lastModified": 1681028828,
        "narHash": "sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=",
        "owner": "nix-systems",
        "repo": "default",
        "rev": "da67096a3b9bf56a91d16901293e51ba5b49a27e",
        "type": "github"
      },
      "original": {
        "owner": "nix-systems",
        "repo": "default",
        "type": "github"
      }
    },
    "treefmt-nix": {
      "inputs": {
        "nixpkgs": [
          "nixpkgs"
        ]
      },
      "locked": {
        "lastModified": 1750931469,
        "narHash": "sha256-0IEdQB1nS+uViQw4k3VGUXntjkDp7aAlqcxdewb/hAc=",
        "owner": "numtide",
        "repo": "treefmt-nix",
        "rev": "ac8e6f32e11e9c7f153823abc3ab007f2a65d3e1",
        "type": "github"
      },
      "original": {
        "owner": "numtide",
        "repo": "treefmt-nix",
        "type": "github"
      }
    }
  },
  "root": "root",
  "version": 7
}
</file>

<file path="dev/flake.nix">
{
  outputs = inputs: import ./. inputs;

  nixConfig = {
    extra-trusted-public-keys = [
      "dendrix.cachix.org-1:OdDiPPnm0gukv156krv4p5ZWWcCpIxnlnAFvSqX1H3c="
    ];
    extra-substituters = [ "https://dendrix.cachix.org" ];
  };

  inputs = {
    dendrix.flake = false;
    dendrix.url = "path:..";
    devshell.inputs.nixpkgs.follows = "nixpkgs";
    devshell.url = "github:numtide/devshell";
    files.url = "github:mightyiam/files";
    flake-compat.url = "github:edolstra/flake-compat";
    flake-parts.url = "github:hercules-ci/flake-parts";
    import-tree.url = "github:vic/import-tree";
    nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
    systems.url = "github:nix-systems/default";
    treefmt-nix.inputs.nixpkgs.follows = "nixpkgs";
    treefmt-nix.url = "github:numtide/treefmt-nix";
  };
}
</file>

<file path="templates/default/modules/default.nix">
{ inputs, ... }:
{
  imports = [
    inputs.flake-file.flakeModules.dendritic
  ];

  flake-file.description = "A dendritic setup.";
}
</file>

<file path="templates/default/modules/layers.nix">
{ inputs, ... }:
{
  imports = [
    # inputs.dendrix.vix # see https://github.com/vic/dendrix/tree/main/dev/layers/vix

  ];
}
</file>

<file path="templates/default/flake.lock">
{
  "nodes": {
    "allfollow": {
      "inputs": {
        "nixpkgs": [
          "nixpkgs"
        ],
        "rust-overlay": [
          "rust-overlay"
        ],
        "systems": [
          "systems"
        ]
      },
      "locked": {
        "lastModified": 1751756323,
        "narHash": "sha256-yaLcnuX+N3G5YqBo8/kFSsUPhn99119Ba2K5BpqyMKY=",
        "owner": "spikespaz",
        "repo": "allfollow",
        "rev": "2e9c241c367f1d33e069d9561d86c160276ab6a9",
        "type": "github"
      },
      "original": {
        "owner": "spikespaz",
        "repo": "allfollow",
        "type": "github"
      }
    },
    "devshell": {
      "inputs": {
        "nixpkgs": [
          "nixpkgs"
        ]
      },
      "locked": {
        "lastModified": 1741473158,
        "narHash": "sha256-kWNaq6wQUbUMlPgw8Y+9/9wP0F8SHkjy24/mN3UAppg=",
        "owner": "numtide",
        "repo": "devshell",
        "rev": "7c9e793ebe66bcba8292989a68c0419b737a22a0",
        "type": "github"
      },
      "original": {
        "owner": "numtide",
        "repo": "devshell",
        "type": "github"
      }
    },
    "flake-file": {
      "locked": {
        "lastModified": 1751600876,
        "narHash": "sha256-+frHZbR3w6FXe5/Ls41AJHJp1b0aJiUVdS/Hrrhz9Sc=",
        "owner": "vic",
        "repo": "flake-file",
        "rev": "d515758b175bd0dd76901c0d058a9a49038ef81e",
        "type": "github"
      },
      "original": {
        "owner": "vic",
        "repo": "flake-file",
        "type": "github"
      }
    },
    "flake-parts": {
      "inputs": {
        "nixpkgs-lib": "nixpkgs-lib"
      },
      "locked": {
        "lastModified": 1751413152,
        "narHash": "sha256-Tyw1RjYEsp5scoigs1384gIg6e0GoBVjms4aXFfRssQ=",
        "owner": "hercules-ci",
        "repo": "flake-parts",
        "rev": "77826244401ea9de6e3bac47c2db46005e1f30b5",
        "type": "github"
      },
      "original": {
        "owner": "hercules-ci",
        "repo": "flake-parts",
        "type": "github"
      }
    },
    "import-tree": {
      "locked": {
        "lastModified": 1751399845,
        "narHash": "sha256-iun7//YHeEFgEOcG4KKKoy3d2GWOYqokLFVU/zIs79Y=",
        "owner": "vic",
        "repo": "import-tree",
        "rev": "e24a50ff9b5871d4bdd8900679784812eeb120ea",
        "type": "github"
      },
      "original": {
        "owner": "vic",
        "repo": "import-tree",
        "type": "github"
      }
    },
    "nixpkgs-lib": {
      "locked": {
        "lastModified": 1751159883,
        "narHash": "sha256-urW/Ylk9FIfvXfliA1ywh75yszAbiTEVgpPeinFyVZo=",
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "rev": "14a40a1d7fb9afa4739275ac642ed7301a9ba1ab",
        "type": "github"
      },
      "original": {
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "type": "github"
      }
    },
    "nixpkgs_3": {
      "locked": {
        "lastModified": 1751786137,
        "narHash": "sha256-lIlUKVGCGsh0Q2EA7/6xRtKUZjaQ/ur8uUyY+MynHXQ=",
        "owner": "nixos",
        "repo": "nixpkgs",
        "rev": "ceb24d94c6feaa4e8737a8e2bd3cf71c3a7eaaa0",
        "type": "github"
      },
      "original": {
        "owner": "nixos",
        "ref": "nixpkgs-unstable",
        "repo": "nixpkgs",
        "type": "github"
      }
    },
    "root": {
      "inputs": {
        "allfollow": "allfollow",
        "devshell": "devshell",
        "flake-file": "flake-file",
        "flake-parts": "flake-parts",
        "import-tree": "import-tree",
        "nixpkgs": "nixpkgs_3",
        "rust-overlay": "rust-overlay_2",
        "systems": "systems_2",
        "treefmt-nix": "treefmt-nix"
      }
    },
    "rust-overlay_2": {
      "inputs": {
        "nixpkgs": [
          "nixpkgs"
        ]
      },
      "locked": {
        "lastModified": 1751856221,
        "narHash": "sha256-/QE1eV0ckFvgRMcKjZqgdJDoXFNwSMepwRoBjaw2MCk=",
        "owner": "oxalica",
        "repo": "rust-overlay",
        "rev": "34cae4b56929c5b340e1c5b10d9a98a425b2a51e",
        "type": "github"
      },
      "original": {
        "owner": "oxalica",
        "repo": "rust-overlay",
        "type": "github"
      }
    },
    "systems_2": {
      "locked": {
        "lastModified": 1681028828,
        "narHash": "sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=",
        "owner": "nix-systems",
        "repo": "default",
        "rev": "da67096a3b9bf56a91d16901293e51ba5b49a27e",
        "type": "github"
      },
      "original": {
        "owner": "nix-systems",
        "repo": "default",
        "type": "github"
      }
    },
    "treefmt-nix": {
      "inputs": {
        "nixpkgs": [
          "nixpkgs"
        ]
      },
      "locked": {
        "lastModified": 1750931469,
        "narHash": "sha256-0IEdQB1nS+uViQw4k3VGUXntjkDp7aAlqcxdewb/hAc=",
        "owner": "numtide",
        "repo": "treefmt-nix",
        "rev": "ac8e6f32e11e9c7f153823abc3ab007f2a65d3e1",
        "type": "github"
      },
      "original": {
        "owner": "numtide",
        "repo": "treefmt-nix",
        "type": "github"
      }
    }
  },
  "root": "root",
  "version": 7
}
</file>

<file path="templates/default/flake.nix">
# DO-NOT-EDIT. This file was auto-generated using github:vic/flake-file.
# Use `nix run .#write-flake` to regenerate it.
{
  description = "A dendritic setup.";
  inputs = {
    allfollow = {
      url = "github:spikespaz/allfollow";
    };
    devshell = {
      url = "github:numtide/devshell";
    };
    flake-file = {
      url = "github:vic/flake-file";
    };
    flake-parts = {
      url = "github:hercules-ci/flake-parts";
    };
    import-tree = {
      url = "github:vic/import-tree";
    };
    nixpkgs = {
      url = "github:nixos/nixpkgs/nixpkgs-unstable";
    };
    rust-overlay = {
      inputs = {
        nixpkgs = {
          follows = "nixpkgs";
        };
      };
      url = "github:oxalica/rust-overlay";
    };
    systems = {
      url = "github:nix-systems/default";
    };
    treefmt-nix = {
      url = "github:numtide/treefmt-nix";
    };
  };
  outputs = inputs: inputs.flake-parts.lib.mkFlake { inherit inputs; } (inputs.import-tree ./modules);
}
</file>

<file path="templates/vix/modules/default.nix">
{ inputs, ... }:
{
  imports = [
    inputs.flake-parts.flakeModules.modules
  ];

  systems = import inputs.systems;
}
</file>

<file path="templates/vix/modules/layers.nix">
{ inputs, ... }:
{
  imports = [
    inputs.dendrix.vix # see https://github.com/vic/dendrix/tree/main/dev/layers/vix
  ];
}
</file>

<file path="templates/vix/flake.lock">
{
  "nodes": {
    "dendrix": {
      "inputs": {
        "import-tree": "import-tree",
        "nixpkgs-lib": "nixpkgs-lib"
      },
      "locked": {
        "path": "./../..",
        "type": "path"
      },
      "original": {
        "path": "./../..",
        "type": "path"
      },
      "parent": []
    },
    "flake-parts": {
      "inputs": {
        "nixpkgs-lib": "nixpkgs-lib_2"
      },
      "locked": {
        "lastModified": 1749398372,
        "narHash": "sha256-tYBdgS56eXYaWVW3fsnPQ/nFlgWi/Z2Ymhyu21zVM98=",
        "owner": "hercules-ci",
        "repo": "flake-parts",
        "rev": "9305fe4e5c2a6fcf5ba6a3ff155720fbe4076569",
        "type": "github"
      },
      "original": {
        "owner": "hercules-ci",
        "repo": "flake-parts",
        "type": "github"
      }
    },
    "import-tree": {
      "locked": {
        "lastModified": 1751270547,
        "narHash": "sha256-crsdw+SVF+8JewH2npzM5iy2RowD3min24DqzCZX7uQ=",
        "owner": "vic",
        "repo": "import-tree",
        "rev": "e5a363c65db721944ec29d42c210f33f7dee9808",
        "type": "github"
      },
      "original": {
        "owner": "vic",
        "repo": "import-tree",
        "type": "github"
      }
    },
    "import-tree_2": {
      "locked": {
        "lastModified": 1751270547,
        "narHash": "sha256-crsdw+SVF+8JewH2npzM5iy2RowD3min24DqzCZX7uQ=",
        "owner": "vic",
        "repo": "import-tree",
        "rev": "e5a363c65db721944ec29d42c210f33f7dee9808",
        "type": "github"
      },
      "original": {
        "owner": "vic",
        "repo": "import-tree",
        "type": "github"
      }
    },
    "nixpkgs": {
      "locked": {
        "lastModified": 1751251929,
        "narHash": "sha256-IJWIzZSkBsDzS7iS/iwSwur+xFkWqeLYC4kdf8ObtOM=",
        "owner": "nixos",
        "repo": "nixpkgs",
        "rev": "b95255df2360a45ddbb03817a68869d5cb01bf96",
        "type": "github"
      },
      "original": {
        "owner": "nixos",
        "ref": "nixpkgs-unstable",
        "repo": "nixpkgs",
        "type": "github"
      }
    },
    "nixpkgs-lib": {
      "locked": {
        "lastModified": 1751159883,
        "narHash": "sha256-urW/Ylk9FIfvXfliA1ywh75yszAbiTEVgpPeinFyVZo=",
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "rev": "14a40a1d7fb9afa4739275ac642ed7301a9ba1ab",
        "type": "github"
      },
      "original": {
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "type": "github"
      }
    },
    "nixpkgs-lib_2": {
      "locked": {
        "lastModified": 1748740939,
        "narHash": "sha256-rQaysilft1aVMwF14xIdGS3sj1yHlI6oKQNBRTF40cc=",
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "rev": "656a64127e9d791a334452c6b6606d17539476e2",
        "type": "github"
      },
      "original": {
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "type": "github"
      }
    },
    "root": {
      "inputs": {
        "dendrix": "dendrix",
        "flake-parts": "flake-parts",
        "import-tree": "import-tree_2",
        "nixpkgs": "nixpkgs",
        "systems": "systems"
      }
    },
    "systems": {
      "locked": {
        "lastModified": 1681028828,
        "narHash": "sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=",
        "owner": "nix-systems",
        "repo": "default",
        "rev": "da67096a3b9bf56a91d16901293e51ba5b49a27e",
        "type": "github"
      },
      "original": {
        "owner": "nix-systems",
        "repo": "default",
        "type": "github"
      }
    }
  },
  "root": "root",
  "version": 7
}
</file>

<file path="templates/vix/flake.nix">
{
  outputs = inputs: inputs.flake-parts.lib.mkFlake { inherit inputs; } (inputs.import-tree ./modules);

  inputs = {
    dendrix.url = "path:./../..";
    flake-parts.url = "github:hercules-ci/flake-parts";
    import-tree.url = "github:vic/import-tree";
    systems.url = "github:nix-systems/default";
    nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
  };
}
</file>

<file path=".envrc">
use flake path:dev
</file>

<file path=".gitignore">
.direnv
.vscode
elm-stuff
result
</file>

<file path="default.nix">
inputs:
let
  inherit (inputs.nixpkgs-lib) lib;

  dendrix =
    community
    // layers
    // {
      inherit sources;
    };

  sources = import ./dev/npins;
  community = lib.mapAttrs (_: r: r.import-tree) ev.config.dendrix.community;
  layers = ev.config.dendrix.layers;

  module = inputs.import-tree [
    ./dev/community
    ./dev/layers/options.nix
  ];

  ev = lib.modules.evalModules {
    modules = [ module ];
    specialArgs = { inherit inputs; };
  };
in
dendrix
</file>

<file path="flake.lock">
{
  "nodes": {
    "import-tree": {
      "locked": {
        "lastModified": 1751270547,
        "narHash": "sha256-crsdw+SVF+8JewH2npzM5iy2RowD3min24DqzCZX7uQ=",
        "owner": "vic",
        "repo": "import-tree",
        "rev": "e5a363c65db721944ec29d42c210f33f7dee9808",
        "type": "github"
      },
      "original": {
        "owner": "vic",
        "repo": "import-tree",
        "type": "github"
      }
    },
    "nixpkgs-lib": {
      "locked": {
        "lastModified": 1751159883,
        "narHash": "sha256-urW/Ylk9FIfvXfliA1ywh75yszAbiTEVgpPeinFyVZo=",
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "rev": "14a40a1d7fb9afa4739275ac642ed7301a9ba1ab",
        "type": "github"
      },
      "original": {
        "owner": "nix-community",
        "repo": "nixpkgs.lib",
        "type": "github"
      }
    },
    "root": {
      "inputs": {
        "import-tree": "import-tree",
        "nixpkgs-lib": "nixpkgs-lib"
      }
    }
  },
  "root": "root",
  "version": 7
}
</file>

<file path="flake.nix">
{
  outputs = inputs: import ./. inputs;
  inputs.import-tree.url = "github:vic/import-tree";
  inputs.nixpkgs-lib.url = "github:nix-community/nixpkgs.lib";
}
</file>

<file path="LICENSE">
Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "[]"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright [yyyy] [name of copyright owner]

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
</file>

<file path="README.md">
> Documentation has moved to our site: https://vic.github.io/dendrix

# Dendrix - community-driven distribution of Dendritic Nix configurations.

Editor-distributions like those for nvim/emacs provide community-driven, opinionated configurations that can be easily reused and enabled by newcomers.

The `dendrix` project aims to provide the same experience: having community-managed, author-maintained and no-barrier-of-entry [setups](https://vic.github.io/dendrix/Dendrix-Layers.html) for everything that can be configured using [flake-parts modules](https://flake.parts/options/flake-parts-modules.html).

In a sense, this repository is akin to [nix-community/NUR](https://github.com/nix-community/NUR) but for flake-parts [dendritic](https://vic.github.io/dendrix/Dendritic.html) modules that can provide packages and aspects to many different nix configuration classes.

> Dendrix is an on-going effort. We already have all the code infrastructure on this repo to provide [Layers](https://vic.github.io/dendrix/Dendrix-Layers.html)
> and [aspect import-trees](https://vic.github.io/dendrix/Dendrix-Trees.html) from community repositories.
>
> However as any _community_ project, the success of Dendrix depends not on a single person, but on people willing to participate on it.
>
> Join us by using Dendrix' exposed trees or by sharing part of your configs with the community, or by joining the [discussion](https://github.com/vic/dennix/discussions) on how to better come up with community-managed configurations.
>
> It all depends on each of us.

Made with <3 by [@vic](https://github.com/vic)
</file>

</files>
