{
  description = "Aleron Nix environment";

  inputs = {
    nixpkgs.url =
      "github:NixOS/nixpkgs/master";

    darwin.url =
      "github:lnl7/nix-darwin/master";
    darwin.inputs.nixpkgs.follows = "nixpkgs";
  };

  outputs = { self, nixpkgs, darwin }: {
    overlays.darwin = (final: prev:
      let
        pkgs = final;
        inherit (pkgs.stdenvNoCC) mkDerivation;
        inherit (pkgs) coursier;
      in {
        coursierPackages = {
          graalvm = mkDerivation rec {
            name = "graalvm-ce-java8";
            version = "20.3.0";
            buildCommand = ''
              mkdir -p $out/bin $out/share/coursier
              export COURSIER_CACHE=$out/share/coursier/cache
              export COURSIER_JVM_CACHE=$out/share/coursier/jvm
              export COURSIER_INSTALL_DIR=$out/share/coursier/installed
              export COURSIER_BIN_DIR=$out/bin

              ${coursier}/bin/coursier java-home ${name}:${version} --quiet > java-home
              export JAVA_HOME=$(< java-home)
              mkdir -p $out/bin
              cp java-home $out/
              ln -s $JAVA_HOME/bin/* $out/bin/

              # Set JAVA_HOME automatically.
              mkdir -p $out/nix-support/
              cat <<EOF >> $out/nix-support/setup-hook
              if [ -z "\''${JAVA_HOME-}" ]; then export JAVA_HOME="$(< java-home)"; fi
              EOF
            '';
            #outputHashMode = "recursive";
            #outputHashAlgo = "sha256";
            #outputHash     = "sha256-SOOg9hLVvmWQ5QcsjJzfUCS0dHFM3P9p42h1r6VKMHE=";
          };
        };
      });

    nixosConfigurations.aleron = darwin.lib.darwinSystem {
      modules = [{ nixpkgs.overlays = [ self.overlays.darwin ]; }];
    };

    packages.x86_64-darwin = self.nixosConfigurations.aleron.pkgs;

    devShell.x86_64-darwin = with self.nixosConfigurations.aleron.pkgs;
      mkShell {
        buildInputs = [
          jq
          coursier
          dbmate
          emacsMacport
          fish
          gettext
          git-lfs
          kubernetes-helm
          mill
          nodejs
          google-cloud-sdk
          jdk
          kubectl
          # coursierPackages.graalvm
          postgresql
          metals
        ];

        shellHook = ''
          echo Welcome to Aleron
        '';
      };

  };
}
